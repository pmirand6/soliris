--
-- Script was generated by Devart dbForge Studio 2019 for MySQL, Version 8.2.23.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 22/04/2020 1:41:32
-- Server version: 5.7.24
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

DROP DATABASE IF EXISTS soliris;

CREATE DATABASE IF NOT EXISTS soliris
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Set default database
--
USE soliris;

--
-- Create table `maestro_estado`
--
CREATE TABLE IF NOT EXISTS maestro_estado (
  id int(11) NOT NULL AUTO_INCREMENT,
  valor varchar(255) DEFAULT NULL COMMENT 'Ejemplos: Activo, Inactivo, Baja',
  tipo varchar(255) DEFAULT NULL COMMENT 'Ejemplo: Paciente, Venta, Documento',
  referencia varchar(255) DEFAULT NULL COMMENT 'Notas al estado',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 32,
AVG_ROW_LENGTH = 546,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

DELIMITER $$

--
-- Create procedure `ST_LIST_SUB_ESTADOS_PACIENTE`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_SUB_ESTADOS_PACIENTE ()
COMMENT 'Lista los subestados del paciente'
BEGIN

  SELECT
    id,
    valor
  FROM maestro_estado e
  WHERE e.referencia = 'paciente'
  AND e.tipo = 'sub_estado';

END
$$

--
-- Create procedure `ST_LIST_ESTADOS_PACIENTE`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_ESTADOS_PACIENTE ()
COMMENT 'LISTA LOS ESTADO DEL PACIENTE'
BEGIN

  SELECT
    id,
    valor
  FROM maestro_estado e
  WHERE e.referencia = 'paciente'
  AND e.tipo = 'estado';

END
$$

DELIMITER ;

--
-- Create table `rol`
--
CREATE TABLE IF NOT EXISTS rol (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  nombre varchar(100) NOT NULL DEFAULT '',
  estado_id int(11) NOT NULL DEFAULT 3,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 8,
AVG_ROW_LENGTH = 2340,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create foreign key
--
ALTER TABLE rol
ADD CONSTRAINT FK_rol_estado FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id) ON DELETE NO ACTION ON UPDATE CASCADE;

--
-- Create table `usuario`
--
CREATE TABLE IF NOT EXISTS usuario (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  username varchar(45) NOT NULL DEFAULT '',
  email varchar(255) NOT NULL DEFAULT '0',
  estado_id int(11) DEFAULT NULL,
  rol_id int(11) UNSIGNED NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 58,
AVG_ROW_LENGTH = 682,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create foreign key
--
ALTER TABLE usuario
ADD CONSTRAINT FK_usuario_estado FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id) ON DELETE NO ACTION ON UPDATE CASCADE;

--
-- Create foreign key
--
ALTER TABLE usuario
ADD CONSTRAINT FK_usuario_rol FOREIGN KEY (rol_id)
REFERENCES rol (id) ON DELETE NO ACTION ON UPDATE CASCADE;

DELIMITER $$

--
-- Create function `FU_UP_USR`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_USR (`v_usuario` varchar(45),
`v_grupo` varchar(45),
`v_familia` varchar(3),
`v_mail` varchar(90),
`v_estado` varchar(45),
`v_id` int)
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  UPDATE soliris_usuarios
  SET usuario = v_usuario,
      grupo = v_grupo,
      familia = v_familia,
      mail = v_mail,
      estado = v_estado
  WHERE id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_UP_PANEL_MOD`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_PANEL_MOD (`v_id` int,
`v_comentario` varchar(255),
`v_estado` varchar(45),
`v_grupo` varchar(45),
`v_validacion` varchar(5),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  UPDATE soliris_maestro
  SET autoriza = v_usuario,
      autoriza_fecha = NOW(),
      autoriza_nota = v_comentario,
      estado = v_estado,
      validacion = v_validacion,
      grupo = 'ventas'
  WHERE id = v_id;

  INSERT INTO soliris_notas
  SET tabla = 'soliris_maestro',
      registro = v_id,
      notas = v_comentario,
      fecha = NOW(),
      usuario = v_usuario,
      grupo = v_grupo,
      estado = v_estado;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;
END
$$

--
-- Create function `FU_NEW_USR`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_USR (`v_usuario` varchar(45),
`v_grupo` varchar(45),
`v_familia` varchar(3),
`v_mail` varchar(90))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO soliris_usuarios (usuario,
  grupo,
  familia,
  mail,
  estado)
    SELECT
      v_usuario,
      v_grupo,
      v_familia,
      v_mail,
      'Activo'
    FROM dual
    WHERE NOT EXISTS (SELECT
        *
      FROM soliris_usuarios
      WHERE usuario = v_usuario
      AND grupo = v_grupo
      AND familia = v_familia
      AND mail = v_mail);

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create function `FU_GET_USERNAME_USUARIO`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_GET_USERNAME_USUARIO (`v_idUsuario` int)
RETURNS varchar(50) CHARSET latin1
COMMENT 'devuelve el username del id del usuario'
BEGIN

  RETURN (SELECT
      u.username
    FROM usuario u
    WHERE u.id = v_idUsuario);

END
$$

--
-- Create function `FU_GET_ID_USUARIO`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_GET_ID_USUARIO (`v_username` varchar(50))
RETURNS int(11)
COMMENT 'devuelve el id del usuario'
BEGIN

  RETURN (SELECT
      u.id AS id_usuario
    FROM usuario u
    WHERE u.username = v_username);

END
$$

--
-- Create procedure `ST_UserAccess`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_UserAccess (IN `v_usuario` varchar(50))
COMMENT 'valida el estado y la existencia del usuario en el sistema. Devuelve las propiedades de grupo y la familia'
BEGIN

  DECLARE res int;

  SET res = (SELECT
      COUNT(*)
    FROM usuario
    WHERE username = v_usuario
    AND estado_id = (SELECT
        id
      FROM maestro_estado
      WHERE tipo = 'Estado'
      AND referencia = 'usuario'
      AND valor = 'Activo'));

  IF (res > 0) THEN
    SELECT
      u.id,
      u.username,
      r.nombre AS 'grupo'
    FROM usuario u
      INNER JOIN rol r
        ON u.rol_id = r.id
    WHERE username = v_usuario;
  ELSE
    -- Trabajar con la tabla de mensajes
    SELECT
      "Mensaje de error";

  END IF;

END
$$

--
-- Create procedure `ST_SHOW_USUARIO`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_USUARIO (IN `v_id` int)
COMMENT 'Muestra los datos del usuario'
BEGIN

  SELECT
    u.id,
    u.username,
    u.email,
    m.valor AS estado,
    r.nombre AS rol_nombre
  FROM usuario u
    INNER JOIN maestro_estado m
      ON m.id = u.estado_id
    INNER JOIN rol r
      ON r.id = u.rol_id
  WHERE u.id = v_id;


END
$$

--
-- Create procedure `ST_LIST_USUARIOS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_USUARIOS ()
COMMENT 'Lista los usuarios del sistema'
BEGIN

  SELECT
    u.id,
    u.username,
    u.email,
    m.valor AS estado,
    r.nombre AS rol_nombre
  FROM usuario u
    INNER JOIN maestro_estado m
      ON m.id = u.estado_id
    INNER JOIN rol r
      ON r.id = u.rol_id
  ORDER BY username DESC;

END
$$

DELIMITER ;

--
-- Create table `apm`
--
CREATE TABLE IF NOT EXISTS apm (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  codigo_apm_np int(10) UNSIGNED NOT NULL DEFAULT 0,
  estado_id int(11) NOT NULL DEFAULT 17,
  usuario_audit int(11) UNSIGNED NOT NULL,
  fecha_audit timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  username varchar(45) DEFAULT NULL,
  email varchar(50) DEFAULT NULL,
  nombre_completo varchar(50) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 14,
AVG_ROW_LENGTH = 2048,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `email` on table `apm`
--
ALTER TABLE apm
ADD UNIQUE INDEX email (email);

--
-- Create foreign key
--
ALTER TABLE apm
ADD CONSTRAINT FK_estado_apm FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id);

--
-- Create foreign key
--
ALTER TABLE apm
ADD CONSTRAINT FK_usuario_apm FOREIGN KEY (usuario_audit)
REFERENCES usuario (id);

DELIMITER $$

--
-- Create function `FU_UP_APM`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_APM (`v_id` int,
`v_estado` varchar(45),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  SET @usuario_id = (SELECT
      FU_GET_ID_USUARIO(v_usuario));
  UPDATE apm
  SET estado_id = (SELECT
          m.id
        FROM maestro_estado m
        WHERE m.valor = v_estado
        AND m.referencia = 'apm'),
      usuario_audit = @usuario_id
  WHERE id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_NEW_APM`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_APM (`v_nombre` varchar(100),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO apm (nombre,
  estado,
  usuario_audit)
    SELECT
      v_nombre,
      'Activo',
      v_usuario
    FROM dual
    WHERE NOT EXISTS (SELECT
        *
      FROM apm
      WHERE nombre = v_nombre);

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create procedure `ST_SHOW_APM`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_APM (IN `v_idApm` int)
COMMENT 'Muestra la informacion de un apm '
BEGIN

  SELECT
    a.*,
    m.valor AS estado
  FROM apm a
    INNER JOIN maestro_estado m
      ON m.id = a.estado_id
  WHERE a.id = v_idApm
  ORDER BY id DESC;

END
$$

--
-- Create procedure `ST_NEW_APM`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_NEW_APM (IN `v_estado` varchar(50),
IN `v_usuario_audit` varchar(50),
IN `v_username` varchar(50),
IN `v_email` varchar(50),
IN `v_nombre_completo` varchar(50))
COMMENT 'Crea un Apm'
BEGIN

  SET @estado_id = (SELECT
      m.id
    FROM maestro_estado m
    WHERE m.referencia = 'apm'
    AND m.valor = v_estado);
  SET @user_id = (SELECT
      FU_GET_ID_USUARIO(v_usuario_audit));

  INSERT INTO apm (estado_id
  , usuario_audit
  , fecha_audit
  , username
  , email
  , nombre_completo)
    VALUES (@estado_id -- estado_id - INT(11) NOT NULL
    , @user_id -- usuario_audit - VARCHAR(45)
    , NOW() -- fecha_audit - TIMESTAMP
    , v_username -- username - VARCHAR(45)
    , v_email -- email - VARCHAR(50)
    , v_nombre_completo -- nombre_completo - VARCHAR(50)
    );

END
$$

--
-- Create procedure `ST_LIST_APM_ACTIVOS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_APM_ACTIVOS ()
COMMENT 'Lista los APM activos'
BEGIN

  SELECT
    a.*,
    m.valor AS estado
  FROM apm a
    INNER JOIN maestro_estado m
      ON m.id = a.estado_id
  WHERE a.estado_id = 17
  ORDER BY a.nombre_completo DESC;

END
$$

--
-- Create procedure `ST_LIST_APM`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_APM ()
COMMENT 'Lista los apm del sistema'
BEGIN

  SELECT
    a.*,
    m.valor AS estado
  FROM apm a
    INNER JOIN maestro_estado m
      ON m.id = a.estado_id
  ORDER BY a.nombre_completo DESC;

END
$$

DELIMITER ;

--
-- Create table `producto`
--
CREATE TABLE IF NOT EXISTS producto (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  codigo_np varchar(255) NOT NULL DEFAULT '0',
  familia varchar(3) NOT NULL,
  valor varchar(255) NOT NULL,
  estado_id int(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 2,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create foreign key
--
ALTER TABLE producto
ADD CONSTRAINT FK_producto_estado FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id);

--
-- Create table `presentacion`
--
CREATE TABLE IF NOT EXISTS presentacion (
  id int(11) NOT NULL AUTO_INCREMENT,
  valor varchar(50) NOT NULL DEFAULT '',
  producto_id int(11) UNSIGNED NOT NULL,
  codigo_np int(123) DEFAULT NULL,
  familia varchar(3) DEFAULT 'SOL',
  usuario_audit int(11) UNSIGNED NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 27,
AVG_ROW_LENGTH = 4096,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla de dosis de presentaciones';

--
-- Create foreign key
--
ALTER TABLE presentacion
ADD CONSTRAINT FK_pres_usuario FOREIGN KEY (usuario_audit)
REFERENCES usuario (id);

--
-- Create foreign key
--
ALTER TABLE presentacion
ADD CONSTRAINT FK_presentacion_producto FOREIGN KEY (producto_id)
REFERENCES producto (id);

DELIMITER $$

--
-- Create function `FU_UP_PRESENTACION`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_PRESENTACION (`v_nombre` varchar(45),
`v_familia` varchar(3),
`v_usuario` varchar(45),
`v_id` int)
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  SET @nombreProducto = (SELECT
      UPPER(prod.valor)
    FROM producto prod
      INNER JOIN presentacion p
        ON p.producto_id = prod.id
    WHERE p.id = v_id);
  SET @usuario_audit = (SELECT
      FU_GET_ID_USUARIO(v_usuario));
  UPDATE presentacion p
  SET p.valor = CONCAT(@nombreProducto, ' ', v_nombre),
      p.usuario_audit = @usuario_audit
  WHERE p.id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_NEW_PRESENTACION`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_PRESENTACION (`v_nombre` varchar(45),
`v_familia` varchar(3),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  SET @usuario_audit = (SELECT
      FU_GET_ID_USUARIO(v_usuario));
  SET @productoNombre = (SELECT
      UPPER(prod.valor)
    FROM producto prod
    WHERE prod.familia = v_familia);
  SET @productoId = (SELECT
      prod.id
    FROM producto prod
    WHERE prod.familia = v_familia);
  SET @valorNombre = (SELECT
      CONCAT(@productoNombre, ' ', v_nombre));
  SET @countIdentico = (SELECT
      COUNT(*)
    FROM presentacion p
    WHERE p.valor = @productoNombre
    AND p.familia = v_familia);

  IF (@countIdentico = 0) THEN

    INSERT INTO presentacion (valor, familia, usuario_audit, producto_id)
      VALUES (@valorNombre, v_familia, @usuario_audit, @productoId);

    RETURN LAST_INSERT_ID();

  ELSE
    RETURN 'ERROR NO_INSERT';
  END IF;

END
$$

--
-- Create procedure `ST_LIST_PRESENTACION`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_PRESENTACION ()
COMMENT 'Lista las dosis del sistema'
BEGIN

  SELECT
    *
  FROM presentacion;

END
$$

DELIMITER ;

--
-- Create table `patologia`
--
CREATE TABLE IF NOT EXISTS patologia (
  id int(11) NOT NULL AUTO_INCREMENT,
  patologia_nombre varchar(100) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  estado_id int(11) DEFAULT 5 COMMENT 'ID de Estado',
  familia varchar(3) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT 'SOL',
  usuario_audit varchar(45) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  fecha_audit timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 23,
AVG_ROW_LENGTH = 2730,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Tabla de patologias';

--
-- Create foreign key
--
ALTER TABLE patologia
ADD CONSTRAINT FK_pat_estado FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id) ON DELETE SET NULL ON UPDATE CASCADE;

DELIMITER $$

--
-- Create function `get_paciente`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION get_paciente (`v_id` int)
RETURNS longtext CHARSET latin1
COMMENT 'devuelve el nombre del paciente en base a su id'
BEGIN

  DECLARE d_resp longtext;


  SET d_resp = (SELECT
      CONCAT(nombre, "|", sexo, "|", patologia, "|", c_gestar)
    FROM pacientes
    WHERE id = v_id);

  RETURN d_resp;

END
$$

--
-- Create function `FU_GET_VENTA_MOD`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_GET_VENTA_MOD (`v_idMstr` int,
`v_fechas` int)
RETURNS varchar(100) CHARSET latin1
COMMENT 'Funcion para obternet los datos de la venta'
BEGIN

  DECLARE dev varchar(100);

  IF (v_fechas = 0) THEN
    SET dev = (SELECT
        CONCAT(rv.id, "|", (SUBSTRING_INDEX((get_paciente(rv.nombre)), '|', 1)), "|", rv.medico, "|", rv.presentacion, "|", rv.unidades, "|", rv.estado) AS datosVenta
      FROM soliris_maestro rv
      WHERE rv.id = v_idMstr);
  ELSE
    SET dev = (SELECT
        CONCAT(IFNULL(rv.fecha_venta, "Sin Fecha de Venta"), "|", (IFNULL(rv.fecha_receta, "Sin Fecha Receta")), "|", IFNULL(rv.fecha_test, "Sin Fecha de Test"), "|", IFNULL(rv.fecha_otro, "Sin Fecha")) AS datosFechas
      FROM soliris_maestro rv
      WHERE rv.id = v_idMstr);

  END IF;

  IF (FOUND_ROWS() = 0) THEN
    RETURN FOUND_ROWS();
  ELSE
    RETURN dev;
  END IF;

END
$$

--
-- Create function `FU_UP_PATOLOGIA`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_PATOLOGIA (`v_patologia` varchar(100),
`v_familia` varchar(3),
`v_estado` varchar(45)
,
`v_usuario` varchar(45)

,
`v_id` int)
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  UPDATE patologia
  SET patologia_nombre = v_patologia,
      familia = v_familia,
      estado_id = (SELECT
          m.id
        FROM maestro_estado m
        WHERE m.valor = v_estado
        AND m.referencia = 'patologia'),
      usuario_audit = v_usuario
  WHERE id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_UP_PAC`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_PAC (`v_nombre` varchar(200),
`v_estado` varchar(45),
`v_sub_estado` varchar(45),
`v_sexo` varchar(2),
`v_c_gestar` varchar(2),
`v_patologia` varchar(250),
`v_fecha_nac` date,
`v_telefono` varchar(45),
`v_ciudad` varchar(100),
`v_mail` varchar(100),
`v_fecha_con` date,
`v_usuario` varchar(45),
`v_fv` int,
`v_aprobado` varchar(45),
`v_id` int)
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  IF v_aprobado <> '' THEN
    UPDATE pacientes
    SET aprobado = v_aprobado,
        fecha_aprobado = NOW()
    WHERE id = v_id;
  END IF;

  UPDATE pacientes
  SET Nombre = v_nombre,
      estado = v_estado,
      sub_estado = v_sub_estado,
      sexo = v_sexo,
      c_gestar = v_c_gestar,
      Patologia = v_patologia,
      fecha_nac = v_fecha_nac,
      telefono = v_telefono,
      Ciudad = v_ciudad,
      mail = v_mail,
      Fecha_Con = v_fecha_con,
      usuario = v_usuario,
      fv = v_fv,
      fecha_stamp = NOW()
  WHERE id = v_id;



  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_NEW_PATOLOGIA`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_PATOLOGIA (`v_patologia` varchar(100),
`v_familia` varchar(3),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO patologia (patologia_nombre,
  familia,
  estado_id,
  usuario_audit)
    SELECT
      v_patologia,
      v_familia,
      5,
      v_usuario
    FROM dual
    WHERE NOT EXISTS (SELECT
        *
      FROM patologia
      WHERE patologia_nombre = v_patologia
      AND familia = v_familia
      AND usuario_audit = v_usuario);

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create function `FU_NEW_PAC`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_PAC (`v_nombre` varchar(200), `v_estado` varchar(45), `v_sub_estado` varchar(45), `v_sexo` varchar(2), `v_c_gestar` varchar(2), `v_patologia` varchar(250), `v_fecha_nac` date, `v_telefono` varchar(45), `v_ciudad` varchar(100), `v_mail` varchar(100), `v_fecha_con` date, `v_usuario` varchar(45), `v_fv` int)
RETURNS longtext CHARSET utf8mb4
READS SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO pacientes (Nombre,
  estado,
  sub_estado,
  sexo,
  c_gestar,
  Patologia,
  fecha_nac,
  telefono,
  Ciudad,
  mail,
  Fecha_Con,
  usuario,
  fecha_alta,
  fv,
  fecha_stamp)
    SELECT
      v_nombre,
      v_estado,
      v_sub_estado,
      v_sexo,
      v_c_gestar,
      v_Patologia,
      v_fecha_nac,
      v_telefono,
      v_Ciudad,
      v_mail,
      v_Fecha_Con,
      v_usuario,
      NOW(),
      v_fv,
      NOW()
    FROM dual
    WHERE NOT EXISTS (SELECT
        *
      FROM pacientes
      WHERE Nombre = v_nombre
      AND estado = v_estado
      AND sub_estado = v_sub_estado
      AND sexo = v_sexo
      AND c_gestar = v_c_gestar
      AND Patologia = v_patologia
      AND fecha_nac = v_fecha_nac
      AND telefono = v_telefono
      AND Ciudad = v_ciudad
      AND mail = v_mail
      AND Fecha_Con = v_fecha_con
      AND usuario = v_usuario
      AND fecha_alta = NOW()
      AND fv = v_fv
      AND fecha_stamp = NOW());

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create procedure `ST_SHOW_PATOLOGIA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_PATOLOGIA (IN `v_id` int)
COMMENT 'Muestra la patologia'
BEGIN

  SELECT
    p.*,
    m.valor AS estado
  FROM patologia p
    INNER JOIN maestro_estado m
      ON m.id = p.estado_id
  WHERE p.id = v_id;

END
$$

--
-- Create procedure `ST_LIST_PATOLOGIAS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_PATOLOGIAS ()
COMMENT 'Lista las patologias del sistema'
BEGIN

  SELECT
    p.*,
    m.valor AS estado
  FROM patologia p
    INNER JOIN maestro_estado m
      ON m.id = p.estado_id;

END
$$

--
-- Create procedure `ST_GET_PATOLOGIAS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GET_PATOLOGIAS ()
COMMENT 'Devuelve todas las patologias activas'
BEGIN

  SELECT
    p.id,
    p.patologia_nombre
  FROM patologia p
  WHERE p.estado_id = (SELECT
      m.id
    FROM maestro_estado m
    WHERE m.referencia = 'patologia'
    AND m.valor = 'Activo');

END
$$

DELIMITER ;

--
-- Create table `medico_matricula_tipo`
--
CREATE TABLE IF NOT EXISTS medico_matricula_tipo (
  id int(11) NOT NULL AUTO_INCREMENT,
  valor varchar(50) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 8192,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create table `medico_matricula`
--
CREATE TABLE IF NOT EXISTS medico_matricula (
  id int(11) NOT NULL AUTO_INCREMENT,
  tipo_matricula_id int(11) NOT NULL DEFAULT 0,
  valor varchar(50) NOT NULL DEFAULT '0',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 25,
AVG_ROW_LENGTH = 682,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Maestro de medicos y matriculas por provincia o Nacional';

--
-- Create foreign key
--
ALTER TABLE medico_matricula
ADD CONSTRAINT FK_matricula_tipo FOREIGN KEY (tipo_matricula_id)
REFERENCES medico_matricula_tipo (id);

DELIMITER $$

--
-- Create procedure `ST_LIST_MEDICO_TIPO_MATRICULA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_MEDICO_TIPO_MATRICULA ()
BEGIN

  SELECT
    mm.id,
    mm.valor,
    mt.valor AS tipo
  FROM medico_matricula mm
    INNER JOIN medico_matricula_tipo mt
      ON mt.id = mm.tipo_matricula_id;

END
$$

DELIMITER ;

--
-- Create table `medico`
--
CREATE TABLE IF NOT EXISTS medico (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  apellido varchar(50) DEFAULT NULL,
  nombre varchar(200) DEFAULT NULL,
  matricula_tipo_id int(11) NOT NULL,
  matricula_numero varchar(45) DEFAULT NULL,
  fecha_alta datetime DEFAULT NULL,
  apm_id int(10) UNSIGNED NOT NULL,
  c_atencion varchar(255) DEFAULT NULL,
  lugar varchar(45) DEFAULT NULL,
  mail varchar(100) DEFAULT NULL,
  telefono varchar(45) DEFAULT NULL,
  fax varchar(45) DEFAULT NULL,
  nacimiento varchar(20) DEFAULT NULL,
  domicilio varchar(255) DEFAULT NULL,
  fecha_cap date DEFAULT NULL,
  localidad varchar(255) DEFAULT NULL,
  estado_id int(11) NOT NULL DEFAULT 30,
  fecha_aprobado datetime DEFAULT NULL,
  fecha_inac datetime DEFAULT NULL,
  fecha_creacion datetime DEFAULT NULL,
  fecha_modificacion datetime DEFAULT NULL,
  familia varchar(4) NOT NULL DEFAULT 'SOL' COMMENT 'familia de medicamento',
  usuario_creador int(11) UNSIGNED NOT NULL,
  usuario_mod int(11) UNSIGNED NOT NULL,
  notas_mod varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 17,
AVG_ROW_LENGTH = 16384,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create index `apellido_nombre_matricula_tipo_id_matricula_numero` on table `medico`
--
ALTER TABLE medico
ADD UNIQUE INDEX apellido_nombre_matricula_tipo_id_matricula_numero (apellido, nombre, matricula_tipo_id, matricula_numero);

--
-- Create foreign key
--
ALTER TABLE medico
ADD CONSTRAINT FK_apm_medico FOREIGN KEY (apm_id)
REFERENCES apm (id);

--
-- Create foreign key
--
ALTER TABLE medico
ADD CONSTRAINT FK_estado_medico FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id);

--
-- Create foreign key
--
ALTER TABLE medico
ADD CONSTRAINT FK_medico_matricula FOREIGN KEY (matricula_tipo_id)
REFERENCES medico_matricula (id);

--
-- Create foreign key
--
ALTER TABLE medico
ADD CONSTRAINT FK_medico_usuario_creador FOREIGN KEY (usuario_creador)
REFERENCES usuario (id);

--
-- Create foreign key
--
ALTER TABLE medico
ADD CONSTRAINT FK_medico_usuario_mod FOREIGN KEY (usuario_mod)
REFERENCES usuario (id);

DELIMITER $$

--
-- Create procedure `ST_UP_MEDICO`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_UP_MEDICO (IN `v_idMedico` int,
IN `v_estado_id` int,
IN `v_nombre` varchar(200),
IN `v_apellido` varchar(50),
IN `v_matricula_tipo_id` int,
IN `v_matricula_numero` varchar(45),
IN `v_lugar` varchar(45),
IN `v_c_atencion` varchar(255),
IN `v_telefono` varchar(45),
IN `v_fax` varchar(45),
IN `v_domicilio` varchar(255),
IN `v_localidad` varchar(255),
IN `v_apm_id` int,
IN `v_email` varchar(50)

,
IN `v_usuario` varchar(50),
IN `v_notas` varchar(255))
DETERMINISTIC
MODIFIES SQL DATA
COMMENT 'Modificacion de un nuevo medico'
BEGIN

  SET @count_med = (SELECT
      COUNT(*)
    FROM medico m
    WHERE m.id = v_idMedico);

  SET @usuario_mod_id := (SELECT
      u.id
    FROM usuario u
    WHERE v_usuario = u.username);

  IF (@count_med <> 0) THEN
    UPDATE medico
    SET apellido = v_nombre -- apellido - VARCHAR(50)
        ,
        nombre = v_apellido -- nombre - VARCHAR(200)
        ,
        matricula_tipo_id = v_matricula_tipo_id -- matricula_tipo_id - INT(11) NOT NULL
        ,
        matricula_numero = v_matricula_numero -- matricula_numero - VARCHAR(45)
        ,
        apm_id = v_apm_id -- apm_id - INT(10) NOT NULL
        ,
        c_atencion = v_c_atencion -- c_atencion - VARCHAR(255)
        ,
        lugar = v_lugar -- lugar - VARCHAR(45)
        ,
        mail = v_email -- mail - VARCHAR(100)
        ,
        telefono = v_telefono -- telefono - VARCHAR(45)
        ,
        fax = v_fax -- fax - VARCHAR(45)
        ,
        domicilio = v_domicilio -- domicilio - VARCHAR(255)
        ,
        localidad = v_localidad -- localidad - VARCHAR(255)
        ,
        estado_id = v_estado_id -- estado_id - INT(11) NOT NULL
        ,
        fecha_modificacion = NOW() -- fecha_modificacion - DATETIME
        ,
        notas_mod = v_notas,
        usuario_mod = @usuario_mod_id -- usuario_mod - INT(11) NOT NULL
    WHERE id = v_idMedico -- id - INT(10) NOT NULL
    ;

    IF (v_estado_id = 19) THEN
      -- se activa el medico
      UPDATE medico
      SET fecha_aprobado = NOW(),
          fecha_modificacion = NOW();
    ELSEIF (v_estado_id = 20) THEN
      -- se deshabilita el medico
      UPDATE medico m
      SET m.fecha_inac = NOW(),
          m.fecha_modificacion = NOW();
    END IF;

    SELECT
      TRUE AS mensaje;

  ELSE

    SELECT
      'ERROR NO_INSERT' AS mensaje;

  END IF;
END
$$

--
-- Create procedure `st_set_id_medico`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE st_set_id_medico ()
BEGIN

  UPDATE soliris_maestro
  SET id_medico = (SELECT
      m.id
    FROM medicos AS m
    WHERE m.nombre = medico);


END
$$

--
-- Create procedure `ST_NEW_MEDICO`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_NEW_MEDICO (IN `v_nombre` varchar(200),
IN `v_apellido` varchar(50),
IN `v_matricula_tipo_id` int,
IN `v_matricula_numero` varchar(45),
IN `v_lugar` varchar(45),
IN `v_c_atencion` varchar(255),
IN `v_telefono` varchar(45),
IN `v_fax` varchar(45),
IN `v_domicilio` varchar(255),
IN `v_localidad` varchar(255),
IN `v_apm_id` int,
IN `v_email` varchar(255)

,
IN `v_usuario` varchar(50))
DETERMINISTIC
MODIFIES SQL DATA
COMMENT 'Creacion de un nuevo medico'
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;


  -- devolvemos el error que ya existe un medico con la combinacion de apellido, nombre, matricula_tipo y numero de matricula
  DECLARE EXIT HANDLER FOR 1062
  BEGIN

    SELECT
      CONCAT('ERROR: Ya existe el medico ', CONCAT(v_apellido, ', ', v_nombre), ' con el numero de matricula: ', v_matricula_numero) AS mensaje;
  END;

  SET @count_med = (SELECT
      COUNT(*)
    FROM medico m
    WHERE m.apellido = v_apellido
    AND m.nombre = v_nombre
    AND m.matricula_numero = v_matricula_numero);

  SET id_1 := (SELECT
      LAST_INSERT_ID());
  SET @usuario_id := (SELECT
      u.id
    FROM usuario u
    WHERE v_usuario = u.username);


  INSERT INTO medico (apellido,
  nombre,
  matricula_tipo_id,
  matricula_numero,
  fecha_alta,
  apm_id,
  c_atencion,
  lugar,
  mail,
  telefono,
  fax,
  domicilio,
  localidad,
  fecha_aprobado,
  usuario_creador,
  usuario_mod,
  estado_id)
    VALUES (v_apellido, v_nombre, v_matricula_tipo_id, v_matricula_numero, NOW(), v_apm_id, v_c_atencion, v_lugar, v_email, v_telefono, v_fax, v_domicilio, v_localidad, NOW(), @usuario_id, @usuario_id, 30);


  SET id_2 := (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    SELECT
      id_2 AS mensaje;
  END IF;

  SELECT
    'ERROR NO_INSERT' AS mensaje;
END
$$

--
-- Create procedure `ST_LIST_MEDICOS_ACTIVOS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_MEDICOS_ACTIVOS (IN `v_filtro` varchar(50))
COMMENT 'Filtro de medicos activos'
BEGIN
  SELECT
    m.id,
    CONCAT(m.apellido, ',', m.nombre) AS nombre
  FROM medico m
  WHERE m.estado_id IN (19)
  AND CONCAT(m.apellido, ',', m.nombre) LIKE CONCAT('%', v_filtro, '%')
  ORDER BY nombre ASC;
END
$$

--
-- Create procedure `FU_SET_MED_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE FU_SET_MED_VENTA (IN `v_idVenta` int)
COMMENT 'Actualiza el registro de venta con el nombre del medico correcto de meditec'
BEGIN


  UPDATE soliris_maestro im
  SET medico = (SELECT
      a.id
    FROM soliris_maestro AS imn
      INNER JOIN medicos AS m
        ON m.id = imn.id_medico
      INNER JOIN (SELECT
          tm.id,
          tm.nombre,
          tm.apellido
        FROM tmp_med tm) AS a
        ON m.id_meditec = a.id)
  WHERE im.id = v_idVenta;

END
$$

DELIMITER ;

--
-- Create table `paises`
--
CREATE TABLE IF NOT EXISTS paises (
  ID int(10) NOT NULL AUTO_INCREMENT,
  code smallint(6) DEFAULT NULL,
  iso3166a1 char(2) DEFAULT NULL,
  iso3166a2 char(3) DEFAULT NULL,
  nombre varchar(128) DEFAULT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 241,
AVG_ROW_LENGTH = 68,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `provincias`
--
CREATE TABLE IF NOT EXISTS provincias (
  id int(10) NOT NULL AUTO_INCREMENT,
  provincia varchar(255) NOT NULL,
  pais_id int(11) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 24,
AVG_ROW_LENGTH = 712,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create foreign key
--
ALTER TABLE provincias
ADD CONSTRAINT FK_pais_prov FOREIGN KEY (pais_id)
REFERENCES paises (ID);

--
-- Create table `cp`
--
CREATE TABLE IF NOT EXISTS cp (
  ID int(11) NOT NULL AUTO_INCREMENT,
  CP double DEFAULT NULL,
  Localidad varchar(255) DEFAULT NULL,
  provincia_id int(10) NOT NULL,
  PRIMARY KEY (ID)
)
ENGINE = INNODB,
AUTO_INCREMENT = 1001,
AVG_ROW_LENGTH = 98,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create foreign key
--
ALTER TABLE cp
ADD CONSTRAINT FK_cp_prov FOREIGN KEY (provincia_id)
REFERENCES provincias (id);

--
-- Create table `os`
--
CREATE TABLE IF NOT EXISTS os (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  nombre varchar(50) NOT NULL DEFAULT '',
  descripcion varchar(255) DEFAULT NULL,
  aux_1 varchar(255) DEFAULT NULL,
  aux_2 varchar(255) DEFAULT NULL,
  u_modificacion datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'fecha del cambio',
  usuario varchar(50) NOT NULL DEFAULT '' COMMENT 'ultimo usuario cambio',
  estado varchar(2) NOT NULL DEFAULT 'AC' COMMENT 'activo:1, inactivo:0',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8,
COLLATE utf8_general_ci,
COMMENT = 'Tabla de Obras Sociales';

--
-- Create table `sub_patologia`
--
CREATE TABLE IF NOT EXISTS sub_patologia (
  id int(11) NOT NULL AUTO_INCREMENT,
  sub_patologia_nombre varchar(50) NOT NULL DEFAULT '',
  familia varchar(3) NOT NULL DEFAULT 'SOL',
  usuario_audit varchar(45) NOT NULL DEFAULT '',
  fecha_audit timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
AVG_ROW_LENGTH = 4096,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tablas de Sub Patoligias';

--
-- Create table `rel_patologia_sub_patologia`
--
CREATE TABLE IF NOT EXISTS rel_patologia_sub_patologia (
  id int(11) NOT NULL AUTO_INCREMENT,
  patologia_id int(11) DEFAULT NULL,
  sub_patologia_id int(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 4,
AVG_ROW_LENGTH = 5461,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'tabla de relacion entre patologia y subpatologia';

--
-- Create foreign key
--
ALTER TABLE rel_patologia_sub_patologia
ADD CONSTRAINT FK_patologia FOREIGN KEY (patologia_id)
REFERENCES patologia (id) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Create foreign key
--
ALTER TABLE rel_patologia_sub_patologia
ADD CONSTRAINT FK_sub_patologia FOREIGN KEY (sub_patologia_id)
REFERENCES sub_patologia (id) ON DELETE SET NULL ON UPDATE CASCADE;

--
-- Create table `paciente`
--
CREATE TABLE IF NOT EXISTS paciente (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  apellido varchar(100) NOT NULL,
  nombre varchar(100) NOT NULL DEFAULT '',
  nombre_completo varchar(200) NOT NULL,
  fecha_nac date NOT NULL,
  sexo varchar(2) NOT NULL DEFAULT '',
  telefono varchar(45) DEFAULT NULL,
  ciudad varchar(100) DEFAULT NULL,
  pais_id int(11) NOT NULL COMMENT 'ID de Pais',
  mail varchar(100) DEFAULT NULL,
  patologia_id int(11) NOT NULL COMMENT 'ID Patologia',
  sub_patologia_id int(11) NOT NULL,
  os_id int(11) UNSIGNED NOT NULL COMMENT 'ID de la Obra Social',
  notas longtext DEFAULT NULL,
  usuario_id int(11) UNSIGNED NOT NULL,
  c_gestar varchar(2) DEFAULT NULL,
  estado_id int(11) NOT NULL DEFAULT 7 COMMENT 'ID de Estado',
  sub_estado_id int(11) NOT NULL DEFAULT 8 COMMENT 'ID de Sub Estado',
  fecha_creacion datetime DEFAULT NULL,
  familia varchar(3) NOT NULL DEFAULT 'SOL' COMMENT 'rvl/tali/---',
  fecha_modificacion datetime NOT NULL,
  usuario_mod_id int(11) UNSIGNED NOT NULL DEFAULT 0,
  crm_id int(11) UNSIGNED DEFAULT NULL COMMENT 'ID del Sisitema Con Vos',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 13,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci,
COMMENT = 'Tabla de Pacientes';

--
-- Create index `apellido_nombre_fecha_nac` on table `paciente`
--
ALTER TABLE paciente
ADD UNIQUE INDEX apellido_nombre_fecha_nac (apellido, nombre, fecha_nac);

--
-- Create index `FK_sub_estado_pac` on table `paciente`
--
ALTER TABLE paciente
ADD INDEX FK_sub_estado_pac (sub_patologia_id);

--
-- Create foreign key
--
ALTER TABLE paciente
ADD CONSTRAINT FK_estado_pac FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id);

--
-- Create foreign key
--
ALTER TABLE paciente
ADD CONSTRAINT FK_os_pac FOREIGN KEY (os_id)
REFERENCES os (id);

--
-- Create foreign key
--
ALTER TABLE paciente
ADD CONSTRAINT FK_pais_pac FOREIGN KEY (pais_id)
REFERENCES paises (ID);

--
-- Create foreign key
--
ALTER TABLE paciente
ADD CONSTRAINT FK_patologia_pac FOREIGN KEY (patologia_id)
REFERENCES patologia (id);

--
-- Create foreign key
--
ALTER TABLE paciente
ADD CONSTRAINT FK_sub_estado_paciente FOREIGN KEY (sub_estado_id)
REFERENCES maestro_estado (id);

--
-- Create foreign key
--
ALTER TABLE paciente
ADD CONSTRAINT FK_sub_patologia_pac FOREIGN KEY (sub_patologia_id)
REFERENCES sub_patologia (id);

--
-- Create foreign key
--
ALTER TABLE paciente
ADD CONSTRAINT FK_usuario_mod_pac FOREIGN KEY (usuario_mod_id)
REFERENCES usuario (id);

--
-- Create foreign key
--
ALTER TABLE paciente
ADD CONSTRAINT FK_usuario_pac FOREIGN KEY (usuario_id)
REFERENCES usuario (id);

DELIMITER $$

--
-- Create function `FU_VAL_PAC`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_VAL_PAC (`v_id` int,
`v_comentario` longtext,
`v_estado` int,
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;

  UPDATE paciente
  SET notas = v_comentario,
      estado = v_estado,
      fecha_stamp = NOW()
  WHERE id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN

    IF (v_estado = 'Aprobado') THEN
      UPDATE pacientes
      SET aprobado = v_usuario,
          fecha_aprobado = NOW(),
          fecha_stamp = NOW()
      WHERE id = v_id;
    ELSE
      UPDATE pacientes
      SET aprobado = NULL,
          fecha_aprobado = NULL
      WHERE id = v_id;

    END IF;
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;


  RETURN devolucion;

END
$$

--
-- Create function `FU_GET_PACIENTE_EDAD`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_GET_PACIENTE_EDAD (`v_id_paciente` int)
RETURNS int(11)
COMMENT 'DEVUELVE LA EDAD DEL PACIENTE'
BEGIN

  RETURN (SELECT
      YEAR(CURDATE()) - YEAR(p.fecha_nac) - IF(STR_TO_DATE(CONCAT(YEAR(CURDATE()), '-', MONTH(p.fecha_nac), '-', DAY(p.fecha_nac)), '%Y-%c-%e') > CURDATE(), 1, 0) AS edad
    FROM paciente p
    WHERE p.id = v_id_paciente);


END
$$

--
-- Create procedure `ST_UP_PACIENTE`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_UP_PACIENTE (IN `v_id` int,
IN `v_apellido` varchar(100),
IN `v_nombre` varchar(100),
IN `v_fecha_nac` date,
IN `v_sexo` varchar(2),
IN `v_telefono` varchar(45),
IN `v_ciudad` varchar(100),
IN `v_pais_id` int,
IN `v_mail` varchar(100),
IN `v_patologia_id` int,
IN `v_sub_patologia_id` int,
IN `v_os_id` int,
IN `v_usuario` varchar(50),
IN `v_sub_estado_id` varchar(50),
IN `v_estado_id` int,
IN `v_crm_id` int)
COMMENT 'Actualizacion de paciente'
BEGIN

  DECLARE c_usuario_mod_id int;

  DECLARE EXIT HANDLER FOR SQLWARNING
  BEGIN
    SELECT
      'ERROR: HA OCURRIDO UN ERROR AL ACTUALIZAR EL PACIENTE' AS mensaje;
  END;

  SET c_usuario_mod_id = (SELECT
      u.id
    FROM usuario u
    WHERE v_usuario = u.username);





  UPDATE paciente
  SET apellido = v_apellido,
      nombre = v_nombre,
      nombre_completo = CONCAT(v_apellido, ', ', v_nombre),
      fecha_nac = v_fecha_nac,
      sexo = v_sexo,
      telefono = v_telefono,
      ciudad = v_ciudad,
      pais_id = v_pais_id,
      mail = v_mail,
      patologia_id = v_patologia_id,
      sub_patologia_id = v_sub_patologia_id,
      os_id = v_os_id,
      c_gestar = '',
      estado_id = v_estado_id,
      sub_estado_id = v_sub_estado_id,
      familia = 'SOL',
      fecha_modificacion = NOW(),
      usuario_mod_id = c_usuario_mod_id,
      crm_id = v_crm_id
  WHERE id = v_id;

  SELECT
    'ACTUALIZACION CORRECTA' AS mensaje;

END
$$

--
-- Create procedure `ST_NEW_PACIENTE`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_NEW_PACIENTE (IN `v_apellido` varchar(100),
IN `v_nombre` varchar(100),
IN `v_fecha_nac` date,
IN `v_sexo` varchar(2),
IN `v_telefono` varchar(45),
IN `v_ciudad` varchar(100),
IN `v_pais_id` int,
IN `v_mail` varchar(100),
IN `v_patologia_id` int,
IN `v_sub_patologia_id` int,
IN `v_os_id` int,
IN `v_usuario` varchar(50),
IN `v_sub_estado_id` int,
IN `v_crm_id` int)
COMMENT 'Creacion del nuevo paciente'
BEGIN

  DECLARE c_usuario_id int;
  DECLARE c_sub_estado int;

  -- Al realizar el insert de paciente se le asigna el estado 31 (Sin documentacion) que luego debera ser modificado
  -- por el store ST_UP_DOC_PACIENTE el mismo le colocara el estado 7 (Pendiente)

  -- devolvemos el error que ya existe un paciente con la combinacion de apellido, nombre y fecha de nacimiento
  DECLARE EXIT HANDLER FOR 1062
  BEGIN
    SELECT
      CONCAT('ERROR: Ya existe el paciente ', CONCAT(v_apellido, ', ', v_nombre), ' con fecha de nacimiento: ', v_fecha_nac) AS mensaje;
  END;


  -- SET c_sub_estado = (SELECT id FROM `maestro_estado` WHERE `tipo` = 'sub_estado' AND valor = 'v_sub_estado');

  SET c_usuario_id = (SELECT
      u.id
    FROM usuario u
    WHERE v_usuario = u.username);

  INSERT INTO paciente (apellido,
  nombre,
  nombre_completo,
  fecha_nac,
  sexo,
  telefono,
  ciudad,
  pais_id,
  mail,
  patologia_id,
  sub_patologia_id,
  os_id,
  usuario_id,
  usuario_mod_id,
  estado_id,
  sub_estado_id,
  fecha_creacion,
  fecha_modificacion,
  familia,
  crm_id)
    VALUES (v_apellido, v_nombre, CONCAT(v_apellido, ', ', nombre), v_fecha_nac, v_sexo, v_telefono, v_ciudad, v_pais_id, v_mail, v_patologia_id, v_sub_patologia_id, v_os_id, c_usuario_id, c_usuario_id, 31, v_sub_estado_id, NOW(), NOW(), 'SOL', v_crm_id);

  SELECT
    LAST_INSERT_ID() AS mensaje;


END
$$

--
-- Create procedure `ST_DOC_PAC_MODIFIED`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_DOC_PAC_MODIFIED (IN `v_id` int,
IN `v_usuario` varchar(50))
COMMENT 'Actualiza el estado del paciente a Pendiente debido a que su documentacion fue modificada'
BEGIN

  UPDATE paciente
  SET estado_id = 7, -- se setea el usuario en estado Pendiente
      fecha_modificacion = NOW(),
      usuario_mod_id = (SELECT
          u.id
        FROM usuario u
        WHERE u.username = v_usuario)
  WHERE id = v_id;


  SELECT
    "Se registra correctamente el cambio de la documentacion, el paciente quedó en estado pendiente" AS mensaje,
    (SELECT
        me.valor
      FROM maestro_estado me
      WHERE me.id = 7) AS estado;

END
$$

DELIMITER ;

--
-- Create table `maestro_ventas_tipo`
--
CREATE TABLE IF NOT EXISTS maestro_ventas_tipo (
  id int(11) NOT NULL AUTO_INCREMENT,
  valor varchar(2) DEFAULT NULL,
  descripcion varchar(50) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 4,
AVG_ROW_LENGTH = 5461,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tipos de Venta';

--
-- Create table `institucion`
--
CREATE TABLE IF NOT EXISTS institucion (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  nombre varchar(250) DEFAULT NULL,
  direccion varchar(250) DEFAULT NULL,
  altura int(10) UNSIGNED DEFAULT 0,
  localidad varchar(100) DEFAULT NULL,
  provincia varchar(100) DEFAULT NULL,
  contacto varchar(100) DEFAULT NULL,
  mail varchar(100) DEFAULT NULL,
  telefono varchar(45) DEFAULT NULL,
  notas longtext DEFAULT NULL,
  tipo varchar(10) DEFAULT NULL,
  familia varchar(3) DEFAULT NULL,
  usuario_audit varchar(45) DEFAULT NULL,
  fecha_audit timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  reporte int(11) NOT NULL DEFAULT 0,
  estado_id int(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 1306,
AVG_ROW_LENGTH = 172,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

DELIMITER $$

--
-- Create function `FU_UP_INST`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_INST (`v_nombre` varchar(250),
`v_direccion` varchar(250),
`v_altura` int,
`v_localidad` varchar(100),
`v_provincia` varchar(100),
`v_contacto` varchar(100),
`v_mail` varchar(100),
`v_telefono` varchar(45),
`v_notas` longtext,
`v_tipo` varchar(10),
`v_estado` varchar(45),
`v_familia` varchar(3),
`v_usuario` varchar(45),
`v_id` int)
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  UPDATE institucion
  SET nombre = v_nombre,
      direccion = v_direccion,
      altura = v_altura,
      localidad = v_localidad,
      provincia = v_provincia,
      contacto = v_contacto,
      mail = v_mail,
      telefono = v_telefono,
      notas = v_notas,
      tipo = v_tipo,
      familia = v_familia,
      estado_id = (SELECT
          m.id
        FROM maestro_estado m
        WHERE m.valor = v_estado
        AND m.referencia = 'institucion'),
      usuario_audit = v_usuario
  WHERE id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_NEW_INST`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_INST (`v_nombre` varchar(250),
`v_direccion` varchar(250),
`v_altura` int,
`v_localidad` varchar(100),
`v_provincia` varchar(100),
`v_contacto` varchar(100),
`v_mail` varchar(100),
`v_telefono` varchar(45),
`v_notas` longtext,
`v_tipo` varchar(10),
`v_familia` varchar(3),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO institucion (nombre,
  direccion,
  altura,
  localidad,
  provincia,
  contacto,
  mail,
  telefono,
  notas,
  tipo,
  familia,
  estado_id,
  usuario_audit)
    SELECT
      v_nombre,
      v_direccion,
      v_altura,
      v_localidad,
      v_provincia,
      v_contacto,
      v_mail,
      v_telefono,
      v_notas,
      v_tipo,
      v_familia,
      26,
      v_usuario
    FROM dual
    WHERE NOT EXISTS (SELECT
        *
      FROM institucion
      WHERE nombre = v_nombre
      AND direccion = v_direccion
      AND altura = v_altura
      AND localidad = v_localidad
      AND provincia = v_provincia
      AND contacto = v_contacto
      AND mail = v_mail
      AND telefono = v_telefono
      AND notas = v_notas
      AND tipo = v_tipo
      AND familia = v_familia
      AND usuario_audit = v_usuario);

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create procedure `ST_SHOW_INSTITUCION`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_INSTITUCION (IN `v_idInstitucion` int)
COMMENT 'Muestra los datos de una institucion'
BEGIN

  SELECT
    i.*,
    m.valor AS estado
  FROM institucion i
    INNER JOIN maestro_estado m
      ON m.id = i.estado_id
  WHERE i.id = v_idInstitucion;

END
$$

--
-- Create procedure `ST_LIST_INSTITUCIONES_HABILITADAS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_INSTITUCIONES_HABILITADAS (IN `v_filtro` varchar(50))
COMMENT 'Obtiene las instituciones habilitadas en base a un filtro pasado por parametro'
BEGIN
  SELECT
    i.*,
    m.valor AS estado
  FROM institucion i
    INNER JOIN maestro_estado m
      ON m.id = i.estado_id
  WHERE i.nombre LIKE CONCAT('%', v_filtro, '%')
  AND i.estado_id = 26;
END
$$

--
-- Create procedure `ST_LIST_INSTITUCIONES`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_INSTITUCIONES ()
COMMENT 'Lista las instituciones del sistema'
BEGIN

  SELECT
    i.*,
    m.valor AS estado
  FROM institucion i
    INNER JOIN maestro_estado m
      ON m.id = i.estado_id;

END
$$

DELIMITER ;

--
-- Create table `canales`
--
CREATE TABLE IF NOT EXISTS canales (
  id int(11) NOT NULL AUTO_INCREMENT,
  canal varchar(100) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  familia varchar(10) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  direccion varchar(250) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  mail varchar(200) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  dir_tec varchar(200) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  cont_venta varchar(200) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  cont_otro varchar(200) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  puntos_entrega longtext CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  documentacion varchar(255) DEFAULT NULL,
  usuario_audit varchar(45) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  fecha_audit timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  estado varchar(45) CHARACTER SET latin1 COLLATE latin1_swedish_ci DEFAULT NULL,
  estado_id int(11) DEFAULT NULL,
  convenio int(11) DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 132,
AVG_ROW_LENGTH = 297,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

DELIMITER $$

--
-- Create function `FU_UP_CANAL`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_CANAL (`v_nombre` varchar(100),
`v_familia` varchar(45),
`v_direccion` longtext,
`v_mail` varchar(200),
`v_dir_tec` varchar(200),
`v_cont_venta` longtext,
`v_cont_otro` longtext,
`v_estado` varchar(45),
`v_usuario` varchar(45),
`v_id` int)
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  UPDATE canales
  SET canal = v_nombre,
      familia = v_familia,
      direccion = v_direccion,
      mail = v_mail,
      dir_tec = v_dir_tec,
      cont_venta = v_cont_venta,
      cont_otro = v_cont_otro,

      estado = v_estado,
      usuario_audit = v_usuario
  WHERE id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_NEW_CANAL`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_CANAL (`v_nombre` varchar(100),
`v_familia` varchar(45),
`v_direccion` longtext,
`v_mail` varchar(200),
`v_dir_tec` varchar(200),
`v_cont_venta` longtext,
`v_cont_otro` longtext,
`v_usuario` varchar(45),
`v_estado` varchar(50))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET @estado_id = (SELECT
      m.id
    FROM maestro_estado m
    WHERE m.referencia = 'canales'
    AND m.valor = v_estado);

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO canales (canal,
  familia,
  direccion,
  mail,
  dir_tec,
  cont_venta,
  cont_otro,
  estado_id,
  usuario_audit)
    SELECT
      v_nombre,
      v_familia,
      v_direccion,
      v_mail,
      v_dir_tec,
      v_cont_venta,
      v_cont_otro,
      @estado_id,
      v_usuario
    FROM dual
    WHERE NOT EXISTS (SELECT
        *
      FROM canales
      WHERE canal = v_nombre
      AND familia = v_familia
      AND direccion = v_direccion
      AND mail = v_mail
      AND dir_tec = v_dir_tec
      AND cont_venta = v_cont_venta
      AND cont_otro = v_cont_otro);

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create procedure `ST_GET_CANAL`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GET_CANAL (IN `v_filtro` varchar(50))
COMMENT 'Obtiene los canales en base a un filtro pasado por parametro'
BEGIN

  SELECT
    *
  FROM canales c
  WHERE c.estado_id = 24
  AND c.canal LIKE CONCAT('%', v_filtro, '%');

END
$$

DELIMITER ;

--
-- Create table `maestro_ventas`
--
CREATE TABLE IF NOT EXISTS maestro_ventas (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  paciente_id int(10) UNSIGNED DEFAULT NULL,
  edad varchar(10) DEFAULT NULL,
  presentacion_id int(10) NOT NULL,
  venta_tipo_id int(10) NOT NULL,
  medico_id int(11) UNSIGNED NOT NULL,
  producto_id int(11) UNSIGNED NOT NULL,
  unidades int(10) UNSIGNED NOT NULL,
  fecha_venta timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  patologia_id int(11) NOT NULL,
  sub_patologia_id int(11) NOT NULL,
  institucion_id int(11) UNSIGNED NOT NULL,
  canal_id int(11) NOT NULL,
  estado_id int(11) DEFAULT 22,
  usuario_id int(11) UNSIGNED NOT NULL,
  cod_reasignacion int(10) UNSIGNED DEFAULT NULL,
  crm_id int(10) DEFAULT NULL,
  nota longtext DEFAULT NULL,
  nbr varchar(45) DEFAULT NULL COMMENT 'Numero de NP generada',
  fecha_stamp timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  usuario_mod_id int(10) UNSIGNED NOT NULL,
  fecha_mod timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 46,
AVG_ROW_LENGTH = 8192,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Maestro de las ventas efectuadas al paciente';

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_canal FOREIGN KEY (canal_id)
REFERENCES canales (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_estado FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_institucion FOREIGN KEY (institucion_id)
REFERENCES institucion (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_medico FOREIGN KEY (medico_id)
REFERENCES medico (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_paciente FOREIGN KEY (paciente_id)
REFERENCES paciente (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_patologia FOREIGN KEY (patologia_id)
REFERENCES patologia (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_presentacion FOREIGN KEY (presentacion_id)
REFERENCES presentacion (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_producto FOREIGN KEY (producto_id)
REFERENCES producto (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_sub_patologia FOREIGN KEY (sub_patologia_id)
REFERENCES sub_patologia (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_tipo FOREIGN KEY (venta_tipo_id)
REFERENCES maestro_ventas_tipo (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_usuario FOREIGN KEY (usuario_id)
REFERENCES usuario (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas
ADD CONSTRAINT FK_venta_usuario_mod FOREIGN KEY (usuario_mod_id)
REFERENCES usuario (id);

DELIMITER $$

--
-- Create procedure `ST_MODIFICAR_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_MODIFICAR_VENTA (IN `v_idVenta` int,
IN `v_idMedico` int,
IN `v_idProducto` int,
IN `v_idPresentacion` int,
IN `v_cantUnidades` int,
IN `v_idInstitucion` int,
IN `v_idCanal` int,
IN `v_usuario` varchar(255))
COMMENT 'Modifica una venta que no este en estado NP'
BEGIN

  SET @p_idVenta = v_idVenta;

  SET @user_mod_id := (SELECT
      FU_GET_ID_USUARIO(v_usuario));
  SET @estado_venta := (SELECT
      mv.estado_id
    FROM maestro_ventas mv
    WHERE mv.id = v_idVenta);

  IF (@estado_venta = 23) THEN
    SELECT
      "La venta no puede ser modificada porque esta asociada con una NP" AS mensaje;
  ELSE
    UPDATE maestro_ventas mv
    SET mv.medico_id = v_idMedico,
        mv.producto_id = v_idProducto,
        mv.presentacion_id = v_idPresentacion,
        mv.unidades = v_cantUnidades,
        mv.institucion_id = v_idInstitucion,
        mv.canal_id = v_idCanal,
        mv.fecha_mod = NOW(),
        mv.usuario_mod_id = @user_mod_id
    WHERE mv.id = v_idVenta;
    SELECT
      TRUE AS mensaje;

    -- Libero el lockeo de la venta
    SET @release_lockeo = CONCAT("CALL ST_DELETE_CONTROL_MODIFICAR_VENTA(?,?,?)");
    PREPARE stmt_lockeo FROM @release_lockeo;
    EXECUTE stmt_lockeo USING @p_idVenta, @user_mod_id, @estado_venta;
    DEALLOCATE PREPARE stmt_lockeo;

  END IF;


END
$$

--
-- Create procedure `ST_LIST_VENTAS_NO_NP`
--
CREATE DEFINER = 'admin'@'%'
PROCEDURE ST_LIST_VENTAS_NO_NP ()
BEGIN
  SELECT
    m.id AS id_venta,
    P.nombre_completo AS name,
    P.sexo AS sexo,
    IF(P.c_gestar, P.c_gestar, 'NO') AS cgestar,
    m.edad AS edad,

    (SELECT
        pat.patologia_nombre
      FROM patologia pat
      WHERE pat.id = P.patologia_id) AS patologia,


    m.fecha_venta AS uventa,
    (SELECT
        me.valor
      FROM maestro_estado me
      WHERE m.estado_id = me.id) AS estado


  FROM paciente AS P
    INNER JOIN maestro_ventas m
      ON m.paciente_id = P.id
  WHERE m.estado_id = 22
  GROUP BY P.id,
           m.id
  HAVING COUNT(*) > 0;
END
$$

--
-- Create procedure `ST_CANT_TIPO_VENTAS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_CANT_TIPO_VENTAS (IN `v_fecha` varchar(50))
COMMENT 'Devuelve la cantida de ventas RI y FU realizadas en una fecha particular'
BEGIN

  SELECT
    COUNT(m.venta_tipo_id) AS cantTipo,
    mt.valor
  FROM maestro_ventas m
    INNER JOIN maestro_ventas_tipo mt
      ON mt.id = m.venta_tipo_id
  WHERE DATE_FORMAT(m.fecha_venta, '%Y-%m') = v_fecha
  AND m.estado_id IN (23)
  GROUP BY m.venta_tipo_id;


END
$$

DELIMITER ;

--
-- Create table `maestro_ventas_transaccion`
--
CREATE TABLE IF NOT EXISTS maestro_ventas_transaccion (
  id int(11) NOT NULL AUTO_INCREMENT,
  estado_id int(11) NOT NULL,
  usuario_id int(11) UNSIGNED NOT NULL,
  maestro_id int(11) UNSIGNED NOT NULL,
  tipo_venta_id int(11) NOT NULL,
  fecha_stamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 2,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla que muestra el historial de estados de las transacciones realizadas sobre una venta';

--
-- Create foreign key
--
ALTER TABLE maestro_ventas_transaccion
ADD CONSTRAINT FK_estado_venta FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas_transaccion
ADD CONSTRAINT FK_usuario_venta FOREIGN KEY (usuario_id)
REFERENCES usuario (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas_transaccion
ADD CONSTRAINT FK_venta_id FOREIGN KEY (maestro_id)
REFERENCES maestro_ventas (id);

--
-- Create foreign key
--
ALTER TABLE maestro_ventas_transaccion
ADD CONSTRAINT FK_venta_tipo_transaccion FOREIGN KEY (tipo_venta_id)
REFERENCES maestro_ventas_tipo (id);

--
-- Create table `documentos_tipo`
--
CREATE TABLE IF NOT EXISTS documentos_tipo (
  id int(11) NOT NULL AUTO_INCREMENT,
  tipo varchar(50) NOT NULL DEFAULT '0',
  referencia varchar(50) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 7,
AVG_ROW_LENGTH = 2730,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'referencia de tipos de documentos del sistema';

DELIMITER $$

--
-- Create procedure `ST_LIST_DOCS_PAC`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_DOCS_PAC (IN `v_id` int)
COMMENT 'Lista los documentos del paciente'
BEGIN

  -- SELECT d.valor AS documento, dt.tipo FROM rel_paciente_documentos rel
  -- INNER JOIN paciente p ON rel.paciente_id = p.id
  -- INNER JOIN documentos d ON rel.documento_id = d.id
  -- INNER JOIN documentos_tipo dt ON dt.id = d.documentos_tipo_id
  -- WHERE dt.referencia = 'Paciente' and
  -- p.id = 4
  -- GROUP BY dt.tipo ORDER BY rel.id DESC LIMIT 0,2;


  SELECT
    d.valor AS documento,
    dt.tipo,
    MAX(d.id)
  FROM documentos AS d
    LEFT OUTER JOIN documentos_tipo AS dt
      ON d.documentos_tipo_id = dt.id
    INNER JOIN rel_paciente_documentos rel
      ON d.id = rel.documento_id
  WHERE rel.paciente_id = v_id
  GROUP BY d.valor,
           dt.tipo
  ORDER BY d.id DESC LIMIT 0, 2;

END
$$

DELIMITER ;

--
-- Create table `documentos`
--
CREATE TABLE IF NOT EXISTS documentos (
  id int(11) NOT NULL AUTO_INCREMENT,
  valor varchar(255) NOT NULL COMMENT 'Nombre o referencia del documento',
  documentos_tipo_id int(11) NOT NULL COMMENT 'ID del tipo de documento',
  fecha_creacion datetime NOT NULL COMMENT 'fecha de creacion del registro',
  fecha_documento date NOT NULL COMMENT 'fecha del documento',
  estado_id int(11) NOT NULL DEFAULT 15,
  usuario_id int(11) UNSIGNED NOT NULL COMMENT 'id del usuario que creó el registro',
  familia varchar(3) NOT NULL DEFAULT 'SOL' COMMENT 'familia del sistema',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 48,
AVG_ROW_LENGTH = 2340,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla donde se almacenan las referencias a los documentos del sistema';

--
-- Create foreign key
--
ALTER TABLE documentos
ADD CONSTRAINT FK_doc_estado FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id);

--
-- Create foreign key
--
ALTER TABLE documentos
ADD CONSTRAINT FK_doc_tipo FOREIGN KEY (documentos_tipo_id)
REFERENCES documentos_tipo (id);

--
-- Create foreign key
--
ALTER TABLE documentos
ADD CONSTRAINT FK_doc_usuario FOREIGN KEY (usuario_id)
REFERENCES usuario (id);

DELIMITER $$

--
-- Create procedure `ST_LIST_DOCS_MED`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_DOCS_MED (IN `v_idMedico` int)
COMMENT 'Lista los documentos del medico'
BEGIN

  SELECT
    d.valor AS documento,
    dt.tipo,
    m.valor AS estado,
    DATE_FORMAT(d.fecha_documento, '%d/%m/%Y') AS fecha_documento
  FROM documentos AS d
    LEFT OUTER JOIN documentos_tipo AS dt
      ON d.documentos_tipo_id = dt.id
    INNER JOIN rel_medico_documentos rel
      ON d.id = rel.documento_id
    INNER JOIN maestro_estado m
      ON m.id = d.estado_id
  WHERE rel.medico_id = v_idMedico
  ORDER BY d.id DESC;

END
$$

--
-- Create procedure `ST_LIST_DOCS_ACTIVOS_PAC`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_DOCS_ACTIVOS_PAC (IN `v_idPac` int)
BEGIN

  SELECT
    d.valor AS documento,
    dt.tipo,
    DATE_FORMAT(d.fecha_documento, '%d/%m/%Y') AS fecha_documento,
    DATE_FORMAT(d.fecha_creacion, '%d/%m/%Y %H:%i:%s') AS fecha_creacion
  FROM documentos AS d
    LEFT OUTER JOIN documentos_tipo AS dt
      ON d.documentos_tipo_id = dt.id
    INNER JOIN rel_paciente_documentos rel
      ON d.id = rel.documento_id
  WHERE rel.paciente_id = v_idPac
  AND d.estado_id = 15;
-- GROUP BY d.valor, dt.tipo ORDER BY d.id;

END
$$

--
-- Create procedure `ST_LIST_DOCS_ACTIVOS_MED`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_DOCS_ACTIVOS_MED (IN v_idMed int)
COMMENT 'Lista los documentos Activos del Medico'
BEGIN

  SELECT
    dt.tipo,
    d.valor AS documento,
    DATE_FORMAT(d.fecha_documento, '%d/%m/%Y') AS fecha_documento,
    DATE_FORMAT(d.fecha_creacion, '%d/%m/%Y %H:%i:%s') AS fecha_creacion,
    m.valor AS estado
  FROM documentos AS d
    LEFT OUTER JOIN documentos_tipo AS dt
      ON d.documentos_tipo_id = dt.id
    INNER JOIN rel_medico_documentos rel
      ON d.id = rel.documento_id
    INNER JOIN maestro_estado m
      ON m.id = d.estado_id
  WHERE rel.medico_id = v_idMed
  AND d.estado_id = 15
  GROUP BY d.valor,
           dt.tipo,
           d.id
  ORDER BY d.id DESC;

END
$$

--
-- Create procedure `ST_LIST_CANALES`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_CANALES ()
COMMENT 'Lista los canales del sistema'
BEGIN

  -- verificar el muestreo de documentacion de los canales

  SELECT
    C.id AS id,
    C.canal AS canal,
    C.familia AS familia,
    C.direccion AS direccion,
    C.mail AS mail,
    C.dir_tec AS dir_tec,
    C.cont_venta AS cont_venta,
    C.cont_otro AS cont_otro,
    C.puntos_entrega AS puntos_entrega,
    m.valor AS estado,
    (SELECT
        'sin documentos') AS documentos /*(
SELECT GROUP_CONCAT(RD.documento)
FROM soliris_documentacion AS RD
WHERE RD.referencia = 'canales' AND RD.id_maestro = C.id
ORDER BY RD.id DESC
LIMIT 1) AS documentos*/
  FROM canales AS C
    INNER JOIN maestro_estado m
      ON m.id = C.estado_id
  ORDER BY C.canal DESC;

END
$$

--
-- Create procedure `ST_LIST_ALL_DOCS_PAC`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_ALL_DOCS_PAC (IN `v_idPac` int)
COMMENT 'Lista los documentos del paciente'
BEGIN

  SELECT
    dt.tipo,
    d.valor AS documento,
    DATE_FORMAT(d.fecha_documento, '%d/%m/%Y') AS fecha_doc,
    m.valor AS estado
  FROM documentos AS d
    LEFT OUTER JOIN documentos_tipo AS dt
      ON d.documentos_tipo_id = dt.id
    INNER JOIN rel_paciente_documentos rel
      ON d.id = rel.documento_id
    INNER JOIN maestro_estado m
      ON m.id = d.estado_id
  WHERE rel.paciente_id = v_idPac
  GROUP BY d.valor,
           dt.tipo,
           d.id
  ORDER BY d.id DESC;

END
$$

--
-- Create procedure `ST_LIST_ALL_DOCS_MED`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_ALL_DOCS_MED (IN v_idMed int)
COMMENT 'Lista los documentos Activos del Medico'
BEGIN

  SELECT
    dt.tipo,
    d.valor AS documento,
    DATE_FORMAT(d.fecha_documento, '%d/%m/%Y') AS fecha_doc,
    m.valor AS estado
  FROM documentos AS d
    LEFT OUTER JOIN documentos_tipo AS dt
      ON d.documentos_tipo_id = dt.id
    INNER JOIN rel_medico_documentos rel
      ON d.id = rel.documento_id
    INNER JOIN maestro_estado m
      ON m.id = d.estado_id
  WHERE rel.medico_id = v_idMed

  GROUP BY d.valor,
           dt.tipo,
           d.id
  ORDER BY d.id DESC;

END
$$

DELIMITER ;

--
-- Create table `rel_venta_documentos`
--
CREATE TABLE IF NOT EXISTS rel_venta_documentos (
  id int(11) NOT NULL AUTO_INCREMENT,
  venta_id int(11) UNSIGNED NOT NULL,
  documento_id int(11) NOT NULL,
  fecha_creacion timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 13,
AVG_ROW_LENGTH = 16384,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla de relacion entre los documentos y los registro de la venta';

--
-- Create foreign key
--
ALTER TABLE rel_venta_documentos
ADD CONSTRAINT FK_documento_venta FOREIGN KEY (documento_id)
REFERENCES documentos (id);

--
-- Create foreign key
--
ALTER TABLE rel_venta_documentos
ADD CONSTRAINT FK_venta_id_rel FOREIGN KEY (venta_id)
REFERENCES maestro_ventas (id);

DELIMITER $$

--
-- Create function `FU_GET_FECHA_RECETA`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_GET_FECHA_RECETA (`v_id` int)
RETURNS date
COMMENT 'Obtiene la fecha de la receta de la venta'
BEGIN

  RETURN (SELECT
      doc.fecha_documento
    FROM documentos doc
      INNER JOIN rel_venta_documentos rvd
        ON rvd.documento_id = doc.id
      INNER JOIN maestro_ventas m
        ON m.id = rvd.venta_id
    WHERE doc.documentos_tipo_id = 3
    AND doc.estado_id = 15
    AND m.id = v_id);

END
$$

--
-- Create function `FU_GET_DOCUMENTS_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_GET_DOCUMENTS_VENTA (`v_id` int)
RETURNS varchar(255) CHARSET latin1
DETERMINISTIC
COMMENT 'devuelve un array con los documentos de la venta'
BEGIN

  DECLARE s_response varchar(255);

  SET s_response = (SELECT
      GROUP_CONCAT(d.valor)
    FROM rel_venta_documentos rel
      LEFT JOIN documentos d
        ON d.id = rel.documento_id
    WHERE rel.venta_id = v_id
    AND d.estado_id = 15);

  IF s_response IS NULL THEN
    SET s_response = "Sin Documentación";
  END IF;


  RETURN s_response;

END
$$

--
-- Create procedure `ST_SHOW_VENTAS_PACIENTE`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_VENTAS_PACIENTE (IN `v_idPac` int)
COMMENT 'Devuelve las ventas relacionadas con el paciente'
BEGIN

  SELECT
    mv.id,
    CONCAT(med.apellido, ',', med.nombre) AS medico_nombre,
    (SELECT
        FU_GET_PACIENTE_EDAD(p.id)) AS edad,
    d.valor AS presentacion,
    mv.unidades,
    DATE_FORMAT(mv.fecha_venta, '%d/%m/%Y') AS fecha_venta,
    (SELECT
        DATE_FORMAT(`FU_GET_FECHA_RECETA`(mv.id), '%d/%m/%Y')) AS fecha_receta,
    c.canal AS canal,
    i.nombre AS institucion,
    apm.nombre_completo AS apm,
    me.valor AS estado,
    (SELECT
        `FU_GET_DOCUMENTS_VENTA`(mv.id)) AS documentos
  FROM maestro_ventas mv
    INNER JOIN paciente p
      ON p.id = mv.paciente_id
    INNER JOIN rel_venta_documentos rvd
      ON rvd.venta_id = mv.id
    INNER JOIN documentos doc
      ON doc.id = rvd.documento_id
    INNER JOIN medico med
      ON med.id = mv.medico_id
    LEFT JOIN apm
      ON apm.id = med.apm_id
    INNER JOIN presentacion d
      ON d.id = mv.presentacion_id
    INNER JOIN canales c
      ON c.id = mv.canal_id
    INNER JOIN institucion i
      ON i.id = mv.institucion_id
    INNER JOIN maestro_estado me
      ON me.id = mv.estado_id
  WHERE p.id = v_idPac
  GROUP BY mv.id
  ORDER BY mv.id DESC


  ;




END
$$

--
-- Create procedure `ST_SHOW_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_VENTA (IN `v_idVenta` int)
COMMENT 'Muestra los datos de la venta'
BEGIN

  SET @fecha_otro := (SELECT
      DATE_FORMAT(doc.fecha_documento, '%d-%m-%Y')
    FROM documentos doc
      INNER JOIN rel_venta_documentos rvd
        ON rvd.documento_id = doc.id
      INNER JOIN maestro_ventas m
        ON m.id = rvd.venta_id
    WHERE doc.documentos_tipo_id = 4
    AND m.id = v_idVenta
    AND doc.estado_id = 15);

  SET @fecha_receta := (SELECT
      DATE_FORMAT(doc.fecha_documento, '%d-%m-%Y')
    FROM documentos doc
      INNER JOIN rel_venta_documentos rvd
        ON rvd.documento_id = doc.id
      INNER JOIN maestro_ventas m
        ON m.id = rvd.venta_id
    WHERE doc.documentos_tipo_id = 3
    AND m.id = v_idVenta
    AND doc.estado_id = 15);
  SET @doc_receta = (SELECT
      d.valor
    FROM rel_venta_documentos rel
      INNER JOIN documentos d
        ON d.id = rel.documento_id
    WHERE rel.venta_id = v_idVenta
    AND d.documentos_tipo_id = 3
    AND d.estado_id = 15
    AND rel.venta_id = v_idVenta);

  SET @doc_otro = (SELECT
      d.valor
    FROM rel_venta_documentos rel
      INNER JOIN documentos d
        ON d.id = rel.documento_id
    WHERE rel.venta_id = v_idVenta
    AND d.documentos_tipo_id = 4
    AND d.estado_id = 15
    AND rel.venta_id = v_idVenta);



  SELECT
    mv.id,
    p.id AS paciente_id,
    p.nombre_completo AS paciente_nombre,
    prod.valor AS producto,
    med.id AS medico_id,
    CONCAT(med.apellido, ',', med.nombre) AS medico_nombre,
    (SELECT
        FU_GET_PACIENTE_EDAD(p.id)) AS edad,
    d.valor AS presentacion,
    d.id AS presentacion_id,
    mv.unidades,
    DATE_FORMAT(mv.fecha_venta, '%d-%m-%Y') AS fecha_venta,
    mv.fecha_venta AS f_venta,
    mv.fecha_mod AS f_mod,
    (SELECT
        FU_GET_USERNAME_USUARIO(mv.usuario_id)) AS usuario_creador,
    (SELECT
        FU_GET_USERNAME_USUARIO(mv.usuario_mod_id)) AS usuario_mod,
    DATE_FORMAT(mv.fecha_mod, '%d-%m-%Y') AS fecha_mod,
    @doc_receta AS doc_receta,
    @fecha_receta AS fecha_receta,
    @doc_otro AS doc_otro,
    @fecha_otro AS fecha_otro,
    c.id AS canal_id,
    c.canal AS canal,
    i.id AS institucion_id,
    i.nombre AS institucion,
    me.valor AS estado,
    mv.nbr AS nbr
  FROM maestro_ventas mv
    INNER JOIN paciente p
      ON p.id = mv.paciente_id
    INNER JOIN producto prod
      ON prod.id = mv.producto_id
    INNER JOIN medico med
      ON med.id = mv.medico_id
    LEFT JOIN apm
      ON apm.id = med.apm_id
    INNER JOIN presentacion d
      ON d.id = mv.presentacion_id
    INNER JOIN canales c
      ON c.id = mv.canal_id
    INNER JOIN institucion i
      ON i.id = mv.institucion_id
    INNER JOIN maestro_estado me
      ON me.id = mv.estado_id
  WHERE mv.id = v_idVenta;



END
$$

--
-- Create procedure `ST_CONTROL_RECETA_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_CONTROL_RECETA_VENTA (IN `v_fecha_receta` date,
IN `v_idPaciente` int)
COMMENT 'Controla que la fecha de la receta no exista'
BEGIN


  SET @cuenta_fecha = (SELECT
      COUNT(mv.id)
    FROM documentos d
      LEFT JOIN rel_venta_documentos rvd
        ON rvd.documento_id = d.id
      LEFT JOIN maestro_ventas mv
        ON mv.id = rvd.venta_id
    WHERE d.documentos_tipo_id = 3
    AND d.estado_id = 15
    AND mv.paciente_id = v_idPaciente
    AND d.fecha_documento = v_fecha_receta
    AND mv.estado_id = 23);

  IF (@cuenta_fecha <> 0) THEN

    SELECT
      mv.id,
      d.fecha_documento,
      d.valor INTO @id_venta, @fecha_doc_venta, @nombre_doc
    FROM documentos d
      LEFT JOIN rel_venta_documentos rvd
        ON rvd.documento_id = d.id
      LEFT JOIN maestro_ventas mv
        ON mv.id = rvd.venta_id
    WHERE d.documentos_tipo_id = 3
    AND d.estado_id = 15
    AND mv.paciente_id = v_idPaciente
    AND d.fecha_documento = v_fecha_receta
    AND mv.estado_id = 23;


    SELECT
      @fecha_doc_venta AS fecha_doc,
      @nombre_doc AS nombre_doc,
      CONCAT('/documentacion/venta/', v_idPaciente, '/', @id_venta, '/', @nombre_doc) AS url_doc,
      TRUE AS mensaje;
  ELSE
    SELECT
      FALSE AS mensaje;
  END IF;









END
$$

DELIMITER ;

--
-- Create view `vw_reporte_360`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW vw_reporte_360
AS
SELECT
  `mv`.`id` AS `id`,
  `p`.`nombre_completo` AS `paciente`,
  `p`.`id` AS `paciente_id`,
  `mv`.`edad` AS `edad`,
  `p`.`sexo` AS `sexo`,
  `p2`.`patologia_nombre` AS `patologia_nombre`,
  `p3`.`valor` AS `producto`,
  `p1`.`valor` AS `presentacion`,
  `mv`.`unidades` AS `unidades`,
  `mv`.`fecha_venta` AS `fecha_venta`,
  `mv`.`nbr` AS `nbr`,
  CONCAT(`m`.`apellido`, ' ', `m`.`nombre`) AS `medico`,
  (SELECT
      GROUP_CONCAT(`d`.`valor` SEPARATOR ',')
    FROM (`rel_venta_documentos` `rel`
      LEFT JOIN `documentos` `d`
        ON ((`d`.`id` = `rel`.`documento_id`)))
    WHERE ((`rel`.`venta_id` = `mv`.`id`)
    AND (`d`.`estado_id` = 15))) AS `doc_venta`,
  `mvt`.`valor` AS `tipo_venta`,
  `c`.`canal` AS `canal`
FROM ((((((((`maestro_ventas` `mv`
  LEFT JOIN `paciente` `p`
    ON ((`p`.`id` = `mv`.`paciente_id`)))
  LEFT JOIN `medico` `m`
    ON ((`m`.`id` = `mv`.`medico_id`)))
  LEFT JOIN `maestro_ventas_tipo` `mvt`
    ON ((`mvt`.`id` = `mv`.`venta_tipo_id`)))
  LEFT JOIN `presentacion` `p1`
    ON ((`p1`.`id` = `mv`.`presentacion_id`)))
  LEFT JOIN `patologia` `p2`
    ON ((`p2`.`id` = `p`.`patologia_id`)))
  LEFT JOIN `canales` `c`
    ON ((`c`.`id` = `mv`.`canal_id`)))
  LEFT JOIN `producto` `p3`
    ON ((`p3`.`id` = `mv`.`producto_id`)))
  LEFT JOIN `institucion` `i`
    ON ((`i`.`id` = `mv`.`institucion_id`)));

--
-- Create table `rel_paciente_documentos`
--
CREATE TABLE IF NOT EXISTS rel_paciente_documentos (
  id int(11) NOT NULL AUTO_INCREMENT,
  paciente_id int(11) UNSIGNED NOT NULL,
  documento_id int(11) NOT NULL,
  fecha_creacion timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 15,
AVG_ROW_LENGTH = 3276,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla de relacion de los documentos de los pacientes en el sistema';

--
-- Create foreign key
--
ALTER TABLE rel_paciente_documentos
ADD CONSTRAINT FK_doc_doc FOREIGN KEY (documento_id)
REFERENCES documentos (id);

--
-- Create foreign key
--
ALTER TABLE rel_paciente_documentos
ADD CONSTRAINT FK_doc_pac FOREIGN KEY (paciente_id)
REFERENCES paciente (id);

DELIMITER $$

--
-- Create function `FU_SHOW_FECHA_CONS_PAC`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_SHOW_FECHA_CONS_PAC (`v_id` int)
RETURNS date
COMMENT 'Devuelve la fecha del consentimiento del paciente'
BEGIN

  RETURN (SELECT
      --	date_format(d.fecha_documento, '%d/%m/%Y') as fconsen
      d.fecha_documento
    FROM rel_paciente_documentos r
      INNER JOIN paciente p
        ON r.paciente_id = v_id
      INNER JOIN documentos d
        ON r.documento_id = d.id
    WHERE d.documentos_tipo_id = 1 -- ID del consentimiento de vacunacion de la tabla documentos_id
    AND
    d.estado_id = 15
    ORDER BY r.id
    DESC LIMIT 0, 1); -- estado activo del documento en el maestro de estados


END
$$

--
-- Create procedure `ST_SHOW_PACIENTE`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_PACIENTE (IN `v_id` int)
COMMENT 'Muestra la informacion del paciente'
BEGIN



  SELECT
    p.id AS id,
    p.apellido AS apellido,
    p.nombre AS nombre,
    p.nombre_completo,
    p.usuario_id AS usuario_creador_id,
    (SELECT
        u.username
      FROM usuario u
      WHERE u.id = p.usuario_id) AS usuario_creador,
    p.usuario_mod_id AS usuario_mod_id,
    (SELECT
        FU_GET_PACIENTE_EDAD(v_id)) AS edad,
    (SELECT
        u.username
      FROM usuario u
      WHERE u.id = p.usuario_mod_id) AS usuario_mod,
    (SELECT
        me.id
      FROM maestro_estado me
      WHERE me.id = p.estado_id) AS estado_id,
    (SELECT
        me.valor
      FROM maestro_estado me
      WHERE me.id = p.estado_id) AS estado_valor,
    (SELECT
        me.id
      FROM maestro_estado me
      WHERE me.id = p.sub_estado_id) AS sub_estado_id,
    (SELECT
        me.valor
      FROM maestro_estado me
      WHERE me.id = p.estado_id) AS sub_estado_valor,
    p.fecha_nac AS fecha_nac,
    DATE_FORMAT(p.fecha_nac, '%d-%m-%Y') AS fecha_nac_formateada,
    (SELECT
        pat.id
      FROM patologia pat
      WHERE pat.id = p.patologia_id) AS patologia_id,
    (SELECT
        pat.patologia_nombre
      FROM patologia pat
      WHERE pat.id = p.patologia_id) AS patologiaNombre,
    (SELECT
        sub_pat.id
      FROM sub_patologia sub_pat
      WHERE sub_pat.id = p.sub_patologia_id) AS sub_patologia_id,
    (SELECT
        sub_pat.sub_patologia_nombre
      FROM sub_patologia sub_pat
      WHERE sub_pat.id = p.sub_patologia_id) AS subPatologiaNombre,
    (SELECT
        DATE_FORMAT(`FU_SHOW_FECHA_CONS_PAC`(v_id), '%d/%m/%Y')) AS fecha_con,
    (SELECT
        DATE_FORMAT(p.fecha_creacion, '%d/%m/%Y %H:%i:%s')) AS fecha_creacion,
    (SELECT
        DATE_FORMAT(p.fecha_modificacion, '%d/%m/%Y %H:%i:%s')) AS fecha_modificacion,
    p.telefono AS telefono,
    p.ciudad AS ciudad,
    p.pais_id AS pais_id,
    (SELECT
        pai.nombre
      FROM paises pai
      WHERE pai.id = p.pais_id) AS pais_nombre,
    p.mail AS mail,
    p.sexo AS sexo,
    p.os_id AS os_id,
    (SELECT
        os.nombre
      FROM os
      WHERE os.id = p.os_id) AS os_nombre,
    p.notas AS notas,
    p.crm_id AS crm_id,
    p.c_gestar AS c_gestar
  FROM paciente p
  WHERE p.id = v_id;

END
$$

--
-- Create procedure `ST_LIST_PACIENTES_PENDIENTES`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_PACIENTES_PENDIENTES ()
COMMENT 'LISTADO DE PACIENTES PENDIENTES'
BEGIN


  DECLARE CONTINUE HANDLER FOR SQLSTATE '42S02' SET @err = 1;

  SET @err = 0;
  SET @table_name = 'TEMPORARY_LIST_PACIENTES_PENDIENTES';
  SET @sql_query = CONCAT('SELECT NULL FROM ', @table_name);
  PREPARE stmt1 FROM @sql_query;

  IF (@err = 0) THEN
    DROP TABLE TEMPORARY_LIST_PACIENTES_PENDIENTES;
    DEALLOCATE PREPARE stmt1;
  END IF;

  CREATE TEMPORARY TABLE TEMPORARY_LIST_PACIENTES_PENDIENTES (SELECT
      P.id AS id,
      CONCAT(P.apellido, ', ', P.nombre) AS name,
      P.sexo AS sexo,
      P.c_gestar AS cgestar,
      DATE_FORMAT(P.fecha_nac, '%d/%m/%Y') AS fnac,
      P.patologia_id AS patologia,
      (SELECT
          patologia_nombre
        FROM patologia
        WHERE id = P.patologia_id) AS patologia_nombre,
      P.sub_patologia_id AS subPatologia,
      (SELECT
          sub_patologia_nombre
        FROM sub_patologia
        WHERE id = P.sub_patologia_id) AS sub_patologia_nombre,
      (SELECT
          DATE_FORMAT(`FU_SHOW_FECHA_CONS_PAC`(P.id), '%d/%m/%Y')) AS fecha_con,
      P.mail AS email,
      P.telefono AS telefono,
      P.notas AS notas,
      (SELECT
          me.valor
        FROM maestro_estado me
        WHERE P.estado_id = me.id) AS estado,
      P.estado_id AS estado_id,
      (SELECT
          mes.valor
        FROM maestro_estado mes
        WHERE P.sub_estado_id = mes.id) AS sub_estado
    FROM paciente AS P
    WHERE P.estado_id = 7);

  SELECT
    *
  FROM TEMPORARY_LIST_PACIENTES_PENDIENTES;


END
$$

--
-- Create procedure `ST_LIST_PACIENTES_NO_APROBADOS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_PACIENTES_NO_APROBADOS ()
BEGIN


  DECLARE CONTINUE HANDLER FOR SQLSTATE '42S02' SET @err = 1;

  SET @err = 0;
  SET @table_name = 'TEMPORARY_LIST_PACIENTES_NO_APROBADOS';
  SET @sql_query = CONCAT('SELECT NULL FROM ', @table_name);
  PREPARE stmt1 FROM @sql_query;

  IF (@err = 0) THEN
    DROP TABLE TEMPORARY_LIST_PACIENTES_NO_APROBADOS;
    DEALLOCATE PREPARE stmt1;
  END IF;

  CREATE TEMPORARY TABLE TEMPORARY_LIST_PACIENTES_NO_APROBADOS (SELECT
      P.id AS id,
      CONCAT(P.apellido, ', ', P.nombre) AS name,
      P.sexo AS sexo,
      P.c_gestar AS cgestar,
      DATE_FORMAT(P.fecha_nac, '%d/%m/%Y') AS fnac,
      P.patologia_id AS patologia,
      (SELECT
          patologia_nombre
        FROM patologia
        WHERE id = P.patologia_id) AS patologia_nombre,
      P.sub_patologia_id AS subPatologia,
      (SELECT
          sub_patologia_nombre
        FROM sub_patologia
        WHERE id = P.sub_patologia_id) AS sub_patologia_nombre,
      (SELECT
          DATE_FORMAT(`FU_SHOW_FECHA_CONS_PAC`(P.id), '%d/%m/%Y')) AS fecha_con,
      P.mail AS email,
      P.telefono AS telefono,
      P.notas AS notas,
      (SELECT
          me.valor
        FROM maestro_estado me
        WHERE P.estado_id = me.id) AS estado,
      P.estado_id AS estado_id,
      (SELECT
          me.valor
        FROM maestro_estado me
        WHERE P.sub_estado_id = me.id) AS sub_estado
    FROM paciente AS P
    WHERE P.estado_id NOT IN (11, 12));

  SELECT
    *
  FROM TEMPORARY_LIST_PACIENTES_NO_APROBADOS;


END
$$

--
-- Create procedure `ST_LIST_PACIENTES_HABILITADOS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_PACIENTES_HABILITADOS (IN `v_filtro` int,
IN `v_ini` varchar(50))
COMMENT 'Lista los pacientes habilitados para la venta'
BEGIN


  DECLARE CONTINUE HANDLER FOR SQLSTATE '42S02' SET @err = 1;
  SET @err = 0;
  SET @table_name = 'TEMPORARY_LIST_PACIENTES_HABILITADOS';
  SET @sql_query = CONCAT('SELECT NULL FROM ', @table_name);
  PREPARE stmt1 FROM @sql_query;
  IF (@err = 0) THEN
    DROP TABLE TEMPORARY_LIST_PACIENTES_HABILITADOS;
    DEALLOCATE PREPARE stmt1;
  END IF;



  CREATE TEMPORARY TABLE TEMPORARY_LIST_PACIENTES_HABILITADOS (SELECT
      (SELECT
          mv.id
        FROM maestro_ventas mv
        WHERE mv.paciente_id = P.id
        AND mv.estado_id IN (22, 23)
        AND mv.venta_tipo_id IN (1, 2)
        ORDER BY mv.id DESC LIMIT 0, 1) AS u_idVenta,
      P.id AS idPac,
      (SELECT
          me.valor
        FROM maestro_estado me
        WHERE me.id = P.estado_id) AS estadoPac,
      CONCAT(P.apellido, ', ', P.nombre) AS name,
      P.sexo AS sexo,
      P.c_gestar AS cgestar,
      DATE_FORMAT(P.fecha_nac, '%d/%m/%Y') AS fnac,
      (SELECT
          pat.patologia_nombre
        FROM patologia pat
        WHERE pat.id = P.patologia_id) AS patologia,
      (SELECT
          spat.sub_patologia_nombre
        FROM sub_patologia spat
        WHERE spat.id = P.sub_patologia_id) AS subPatologia,
      (SELECT
          DATE_FORMAT(`FU_SHOW_FECHA_CONS_PAC`(P.id), '%d/%m/%Y')) AS fecha_con,
      IFNULL(P.mail, '-') AS email,
      IFNULL(P.telefono, '-') AS telefono,
      IFNULL(P.notas, 'Sin Notas') AS notas,
      (SELECT
          DATE_FORMAT(mv.fecha_venta, '%d/%m/%Y')
        FROM maestro_ventas mv
        WHERE mv.paciente_id = P.id
        AND mv.estado_id IN (22, 23)
        AND mv.venta_tipo_id IN (1, 2)
        ORDER BY mv.id DESC LIMIT 0, 1) AS u_fecha_venta,
      (SELECT
          me.valor
        FROM maestro_estado me
          LEFT JOIN maestro_ventas mv
            ON mv.estado_id = me.id
        WHERE mv.paciente_id = P.id
        AND mv.estado_id IN (22, 23)
        AND mv.venta_tipo_id IN (1, 2)
        ORDER BY mv.id DESC LIMIT 0, 1) AS u_venta_estado,
      (SELECT
          me.id
        FROM maestro_estado me
          LEFT JOIN maestro_ventas mv
            ON mv.estado_id = me.id
        WHERE mv.paciente_id = P.id
        AND mv.estado_id IN (22, 23)
        AND mv.venta_tipo_id IN (1, 2)
        ORDER BY mv.id DESC LIMIT 0, 1) AS u_venta_estado_id,
      (SELECT
          me.valor
        FROM maestro_estado me
        WHERE P.sub_estado_id = me.id) AS sub_estado
    FROM paciente AS P
    /*	  			LEFT JOIN maestro_ventas mv ON mv.paciente_id = P.id
    	  			LEFT JOIN maestro_estado mev ON mev.id = mv.estado_id
    	  			LEFT JOIN maestro_estado mep ON mep.id = P.estado_id*/
    WHERE P.estado_id IN (11) -- Se verifica el estado 11 = Aprobado 
    AND
    P.sub_estado_id IN (8) -- Se verifica el sub estado 8 = Activo );
    GROUP BY P.id);

  IF (v_filtro = 0) THEN
    SELECT
      *
    FROM TEMPORARY_LIST_PACIENTES_HABILITADOS;
  ELSE
    SELECT
      *
    FROM TEMPORARY_LIST_PACIENTES_HABILITADOS
    WHERE LEFT(name, 1) = v_ini;
  END IF;


END
$$

--
-- Create procedure `ST_LIST_PACIENTES_CON_VENTAS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_PACIENTES_CON_VENTAS ()
COMMENT 'Lista los datos de los pacientes con ventas realizadas'
BEGIN


  SELECT
    P.id AS idPac,
    (SELECT
        me.valor
      FROM maestro_estado me
      WHERE me.id = P.estado_id) AS estadoPac,
    P.nombre_completo AS name,
    P.sexo AS sexo,
    P.c_gestar AS cgestar,
    (SELECT
        FU_GET_PACIENTE_EDAD(P.id)) AS edad,
    DATE_FORMAT(P.fecha_nac, '%d/%m/%Y') AS fnac,
    (SELECT
        pat.patologia_nombre
      FROM patologia pat
      WHERE pat.id = P.patologia_id) AS patologia,
    (SELECT
        spat.sub_patologia_nombre
      FROM sub_patologia spat
      WHERE spat.id = P.sub_patologia_id) AS subPatologia,
    (SELECT
        DATE_FORMAT(`FU_SHOW_FECHA_CONS_PAC`(P.id), '%d/%m/%Y')) AS fecha_con,
    IFNULL(P.mail, '-') AS email,
    IFNULL(P.telefono, '-') AS telefono,
    IFNULL(P.notas, 'Sin Notas') AS notas,
    (SELECT
        me.valor
      FROM maestro_estado me
      WHERE P.sub_estado_id = me.id) AS sub_estado
  FROM paciente AS P
    INNER JOIN maestro_ventas m
      ON m.paciente_id = P.id
  GROUP BY P.id
  HAVING COUNT(*) > 0;

END
$$

--
-- Create procedure `ST_LIST_PACIENTES`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_PACIENTES (IN `v_filtro` int,
IN `v_ini` varchar(1))
COMMENT 'Crea la tabla temporal del listado de pacientes que luego puede ser filtrada'
BEGIN




  DECLARE CONTINUE HANDLER FOR SQLSTATE '42S02' SET @err = 1;
  SET @err = 0;
  SET @table_name = 'TEMPORARY_LIST_PACIENTES';
  SET @sql_query = CONCAT('SELECT NULL FROM ', @table_name);
  PREPARE stmt1 FROM @sql_query;
  IF (@err = 0) THEN
    DROP TABLE TEMPORARY_LIST_PACIENTES;
    DEALLOCATE PREPARE stmt1;
  END IF;
  SET @p_u_venta := (SELECT
      DATE_FORMAT(mv.fecha_venta, '%d/%m/%Y') AS uventa
    FROM maestro_ventas mv
    WHERE mv.paciente_id = 1
    ORDER BY mv.id DESC LIMIT 0, 1);
  CREATE TEMPORARY TABLE TEMPORARY_LIST_PACIENTES (SELECT
      P.id AS id,
      CONCAT(P.apellido, ', ', P.nombre) AS name,
      P.sexo AS sexo,
      P.c_gestar AS cgestar,
      DATE_FORMAT(P.fecha_nac, '%d/%m/%Y') AS fnac,
      (SELECT
          FU_GET_PACIENTE_EDAD(P.id)) AS edad,
      (SELECT
          pat.patologia_nombre
        FROM patologia pat
        WHERE pat.id = P.patologia_id) AS patologia,
      (SELECT
          spat.sub_patologia_nombre
        FROM sub_patologia spat
        WHERE spat.id = P.sub_patologia_id) AS subPatologia,
      (SELECT
          DATE_FORMAT(`FU_SHOW_FECHA_CONS_PAC`(P.id), '%d/%m/%Y')) AS fecha_con,
      IFNULL(P.mail, '-') AS email,
      IFNULL(P.telefono, '-') AS telefono,
      IFNULL(P.notas, 'Sin Notas') AS notas,
      (SELECT
          me.valor
        FROM maestro_estado me
        WHERE P.estado_id = me.id) AS estado,
      (SELECT
          DATE_FORMAT(mv.fecha_venta, '%d/%m/%Y') AS uventa
        FROM maestro_ventas mv
        WHERE mv.paciente_id = P.id
        ORDER BY mv.id DESC LIMIT 0, 1) AS uventa,
      (SELECT
          me.valor
        FROM maestro_estado me
        WHERE P.sub_estado_id = me.id) AS sub_estado
    FROM paciente AS P
  /*LEFT JOIN 
		vw_lastsale_rm AS vRM 
	ON (P.id = vRM.pid)*/);

  IF (v_filtro = 0) THEN
    SELECT
      *
    FROM TEMPORARY_LIST_PACIENTES;
  ELSE
    SELECT
      *
    FROM TEMPORARY_LIST_PACIENTES
    WHERE LEFT(name, 1) = v_ini;
  END IF;


END
$$

--
-- Create procedure `ST_DISABLE_OLD_DOC_PAC`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_DISABLE_OLD_DOC_PAC (IN `v_idPac` int,
IN `v_idTipoDoc` int)
COMMENT 'Coloca el estado inactivo a los documentos de un paciente'
BEGIN

  DECLARE counter int;

  SET counter = (SELECT
      COUNT(*)
    FROM rel_paciente_documentos rel
      INNER JOIN documentos d
        ON d.documentos_tipo_id = v_idTipoDoc
    WHERE rel.paciente_id = v_idPac);

  IF (counter > 0) THEN

    UPDATE documentos
    INNER JOIN rel_paciente_documentos
      ON rel_paciente_documentos.documento_id = documentos.id
    INNER JOIN paciente
      ON rel_paciente_documentos.paciente_id = paciente.id
    INNER JOIN documentos_tipo
      ON documentos.documentos_tipo_id = documentos_tipo.id
    SET documentos.estado_id = 16
    WHERE paciente.id = v_idPac
    AND documentos_tipo.id = v_idTipoDoc;

  END IF;

END
$$

DELIMITER ;

--
-- Create table `rel_medico_documentos`
--
CREATE TABLE IF NOT EXISTS rel_medico_documentos (
  id int(11) NOT NULL AUTO_INCREMENT,
  medico_id int(11) UNSIGNED NOT NULL,
  documento_id int(11) NOT NULL,
  fecha_creacion timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  estado_id int(10) NOT NULL DEFAULT 15,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 21,
AVG_ROW_LENGTH = 16384,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla de relacion entre los documentos y los registro de la venta';

--
-- Create foreign key
--
ALTER TABLE rel_medico_documentos
ADD CONSTRAINT FK_rel_doc_medico FOREIGN KEY (documento_id)
REFERENCES documentos (id);

--
-- Create foreign key
--
ALTER TABLE rel_medico_documentos
ADD CONSTRAINT FK_rel_med_doc_estado FOREIGN KEY (estado_id)
REFERENCES maestro_estado (id);

--
-- Create foreign key
--
ALTER TABLE rel_medico_documentos
ADD CONSTRAINT FK_rel_medico_doc FOREIGN KEY (medico_id)
REFERENCES medico (id);

--
-- Create table `especialidad`
--
CREATE TABLE IF NOT EXISTS especialidad (
  id int(11) NOT NULL AUTO_INCREMENT,
  especialidad varchar(100) DEFAULT NULL,
  familia varchar(3) DEFAULT NULL,
  estado_id int(11) DEFAULT NULL,
  usuario_audit varchar(45) DEFAULT NULL,
  fecha_audit timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 8192,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

DELIMITER $$

--
-- Create function `FU_UP_MED`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_MED (`v_nombre` varchar(200),
`v_matricula_tipo` varchar(45),
`v_matricula_numero` varchar(45),
`v_Lugar` varchar(45),
`v_C_Atencion` varchar(255),
`v_telefono` varchar(45),
`v_Fax` varchar(45),
`v_domicilio` varchar(255),
`v_localidad` varchar(255),
`v_fecha_cap` varchar(20),
`v_especialidad` varchar(255),
`v_apm` int,
`v_estado` varchar(15),
`v_usuario` varchar(45),
`v_id` int
,
`v_email` varchar(255))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  IF v_estado = 'Activo' THEN
    UPDATE medicos
    SET Aprobado = v_usuario,
        Fecha_Aprobado = NOW()
    WHERE id = v_id;
  END IF;

  UPDATE medicos
  SET Nombre = v_nombre,
      matricula_tipo = v_matricula_tipo,
      matricula_numero = v_matricula_numero,
      Lugar = v_Lugar,
      C_Atencion = v_C_Atencion,
      telefono = v_telefono,
      Fax = v_Fax,
      nacimiento = v_nacimiento,
      domicilio = v_domicilio,
      localidad = v_localidad,
      fecha_cap = v_fecha_cap,
      especialidad = v_especialidad,
      apm = v_apm,
      estado = v_estado,
      mail = v_email
  WHERE id = v_id;



  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_UP_ESP`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_ESP (`v_nombre` varchar(100),
`v_familia` varchar(3),
`v_estado` varchar(45),
`v_usuario` varchar(45),
`v_id` int)
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  UPDATE especialidad e
  SET e.especialidad = v_nombre,
      e.familia = v_familia,
      e.estado_id = (SELECT
          m.id
        FROM maestro_estado m
        WHERE m.valor = v_estado
        AND m.referencia = 'especialidad'),
      usuario_audit = v_usuario
  WHERE id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_NEW_ESP`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_ESP (`v_nombre` varchar(100),
`v_familia` varchar(3),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO especialidad (especialidad,
  familia,
  estado_id,
  usuario_audit)
    SELECT
      v_nombre,
      v_familia,
      28,
      v_usuario
    FROM dual
    WHERE NOT EXISTS (SELECT
        *
      FROM especialidad
      WHERE especialidad = v_nombre
      AND familia = v_familia
      AND usuario_audit = v_usuario);

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create procedure `ST_SHOW_ESPECIALIDAD`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_ESPECIALIDAD (IN `v_idEspecialidad` int)
COMMENT 'devuelve los datos de una especialidad'
BEGIN
  SELECT
    e.id,
    m.valor AS estado,
    e.especialidad,
    e.familia
  FROM especialidad e
    INNER JOIN maestro_estado m
      ON m.id = e.estado_id
  WHERE e.id = v_idEspecialidad;
END
$$

--
-- Create procedure `ST_LIST_ESPECIALIDADES`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_ESPECIALIDADES ()
COMMENT 'Devuelve el listado de especialidades'
BEGIN


  SELECT
    e.id,
    m.valor AS estado,
    e.especialidad,
    e.familia
  FROM especialidad e
    INNER JOIN maestro_estado m
      ON m.id = e.estado_id;



END
$$

DELIMITER ;

--
-- Create table `rel_medico_especialidad`
--
CREATE TABLE IF NOT EXISTS rel_medico_especialidad (
  id int(11) NOT NULL AUTO_INCREMENT,
  medico_id int(11) UNSIGNED NOT NULL DEFAULT 0,
  especialidad_id int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 50,
AVG_ROW_LENGTH = 16384,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

--
-- Create foreign key
--
ALTER TABLE rel_medico_especialidad
ADD CONSTRAINT FK_rel_esp FOREIGN KEY (especialidad_id)
REFERENCES especialidad (id);

--
-- Create foreign key
--
ALTER TABLE rel_medico_especialidad
ADD CONSTRAINT FK_rel_medico FOREIGN KEY (medico_id)
REFERENCES medico (id);

DELIMITER $$

--
-- Create function `FU_GET_ESP_MEDICO`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_GET_ESP_MEDICO (`v_idMedico` int)
RETURNS varchar(50) CHARSET latin1
COMMENT 'Obtiene las especialidades de un medico'
BEGIN

  RETURN (SELECT
      GROUP_CONCAT(e.especialidad)
    FROM especialidad e
      INNER JOIN rel_medico_especialidad r
        ON r.especialidad_id = e.id
      INNER JOIN medico m
        ON m.id = r.medico_id
    WHERE m.id = v_idMedico);

END
$$

--
-- Create procedure `ST_LIST_MEDICOS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_LIST_MEDICOS (IN `v_filtro` varchar(50))
COMMENT 'Filtro de medicos activos'
BEGIN
  SELECT
    m.id,
    CONCAT(m.apellido, ',', m.nombre) AS nombre,
    mmt.valor AS matricula_tipo,
    m.matricula_numero,
    m.c_atencion,
    me.valor,
    (SELECT
        `FU_GET_ESP_MEDICO`(m.id)) AS especialidad,
    a.nombre_completo AS apm_nombre,
    me.valor AS estado,
    m.telefono,
    m.fax,
    m.mail,
    DATE_FORMAT(m.fecha_cap, '%d/%m/%Y') AS fecha_cap

  FROM medico m
    INNER JOIN medico_matricula mm
      ON mm.id = m.matricula_tipo_id
    INNER JOIN medico_matricula_tipo mmt
      ON mmt.id = mm.tipo_matricula_id
    INNER JOIN maestro_estado me
      ON me.id = m.estado_id
    INNER JOIN apm a
      ON a.id = m.apm_id
  WHERE LEFT(m.apellido, 1) LIKE CONCAT('%', v_filtro, '%')
  ORDER BY nombre ASC;
END
$$

--
-- Create procedure `ST_SHOW_MEDICO`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_SHOW_MEDICO (IN `v_idMedico` int)
COMMENT 'Muestra los datos de un medico'
BEGIN

  SELECT
    m.id,
    m.nombre,
    m.apellido,
    m.lugar,
    m.c_atencion,
    m.telefono,
    m.fax,
    m.mail,
    m.domicilio,
    m.localidad,
    m.fecha_cap,
    m.notas_mod,
    me.valor AS estado,
    m.matricula_numero,
    (SELECT
        DATE_FORMAT(m.fecha_venta, '%d/%m/%Y')
      FROM maestro_ventas m
      WHERE m.medico_id = v_idMedico
      ORDER BY m.id DESC LIMIT 0, 1) AS u_venta,
    GROUP_CONCAT(e.especialidad) AS especialidad_nombre,
    a.id AS apm_id,
    mmat.id AS matricula_tipo
  FROM medico m
    INNER JOIN rel_medico_especialidad rme
      ON rme.medico_id = m.id
    INNER JOIN especialidad e
      ON e.id = rme.especialidad_id
    INNER JOIN apm a
      ON a.id = m.apm_id
    INNER JOIN medico_matricula mmat
      ON mmat.id = m.matricula_tipo_id
    INNER JOIN medico_matricula_tipo mmt
      ON mmt.id = mmat.tipo_matricula_id
    INNER JOIN maestro_estado me
      ON me.id = m.estado_id
  WHERE m.id = v_idMedico;

END
$$

--
-- Create procedure `ST_REL_ESP_MED`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_REL_ESP_MED (IN `v_medico_id` int,
IN `v_especialidad` varchar(255))
COMMENT 'Establece la relacion entre medico y especialidad/es'
BEGIN

  SET @esp_id := (SELECT
      e.id
    FROM especialidad e
    WHERE e.especialidad = v_especialidad);
  SET @count_medico := (SELECT
      COUNT(*)
    FROM rel_medico_especialidad rme
    WHERE rme.medico_id = v_medico_id);

  IF (@count_medico > 0) THEN
    DELETE
      FROM rel_medico_especialidad
    WHERE medico_id = v_medico_id
      AND especialidad_id = @esp_id;

  END IF;
  INSERT INTO rel_medico_especialidad (medico_id, especialidad_id)
    VALUES (v_medico_id, @esp_id);



END
$$

DELIMITER ;

--
-- Create table `soliris_seguridad`
--
CREATE TABLE IF NOT EXISTS soliris_seguridad (
  id int(11) NOT NULL AUTO_INCREMENT,
  pagina varchar(100) DEFAULT NULL,
  descripcion varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 129,
AVG_ROW_LENGTH = 277,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `rel_seguridad_rol`
--
CREATE TABLE IF NOT EXISTS rel_seguridad_rol (
  id int(11) NOT NULL AUTO_INCREMENT,
  seguridad_id int(11) NOT NULL DEFAULT 0,
  rol_id int(11) UNSIGNED NOT NULL DEFAULT 0,
  fecha timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 243,
AVG_ROW_LENGTH = 87,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla que vincula las paginas y los roles admitidos para esta';

--
-- Create foreign key
--
ALTER TABLE rel_seguridad_rol
ADD CONSTRAINT FK_rol_seguridad FOREIGN KEY (rol_id)
REFERENCES rol (id);

--
-- Create foreign key
--
ALTER TABLE rel_seguridad_rol
ADD CONSTRAINT FK_seguridad_rol FOREIGN KEY (seguridad_id)
REFERENCES soliris_seguridad (id) ON DELETE NO ACTION ON UPDATE CASCADE;

DELIMITER $$

--
-- Create procedure `ST_GET_ACCESS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GET_ACCESS (IN `v_pagina` varchar(50),
IN `v_grupo` varchar(50))
COMMENT 'Detecta si el rol del usuario tiene permisos a la pagina solicitada'
BEGIN

  DECLARE pagina_id int;
  DECLARE grupo_id int;


  SET pagina_id = (SELECT
      id
    FROM soliris_seguridad s
    WHERE s.pagina = v_pagina);
  SET grupo_id = (SELECT
      id
    FROM rol r
    WHERE r.nombre = v_grupo);

  SELECT
    COUNT(*)
  FROM rel_seguridad_rol rsr
  WHERE rsr.seguridad_id = pagina_id
  AND rsr.rol_id = grupo_id;


END
$$

--
-- Create procedure `ST_GET_MAESTRO_ESTADO_ACTIVO`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GET_MAESTRO_ESTADO_ACTIVO (IN `v_referencia` varchar(50),
OUT `v_res` int)
COMMENT 'Obtiene el ID del valor activo para la referencia pasada por parametro'
BEGIN

  SELECT
    m.id
  FROM maestro_estado m
  WHERE m.referencia = v_referencia
  AND m.valor = 'Activo' INTO v_res;

END
$$

--
-- Create procedure `ST_GET_SUB_PATOLOGIA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GET_SUB_PATOLOGIA (IN `v_patologia_id` int)
COMMENT 'Obtiene las subpatologias en base a la patologia pasada por parametro'
BEGIN

  CALL `ST_GET_MAESTRO_ESTADO_ACTIVO`('patologia', @id_estado);

  SELECT
    sp.id,
    sp.sub_patologia_nombre
  FROM sub_patologia sp
    INNER JOIN rel_patologia_sub_patologia rp
      ON sp.id = rp.sub_patologia_id
    INNER JOIN patologia p
      ON rp.patologia_id = p.id
  WHERE p.id = v_patologia_id
  AND p.estado_id = (SELECT
      @id_estado);



END
$$

DELIMITER ;

--
-- Create table `maestro_ventas_lockeo`
--
CREATE TABLE IF NOT EXISTS maestro_ventas_lockeo (
  id int(11) NOT NULL AUTO_INCREMENT,
  venta_id int(11) UNSIGNED NOT NULL DEFAULT 0,
  usuario_id int(11) UNSIGNED NOT NULL DEFAULT 0,
  fecha_stamp timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 7,
AVG_ROW_LENGTH = 16384,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla que gestiona los lockeo de registros de venta para su modificacion o creacion de NP';

DELIMITER $$

--
-- Create procedure `ST_DELETE_CONTROL_MODIFICAR_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_DELETE_CONTROL_MODIFICAR_VENTA (IN `v_idVenta` int,
IN `v_idUsuario` int,
IN `v_idEstado` int)
COMMENT 'borrar el registro asociado con el lockeo de la modificacion de la venta'
BEGIN

  IF (v_idEstado <> 23) THEN

    DELETE
      FROM maestro_ventas_lockeo
    WHERE venta_id = v_idVenta
      AND usuario_id;

  END IF;


END
$$

--
-- Create procedure `ST_CONTROL_MODIFICAR_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_CONTROL_MODIFICAR_VENTA (IN `v_idVenta` int
,
IN `v_userName` varchar(50))
COMMENT 'DEVUELVE EL ESTADO DE LA VENTA, SI ESTA SIENDO MODIFICADA O TOMADA POR NP'
BEGIN

  -- verificar si es el mismo usuario actualizar fecha y no lockear al usuario

  -- CONTROLA:
  -- SI LA VENTA TIENE UNA NP ASOCIADA
  -- SI LA VENTA ESTA SIENDO MODIFICADA
  -- 	- SI LA VENTA ESTA MODIFICADA DEVUELVE EL USUARIO QUE TIENE BLOQUEADO EL REGISTRO
  SET @countLockeo := (SELECT
      COUNT(*)
    FROM maestro_ventas_lockeo mvl
    WHERE mvl.venta_id = v_idVenta);
  SET @userLockeo := (SELECT
      mvl.usuario_id
    FROM maestro_ventas_lockeo mvl
    WHERE mvl.venta_id = v_idVenta);
  SET @userId := (SELECT
      FU_GET_ID_USUARIO(v_userName));
  /** Verifico que el registro de venta no este en NP **/
  SET @countNp := (SELECT
      COUNT(*)
    FROM maestro_ventas mv
    WHERE mv.id = v_idVenta
    AND mv.estado_id = 23);

  IF (@countNp > 0) THEN
    SELECT
      (SELECT
          'Venta con NP Asociada!') AS title,
      (SELECT
          CONCAT('La venta <b>', v_idVenta, '</b> esta asociado con la NP <b>', mv.nbr, '</b>. <br/> No se podrán realizar modificaciones al registro')) AS text
    FROM maestro_ventas mv
    WHERE mv.id = v_idVenta;
  ELSE
    IF (@userLockeo = @userId) THEN
      DELETE
        FROM maestro_ventas_lockeo
      WHERE venta_id = v_idVenta
        AND usuario_id = @userLockeo;
      INSERT INTO maestro_ventas_lockeo
      SET venta_id = v_idVenta,
          usuario_id = (SELECT
              FU_GET_ID_USUARIO(v_userName));
      SELECT
        TRUE AS mensaje;
    ELSE
      IF (@countLockeo > 0) THEN
        SELECT
          (SELECT
              'Registro Bloqueado!') AS title,
          (SELECT
              CONCAT('El registro esta siendo modificado por el usuario: <b>', UPPER((SELECT
                  FU_GET_USERNAME_USUARIO(m.usuario_id))), '</b>.<br/>  No se podrán realizar modificaciones al registro')) AS text
        FROM maestro_ventas_lockeo m
        WHERE venta_id = v_idVenta;
      ELSE
        INSERT INTO maestro_ventas_lockeo
        SET venta_id = v_idVenta,
            usuario_id = (SELECT
                FU_GET_ID_USUARIO(v_userName));
        SELECT
          TRUE AS mensaje;

      END IF;
    END IF;
  END IF;
END
$$

--
-- Create procedure `ST_CANCELAR_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_CANCELAR_VENTA (IN `v_id` int,
IN `v_usuario` varchar(50))
COMMENT 'Cancela la venta '
BEGIN


  SET @usuario_id = (SELECT
      FU_GET_ID_USUARIO(v_usuario));

  -- CUENTO SI LA VENTA QUE SE ESTA INTENTANDO ELIMINAR SE ENCUENTRA EN NP
  SET @count_venta_np = (SELECT
      COUNT(*)
    FROM maestro_ventas m
    WHERE m.id = v_id
    AND m.estado_id = 23);


  IF (@count_venta_np = 0) THEN

    -- ACTUALIZO EL ESTADO DE LA VENTA A ELIMINADA Y EL TIPO DE VENTA SE LE COLOCA "CA" PARA LAS FUTURAS VENTAS NO TENER PROBLEMAS
    -- CON EL ESTABLECIMIENTO DEL ESTADO RI o FU
    UPDATE maestro_ventas m
    SET m.estado_id = 14,
        m.venta_tipo_id = 3,
        m.usuario_mod_id = @usuario_id,
        m.fecha_mod = NOW()
    WHERE m.id = v_id;

    -- ESTO SERA UTILIZADO POR EL AJX.MODIFICAR_VENTA.PHP PARA LA DEVOLUCION AL PLUGIN SWEETEALERT2
    SELECT
      'Venta Cancelada' AS title,
      'success' AS icon,
      'Se modificó el estado de la venta a Cancelada' AS text,
      TRUE AS mensaje;
    -- LIBERO LOS BLOQUEOS DE LA VENTA EN LA TABLA DE BLOQUEOS
    DELETE
      FROM maestro_ventas_lockeo
    WHERE venta_id = v_id;
  ELSE

    SELECT
      'Error' AS title,
      'error' AS icon,
      'La venta se encuentra con una NP asociada y no puede ser cancelada' AS text,

      FALSE AS mensaje;

  END IF;
END
$$

DELIMITER ;

--
-- Create table `soliris_log`
--
CREATE TABLE IF NOT EXISTS soliris_log (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  usuario varchar(45) NOT NULL DEFAULT '',
  fecha timestamp NOT NULL,
  accion longtext DEFAULT NULL COMMENT 'UPDATE/DELETE/INSERT',
  registro longtext DEFAULT NULL COMMENT 'Campo de la tabla',
  notas longtext DEFAULT NULL,
  tabla varchar(45) DEFAULT NULL,
  id_registro int(10) UNSIGNED DEFAULT NULL,
  valor_anterior varchar(50) DEFAULT NULL,
  valor_nuevo varchar(50) DEFAULT NULL,
  aux1 varchar(50) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 221,
AVG_ROW_LENGTH = 1024,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

DELIMITER $$

--
-- Create procedure `put_log`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE put_log (IN `v_usuario` varchar(50),
IN `v_id` int,
IN `v_tabla` varchar(50),
IN `v_notas` longtext)
COMMENT 'Carga informacion al log de la app'
BEGIN

  DECLARE d_values longtext;

  SET d_values = (SELECT
      GROUP_CONCAT(column_name)
    FROM information_schema.COLUMNS
    WHERE TABLE_SCHEMA = 'soliris'
    AND TABLE_NAME = v_tabla);



  INSERT INTO soliris_log (usuario, fecha, accion, registro, tabla, notas)
    (SELECT
        d_values
      FROM v_tabla
      WHERE id = v_id);


END
$$

--
-- Create function `FU_CLE_TAGS`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_CLE_TAGS (`$str` text)
RETURNS text CHARSET latin1
COMMENT 'Limpia los tags HTML'
BEGIN

  DECLARE $start,
          $end int DEFAULT 1;
  LOOP
    SET $start = LOCATE("<", $str, $start);
    IF (!$start) THEN
      RETURN $str;
    END IF;
    SET $end = LOCATE(">", $str, $start);
    IF (!$end) THEN
      SET $end = $start;
    END IF;
    SET $str = INSERT($str, $start, $end - $start + 1, "");
  END LOOP;

END
$$

DELIMITER ;

--
-- Create table `configuracion`
--
CREATE TABLE IF NOT EXISTS configuracion (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  tipo varchar(100) NOT NULL DEFAULT '',
  valor int(10) UNSIGNED NOT NULL DEFAULT 0,
  flia varchar(3) NOT NULL DEFAULT '',
  descripcion varchar(255) DEFAULT NULL,
  aux_1 varchar(255) DEFAULT NULL,
  aux_2 varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

DELIMITER $$

--
-- Create function `FU_VAL_PAC_EDAD`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_VAL_PAC_EDAD (`v_edad` int,
`v_sexo` varchar(5))
RETURNS text CHARSET latin1
BEGIN

  DECLARE res text;
  DECLARE edad_ped int;
  DECLARE edad_c_g int;

  SET edad_ped = (SELECT
      SUBSTRING_INDEX(GROUP_CONCAT(valor), ',', 1) AS e_ped
    FROM configuracion
    WHERE tipo = 'edad_paciente');
  SET edad_c_g = (SELECT
      SUBSTRING_INDEX(GROUP_CONCAT(valor), ',', -1) AS e_c_ges
    FROM configuracion
    WHERE tipo = 'edad_paciente');

  CASE
    WHEN (v_edad <= edad_ped) THEN SET res = (SELECT
            CONCAT_WS(',', nota, FU_CLE_TAGS(nota))
          FROM configuracion
          WHERE valor = edad_ped);
    WHEN ((v_edad > edad_ped AND
      v_edad <= edad_c_g) AND
      (v_sexo = 'F')) THEN SET res = (SELECT
            CONCAT_WS(',', nota, FU_CLE_TAGS(nota))
          FROM configuracion
          WHERE valor = edad_c_g);
  END CASE;
  RETURN res;


END
$$

--
-- Create procedure `ST_inact_medico`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_inact_medico ()
BEGIN
  DECLARE d_id_med int;
  DECLARE d_fecha date;
  DECLARE d_limite int;
  DECLARE d_const varchar(50);


  SET d_limite = (SELECT
      valor
    FROM configuracion
    WHERE id = 8);
  INSERT INTO soliris_log
  SET usuario = 'sistema',
      fecha = NOW(),
      accion = 'Inactivacion medicos',
      notas = (SELECT
          CONCAT(estado, '=', COUNT(*))
        FROM medicos
        WHERE estado = 'Inactivo');
  UPDATE medicos AS m
  SET m.estado = 'Inactivo',
      m.fecha_inac = NOW()
  WHERE COALESCE((SELECT
      DATEDIFF(NOW(), t.fecha)
    FROM soliris_maestro AS t
    WHERE t.medico = m.nombre
    ORDER BY t.id
    DESC LIMIT 1), DATEDIFF(NOW(), m.fecha_alta)) > d_limite
  AND m.estado = 'Activo'

  ;
  INSERT INTO soliris_log
  SET usuario = 'sistema',
      fecha = NOW(),
      accion = 'Inactivacion medicos',
      notas = (SELECT
          CONCAT(estado, '=', COUNT(*))
        FROM medicos
        WHERE estado = 'Inactivo');
END
$$

DELIMITER ;

--
-- Create table `auxiliar`
--
CREATE TABLE IF NOT EXISTS auxiliar (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  valor varchar(45) DEFAULT NULL,
  tipo varchar(45) DEFAULT NULL,
  familia varchar(3) NOT NULL DEFAULT '',
  estado varchar(45) DEFAULT NULL,
  usuario_audit varchar(45) DEFAULT NULL,
  fecha_audit timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 111,
AVG_ROW_LENGTH = 264,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci;

DELIMITER $$

--
-- Create function `FU_UP_UNIDADES`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_UP_UNIDADES (`v_nombre` varchar(45),
`v_familia` varchar(3),
`v_usuario` varchar(45),
`v_id` int)
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  UPDATE auxiliar
  SET valor = v_nombre,
      familia = v_familia,
      usuario_audit = v_usuario
  WHERE tipo = 'unidades'
  AND id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;

END
$$

--
-- Create function `FU_NEW_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_VENTA (`v_id_paciente` int,
`v_f_venta` date,
`v_patologia` longtext,
`v_dosis` varchar(200),
`v_unidades` int,
`v_institucion` longtext,
`v_canal` varchar(200),
`v_medico` varchar(200),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;
  DECLARE c_tipo varchar(2);
  DECLARE c_padre int;

  DECLARE devolucion longtext;

  SET c_padre = NULL;
  SET c_tipo = 'RI';

  SET c_padre = (SELECT
      RM.id
    FROM soliris_maestro AS RM
    WHERE RM.nombre = v_id_paciente
    ORDER BY RM.id DESC LIMIT 1);

  IF (SELECT
        LENGTH(c_padre) > 0) THEN
    SET c_tipo = 'FU';
  END IF;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO soliris_maestro
  SET nombre = v_id_paciente,
      sexo = (SELECT
          sexo
        FROM pacientes AS P
        WHERE P.id = v_id_paciente),
      fecha_nac = (SELECT
          fecha_nac
        FROM pacientes AS P
        WHERE P.id = v_id_paciente),
      /*	edad = (SELECT YEAR(CURDATE())- YEAR(STR_TO_DATE(P.fecha_nac, '%Y-%c-%e')) FROM pacientes as P WHERE P.id = v_id_paciente), PMIRANDA*/
      edad = (SELECT
          TIMESTAMPDIFF(year, STR_TO_DATE(P.fecha_nac, '%Y-%c-%e'), CURDATE())
        FROM pacientes AS P
        WHERE P.id = v_id_paciente),
      /* 	edad = (SELECT YEAR(CURDATE())- YEAR(STR_TO_DATE(P.fecha_nac, '%e-%c-%Y')) FROM pacientes as P WHERE P.id = v_id_paciente), */
      medico = (SELECT
          M.Nombre
        FROM medicos AS M
        WHERE M.id = v_medico),
      id_medico = (SELECT
          M.id
        FROM medicos AS M
        WHERE M.id = v_medico),
      dosis = (SELECT
          A.valor
        FROM auxiliar AS A
        WHERE A.id = v_dosis),
      unidades = (SELECT
          A.valor
        FROM auxiliar AS A
        WHERE A.id = v_unidades),
      fecha_venta = v_f_venta,
      consentimiento = (SELECT
          P.Fecha_Con
        FROM pacientes AS P
        WHERE P.id = v_id_paciente),
      patologia = v_patologia,
      institucion = (SELECT
          I.nombre
        FROM institucion AS I
        WHERE I.id = v_institucion),
      canal = (SELECT
          C.canal
        FROM canales AS C
        WHERE C.id = v_canal),
      cargado = v_usuario,
      fecha = NOW(),
      tipo = c_tipo,
      padre = c_padre,
      estado = 'Documentacion',
      APM = (SELECT
          A.nombre
        FROM medicos AS M
          LEFT JOIN apm AS A
            ON (M.apm = A.id)
        WHERE M.id = v_medico);


  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create function `FU_NEW_UNIDADES`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_NEW_UNIDADES (`v_nombre` varchar(45),
`v_familia` varchar(3),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  INSERT INTO auxiliar (valor,
  tipo,
  familia,
  estado,
  usuario_audit)
    SELECT
      v_nombre,
      'unidades',
      v_familia,
      'Activo',
      v_usuario
    FROM dual
    WHERE NOT EXISTS (SELECT
        *
      FROM auxiliar
      WHERE valor = v_nombre
      AND tipo = 'unidades'
      AND familia = v_familia
      AND usuario_audit = v_usuario);

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

--
-- Create function `FU_MOD_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_MOD_VENTA (`v_idMst` int,
`v_f_venta` date,
`v_patologia` longtext,
`v_presentacion` varchar(200),
`v_unidades` int,
`v_institucion` longtext,
`v_canal` varchar(200),
`v_medico` varchar(200),
`v_usuario` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;

  UPDATE soliris_maestro
  SET medico = (SELECT
          M.Nombre
        FROM medicos AS M
        WHERE M.id = v_medico),
      presentacion = (SELECT
          A.valor
        FROM auxiliar AS A
        WHERE A.id = v_presentacion),
      unidades = (SELECT
          A.valor
        FROM auxiliar AS A
        WHERE A.id = v_unidades),
      fecha_venta = NOW(),
      patologia = v_patologia,
      institucion = (SELECT
          I.nombre
        FROM institucion AS I
        WHERE I.id = v_institucion),
      canal = (SELECT
          C.canal
        FROM canales AS C
        WHERE C.id = v_canal),
      cargado = v_usuario,
      fecha = NOW(),
      APM = (SELECT
          A.nombre
        FROM medicos AS M
          LEFT JOIN apm AS A
            ON (M.apm = A.id)
        WHERE M.id = v_medico)
  WHERE id = v_idMst;


  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_idMst;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;
END
$$

DELIMITER ;

--
-- Create table `soliris_documentacion`
--
CREATE TABLE IF NOT EXISTS soliris_documentacion (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  maestro_id int(10) UNSIGNED NOT NULL DEFAULT 0,
  referencia varchar(45) NOT NULL DEFAULT '0',
  documento varchar(255) NOT NULL DEFAULT '',
  tipo varchar(45) NOT NULL DEFAULT '',
  fecha date NOT NULL,
  fecha_audit timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  usuario_id int(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create index `idMstr` on table `soliris_documentacion`
--
ALTER TABLE soliris_documentacion
ADD INDEX idMstr (maestro_id);

--
-- Create index `referencia` on table `soliris_documentacion`
--
ALTER TABLE soliris_documentacion
ADD INDEX referencia (referencia);

DELIMITER $$

--
-- Create function `FU_ADJ_FILES`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_ADJ_FILES (`v_id_maestro` int,
`v_numero_reg` varchar(50),
`v_referencia` varchar(45),
`v_tipo` varchar(45),
`v_fecha` varchar(45),
`v_documento` varchar(255))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE id_1 int;
  DECLARE id_2 int;

  DECLARE devolucion longtext;

  SET id_1 = (SELECT
      LAST_INSERT_ID());

  IF v_numero_reg = 0 THEN
    INSERT INTO soliris_documentacion
    SET id_maestro = v_id_maestro,
        referencia = v_referencia,
        documento = v_documento,
        tipo = v_tipo,
        fecha = v_fecha;
  ELSE
    UPDATE soliris_documentacion
    SET id_maestro = v_id_maestro,
        referencia = v_referencia,
        documento = v_documento,
        tipo = v_tipo,
        fecha = v_fecha
    WHERE id = v_numero_reg;
  END IF;

  SET id_2 = (SELECT
      LAST_INSERT_ID());

  IF (id_1 <> id_2) THEN
    RETURN id_2;
  END IF;

  RETURN 'ERROR NO_INSERT';
END
$$

DELIMITER ;

--
-- Create table `soliris_consultas`
--
CREATE TABLE IF NOT EXISTS soliris_consultas (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  usuario varchar(10) NOT NULL DEFAULT '',
  consulta longtext NOT NULL,
  nombre varchar(100) NOT NULL DEFAULT '',
  test int(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `rel_mail_rol`
--
CREATE TABLE IF NOT EXISTS rel_mail_rol (
  id int(11) NOT NULL AUTO_INCREMENT,
  mail_configuracion_id int(11) NOT NULL DEFAULT 0,
  rol_id int(11) NOT NULL DEFAULT 0,
  estado_id int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 5,
AVG_ROW_LENGTH = 5461,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Tabla de relacion de avisos de mail en base al rol';

--
-- Create table `mail_configuracion`
--
CREATE TABLE IF NOT EXISTS mail_configuracion (
  id int(11) NOT NULL AUTO_INCREMENT,
  descripcion varchar(50) NOT NULL DEFAULT '',
  estado_id int(11) NOT NULL DEFAULT 0,
  familia varchar(50) NOT NULL DEFAULT '0',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
AUTO_INCREMENT = 3,
AVG_ROW_LENGTH = 8192,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Esta tabla va a contener los avisos que tiene el sistema';

--
-- Create table `log_accesos`
--
CREATE TABLE IF NOT EXISTS log_accesos (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  aplicacion varchar(100) NOT NULL DEFAULT '',
  usuario varchar(100) NOT NULL DEFAULT '',
  fecha varchar(50) NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `localidades`
--
CREATE TABLE IF NOT EXISTS localidades (
  id int(11) NOT NULL AUTO_INCREMENT,
  id_provincia int(11) NOT NULL,
  localidad varchar(255) NOT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

--
-- Create table `hist_paciente`
--
CREATE TABLE IF NOT EXISTS hist_paciente (
  id int(11) NOT NULL AUTO_INCREMENT,
  paciente_id int(11) DEFAULT NULL,
  estado_id int(11) DEFAULT NULL,
  fecha datetime DEFAULT NULL,
  usuario_id int(11) DEFAULT NULL,
  comentario varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Cambios de Estado sobre Paciente';

--
-- Create table `documentos_error`
--
CREATE TABLE IF NOT EXISTS documentos_error (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  operacion varchar(45) NOT NULL DEFAULT '',
  id_operacion int(10) UNSIGNED NOT NULL DEFAULT 0,
  nombre_doc varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET latin1,
COLLATE latin1_swedish_ci,
COMMENT = 'Log de error de subida de documentos';

--
-- Create table `aux_old`
--
CREATE TABLE IF NOT EXISTS aux_old (
  id int(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  valor varchar(45) DEFAULT NULL,
  tipo varchar(45) DEFAULT NULL,
  familia varchar(3) NOT NULL DEFAULT '',
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_general_ci;

DELIMITER $$

--
-- Create procedure `ST_VAL_PAC`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_VAL_PAC (IN `v_idPac` int,
IN `v_comentario` longtext,
IN `v_estado` int,
IN `v_usuario` varchar(45))
DETERMINISTIC
MODIFIES SQL DATA
BEGIN

  -- SETEO DE VARIABLES UTILIZADAS EN EL STORE PROCEDURED
  SET @p_usuario_id := 0; -- VARIABLE QUE CONTENDRA EL ID DEL USUARIO QUE REALIZA LA ACCION
  SET @p_id_pac = v_idPac;
  SET @p_comentario = v_comentario;
  SET @p_estado = v_estado;

  -- OBTENGO EL ID DEL USUARIO QUE ESTA HACIENDO LA ACCION
  SET @usuario_id = CONCAT("SELECT `FU_GET_ID_USUARIO`(?) INTO @p_usuario_id");
  PREPARE statement_usuario_id FROM @usuario_id;
  SET @p_username = v_usuario;
  EXECUTE statement_usuario_id USING @p_username;
  DEALLOCATE PREPARE statement_usuario_id;

  SET @query_update_paciente = CONCAT("UPDATE paciente p SET p.estado_id = ?, p.notas = ?, p.usuario_mod_id = ?, p.fecha_modificacion = NOW() WHERE p.id = ?");
  PREPARE statement_update_paciente FROM @query_update_paciente;
  EXECUTE statement_update_paciente USING @p_estado, @p_comentario, @p_usuario_id, @p_id_pac;
  DEALLOCATE PREPARE statement_update_paciente;

  -- RETORNO EL MENSAJE AL BACKEND
  SELECT
    "SE ACTUALIZO EL PACIENTE CORRECTAMENTE" AS mensaje;

END
$$

--
-- Create procedure `ST_UP_DOC_PACIENTE`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_UP_DOC_PACIENTE (IN `v_idPac` int,
IN `v_tipoDoc` varchar(50),
IN `v_nombreDoc` varchar(255),
IN `v_usuario` varchar(50)
,
IN `v_fecha_doc` date)
COMMENT 'Datos de la documentación subida del paciente'
BEGIN


  SET @p_nombre_doc := v_nombreDoc;
  SET @p_doc_tipo := 0;
  SET @p_usuario_id := 0;
  SET @p_id_paciente = v_idPac;
  SET @fecha_doc = v_fecha_doc;


  SET @documento_tipo_id = CONCAT("SELECT dt.id INTO @p_doc_tipo FROM documentos_tipo dt WHERE dt.tipo = ? AND dt.referencia = 'Paciente'");
  PREPARE statement_documento_tipo_id FROM @documento_tipo_id;
  SET @p_tipo = v_tipoDoc;
  EXECUTE statement_documento_tipo_id USING @p_tipo;
  DEALLOCATE PREPARE statement_documento_tipo_id;

  SET @usuario_id = CONCAT("SELECT `FU_GET_ID_USUARIO`(?) INTO @p_usuario_id");
  PREPARE statement_usuario_id FROM @usuario_id;
  SET @p_username = v_usuario;
  EXECUTE statement_usuario_id USING @p_username;
  DEALLOCATE PREPARE statement_usuario_id;


  SET @query_disable_docs = CONCAT("CALL `ST_DISABLE_OLD_DOC_PAC`(?, ?)");
  PREPARE statement_query_disable_docs FROM @query_disable_docs;
  EXECUTE statement_query_disable_docs USING @p_id_paciente, @p_doc_tipo;
  DEALLOCATE PREPARE statement_query_disable_docs;


  SET @query_documentos = CONCAT("INSERT INTO documentos (valor, documentos_tipo_id, fecha_creacion, fecha_documento, usuario_id, familia) VALUES (?, ?, NOW(), @fecha_doc, ?, 'SOL')");
  PREPARE statement_query_documentos FROM @query_documentos;
  EXECUTE statement_query_documentos USING @p_nombre_doc, @p_doc_tipo, @p_usuario_id;
  DEALLOCATE PREPARE statement_query_documentos;

  SET @query_rel_paciente_documentos = CONCAT("INSERT INTO rel_paciente_documentos (paciente_id, documento_id, fecha_creacion) VALUES (?, LAST_INSERT_ID(), NOW())");
  PREPARE statement_query_rel_paciente_documentos FROM @query_rel_paciente_documentos;
  EXECUTE statement_query_rel_paciente_documentos USING @p_id_paciente;
  DEALLOCATE PREPARE statement_query_rel_paciente_documentos;

  -- Se actualiza el estado a 7 (Pendiente de Aprobacion)

  SET @query_rel_paciente_documentos = CONCAT("UPDATE paciente SET estado_id = 7 WHERE id = ?");
  PREPARE statement_query_rel_paciente_documentos FROM @query_rel_paciente_documentos;
  EXECUTE statement_query_rel_paciente_documentos USING @p_id_paciente;
  DEALLOCATE PREPARE statement_query_rel_paciente_documentos;

  SELECT
    "SE CREO EL REGISTRO CORRECTAMENTE" AS mensaje;


END
$$

--
-- Create procedure `ST_REPORTE_FILTROS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_REPORTE_FILTROS (IN `v_anio_ini` varchar(50),
IN `v_anio_fin` varchar(50))
COMMENT 'STORE DEDICADO AL REPORTE FILTRO'
BEGIN
  IF (v_anio_ini <> ''
    AND v_anio_fin <> '') THEN
    SET @aoIni = v_anio_ini;
    SET @aoFin = v_anio_fin;
    SET @condicion = CONCAT('m.fecha_venta >= "', @aoIni, '" AND m.fecha_venta <= "', @aoFin, '" and m.estado_id in (23)');
  ELSE
    SET @condicion = CONCAT("year(m.fecha_venta)=year(now()) and m.estado_id in (23)");
  END IF;

  SET @query_select = CONCAT('SELECT ',
  '        m.id as Registro,',
  '        p.nombre_completo as Paciente,',
  '        p.sexo as Sexo,',
  '        date_format(p.fecha_nac, "%d/%m/%Y") as Fecha_Nacimiento,',
  '        p.c_gestar as C_Gestar,',
  '        m.edad,',
  '		  CONCAT(med.apellido, med.nombre) as Medico,',
  '        date_format(m.fecha_venta, "%d/%m/%Y") as Fecha_Venta,',
  '        DATE_FORMAT((SELECT FU_SHOW_FECHA_CONS_PAC(p.id)), "%d/%m/%Y") as Fecha_Cons,',
  '		  pat.patologia_nombre AS  Patologia,',
  '		  i.nombre as Institucion, ',
  '        can.canal as Canal,',
  '        a.nombre_completo as APM,',
  '		  med.c_atencion as C_Atencion,',
  '        mvt.valor as tipo,',
  '        me.valor as Estado,',
  '        pre.valor as Presentacion,',
  '        m.unidades as Unidades',
  '        FROM maestro_ventas as m',
  '         INNER JOIN paciente p ON p.id = m.paciente_id',
  '         INNER JOIN medico med ON med.id = m.medico_id',
  '         INNER JOIN patologia pat ON pat.id = p.patologia_id',
  '         INNER JOIN institucion i ON i.id = m.institucion_id',
  '         INNER JOIN canales can ON can.id = m.canal_id',
  '         INNER JOIN apm a ON a.id = med.apm_id',
  '         INNER JOIN maestro_ventas_tipo mvt ON mvt.id = m.venta_tipo_id',
  '        INNER JOIN maestro_estado me ON me.id = m.estado_id',
  '        INNER JOIN presentacion pre ON pre.id = m.presentacion_id',
  '         WHERE ', @condicion, 'ORDER BY m.id DESC');


  PREPARE stmt
  FROM @query_select;
  EXECUTE stmt;
  DEALLOCATE PREPARE stmt;
END
$$

--
-- Create procedure `st_reg_faltante`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE st_reg_faltante (IN `v_operacion` varchar(50), IN `v_idoperacion` int, IN `v_iddocumento` int, IN `v_nombre` varchar(255))
BEGIN

  DECLARE d_count int;


  SET d_count = (SELECT
      COUNT(id)
    FROM doc_error
    WHERE id_documento = v_iddocumento);


  IF (d_count = 0) THEN

    INSERT INTO doc_error
    SET operacion = v_operacion,
        id_operacion = v_idoperacion,
        id_documento = v_iddocumento,
        nombre_doc = v_nombre,
        estado = 0,
        fe_actualizacion = NOW();

  END IF;

END
$$

--
-- Create procedure `ST_GUARDAR_VENTA_DOCUMENTACION`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GUARDAR_VENTA_DOCUMENTACION (IN `v_idVenta` int,
IN `v_tipoDoc` int,
IN `v_nombreDoc` varchar(255)
,
IN `v_usuario` varchar(50),
IN `v_fecha_doc` date)
COMMENT 'Store que guarda la documentacion de la venta y la asocia al registro de venta'
BEGIN


  SET @p_nombre_doc := v_nombreDoc;
  SET @p_doc_tipo := v_tipoDoc;
  SET @p_username := v_usuario;
  SET @fecha_doc := v_fecha_doc;
  SET @p_idVenta := v_idVenta;
  SET @p_estado_doc_disable := 16;
  SET @p_estado_doc_enable := 15;

  SET @usuario_id = CONCAT("SELECT `FU_GET_ID_USUARIO`(?) INTO @p_usuario_id");
  PREPARE statement_usuario_id FROM @usuario_id;
  EXECUTE statement_usuario_id USING @p_username;
  DEALLOCATE PREPARE statement_usuario_id;

  -- Deshabilito los documentos anteriores de la venta
  SET @disable_docs = CONCAT('UPDATE documentos d',
  ' INNER JOIN rel_venta_documentos r ON r.documento_id = d.id ',
  ' SET d.estado_id = ? ',
  ' WHERE d.documentos_tipo_id = ? and r.venta_id = ?');
  PREPARE stmt_dis_docs FROM @disable_docs;
  EXECUTE stmt_dis_docs USING @p_estado_doc_disable, @p_doc_tipo, @p_idVenta;
  DEALLOCATE PREPARE stmt_dis_docs;


  SET @query_documentos = CONCAT("INSERT INTO documentos (valor, documentos_tipo_id, fecha_creacion, fecha_documento, usuario_id, familia) VALUES (?, ?, NOW(), @fecha_doc, ?, 'SOL')");
  PREPARE statement_query_documentos FROM @query_documentos;
  EXECUTE statement_query_documentos USING @p_nombre_doc, @p_doc_tipo, @p_usuario_id;
  DEALLOCATE PREPARE statement_query_documentos;

  SET @query_rel_venta_documentos = CONCAT("INSERT INTO rel_venta_documentos (venta_id, documento_id, fecha_creacion) VALUES (?, LAST_INSERT_ID(), NOW())");
  PREPARE statement_query_rel_venta_documentos FROM @query_rel_venta_documentos;
  EXECUTE statement_query_rel_venta_documentos USING @p_idVenta;
  DEALLOCATE PREPARE statement_query_rel_venta_documentos;

  SELECT
    "SE CREO EL REGISTRO CORRECTAMENTE" AS mensaje;


END
$$

--
-- Create procedure `ST_GUARDAR_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GUARDAR_VENTA (IN `v_id_paciente` int,
IN `v_medico_id` int,
IN `v_producto_id` int,
IN `v_presentacion_id` int,
IN `v_unidades` int,
IN `v_institucion_id` int,
IN `v_canal_id` int,
IN `v_usuario` varchar(50))
COMMENT 'store que guarda la venta asignada a un paciente'
BEGIN

  SET @p_username := v_usuario;
  SET @id_paciente := v_id_paciente;
  SET @v_medico_id := v_medico_id;
  SET @v_producto_id := v_producto_id;
  SET @v_unidades := v_unidades;
  SET @v_institucion_id := v_institucion_id;
  SET @v_canal_id := v_canal_id;
  SET @v_presentacion_id := v_presentacion_id;

  SET @paciente_venta_ri = CONCAT("SELECT COUNT(*) AS ri INTO @p_venta_ri FROM maestro_ventas m WHERE m.paciente_id = ? AND m.venta_tipo_id = 1");
  PREPARE statement_paciente_venta_ri FROM @paciente_venta_ri;
  EXECUTE statement_paciente_venta_ri USING @id_paciente;
  DEALLOCATE PREPARE statement_paciente_venta_ri;

  IF (@p_venta_ri > 0) THEN
    SET @p_tipo_venta_id = 2;
  ELSE
    SET @p_tipo_venta_id = 1;
  END IF;


  SET @usuario_id = CONCAT("SELECT `FU_GET_ID_USUARIO`(?) INTO @p_usuario_id");
  PREPARE statement_usuario_id FROM @usuario_id;
  EXECUTE statement_usuario_id USING @p_username;
  DEALLOCATE PREPARE statement_usuario_id;

  SET @query_edad = CONCAT("SELECT `FU_GET_PACIENTE_EDAD`(?) INTO @edad_paciente");
  PREPARE statement_edad_pac FROM @query_edad;
  EXECUTE statement_edad_pac USING @id_paciente;
  DEALLOCATE PREPARE statement_edad_pac;


  SET @paciente_patologia = CONCAT("SELECT p.patologia_id, p.sub_patologia_id INTO @patologia_id, @sub_patologia_id FROM paciente p WHERE p.id =?");
  PREPARE statement_paciente_patologia FROM @paciente_patologia;
  EXECUTE statement_paciente_patologia USING @id_paciente;
  DEALLOCATE PREPARE statement_paciente_patologia;

  -- BuildMyString.com generated SQL. Please enjoy your string responsibly.

  SET @query_insert_venta = CONCAT('INSERT INTO maestro_ventas',
  '	(paciente_id,',
  '	 edad, ',
  '	 medico_id, ',
  '	 producto_id, ',
  '	 presentacion_id, ',
  '	 venta_tipo_id, ',
  '	 unidades, ',
  '	 patologia_id, ',
  '	 sub_patologia_id, ',
  '	 institucion_id, ',
  '	 canal_id, ',
  '	 usuario_id, ',
  '	 usuario_mod_id, ',
  '	 fecha_stamp) ',
  '	 VALUES ',
  '	 (',
  '	 @id_paciente,',
  '	  @edad_paciente,',
  '	  @v_medico_id, ',
  '	  @v_producto_id, ',
  '	  @v_presentacion_id, ',
  '	  @p_tipo_venta_id, ',
  '	  @v_unidades, ',
  '	 	@patologia_id,',
  '	 @sub_patologia_id,',
  '	 @v_institucion_id, ',
  '	 @v_canal_id, ',
  '	 @p_usuario_id,',
  '	 @p_usuario_id,',
  '	 NOW())',
  ';');


  PREPARE statement_documento_tipo_id FROM @query_insert_venta;
  EXECUTE statement_documento_tipo_id;
  DEALLOCATE PREPARE statement_documento_tipo_id;


  SELECT
    LAST_INSERT_ID() AS mensaje;

END
$$

--
-- Create procedure `ST_GUARDAR_MEDICO_DOCS`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GUARDAR_MEDICO_DOCS (IN `v_idMedico` int,
IN `v_tipoDoc` int,
IN `v_nombreDoc` varchar(255),
IN `v_usuario` varchar(50),
IN `v_fecha_doc` date)
COMMENT 'Store que guarda la documentacion de la capacitacion del médico'
BEGIN


  SET @p_nombre_doc := v_nombreDoc;
  SET @p_doc_tipo := v_tipoDoc;
  SET @p_username := v_usuario;
  SET @fecha_doc := v_fecha_doc;
  SET @p_idMedico := v_idMedico;

  SET @usuario_id = CONCAT("SELECT `FU_GET_ID_USUARIO`(?) INTO @p_usuario_id");
  PREPARE statement_usuario_id FROM @usuario_id;
  EXECUTE statement_usuario_id USING @p_username;
  DEALLOCATE PREPARE statement_usuario_id;

  SET @count_med_docs = CONCAT("SELECT count(*) into @count_med FROM rel_medico_documentos  where medico_id = ?");
  PREPARE stmt_count_med FROM @count_med_docs;
  EXECUTE stmt_count_med USING @p_idMedico;
  DEALLOCATE PREPARE stmt_count_med;

  -- Deshabilito todos los documentos anteriores de capacitación
  IF (@count_med > 0) THEN

    SET @up_med_docs = CONCAT("update rel_medico_documentos set estado_id = 16 where medico_id = ?");
    PREPARE stmt_up_med FROM @up_med_docs;
    EXECUTE stmt_up_med USING @p_idMedico;
    DEALLOCATE PREPARE stmt_up_med;


  END IF;

  -- Inserto los datos del documento

  SET @query_documentos = CONCAT("INSERT INTO documentos (valor, documentos_tipo_id, fecha_creacion, fecha_documento, usuario_id, familia) VALUES (?, ?, NOW(), @fecha_doc, ?, 'SOL')");
  PREPARE statement_query_documentos FROM @query_documentos;
  EXECUTE statement_query_documentos USING @p_nombre_doc, @p_doc_tipo, @p_usuario_id;
  DEALLOCATE PREPARE statement_query_documentos;

  -- Establezco la relación entre el medico y el documento
  SET @query_rel_venta_documentos = CONCAT("INSERT INTO rel_medico_documentos (medico_id, documento_id, fecha_creacion) VALUES (?, LAST_INSERT_ID(), NOW())");
  PREPARE statement_query_rel_venta_documentos FROM @query_rel_venta_documentos;
  EXECUTE statement_query_rel_venta_documentos USING @p_idMedico;
  DEALLOCATE PREPARE statement_query_rel_venta_documentos;

  -- Actualizo la fecha de capacitación en la tabla medico y habilito al medico
  SET @up_med = CONCAT("UPDATE medico SET fecha_cap = @fecha_doc, fecha_modificacion=now(),fecha_aprobado=now(), fecha_inac = NULL, estado_id = 19 where id = ? ");
  PREPARE stmt_up_med FROM @up_med;
  EXECUTE stmt_up_med USING @p_idMedico;
  DEALLOCATE PREPARE stmt_up_med;





  SELECT
    "SE CREO EL REGISTRO CORRECTAMENTE" AS mensaje;

END
$$

--
-- Create procedure `ST_GET_PAC_ULTIMA_VENTA`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE ST_GET_PAC_ULTIMA_VENTA (IN `v_idPac` int
,
OUT `o_fecha_venta` date,
OUT `o_estado_id` int,
OUT `o_venta_id` int)
COMMENT 'Obtiene la ultima fecha y el estado de la venta con estado NP Generada o Venta Generada'
BEGIN
  -- SE OBTIENE LA FECHA DE VENTA DE LA ULTIMA VENTA EN ESTADO NP O VENTA GENERADA 
  -- ADEMAS SE FILTRA POR EL TIPO DE VENTA EN RI O FU

  SELECT
    m.fecha_venta,
    m.estado_id,
    m.id
  FROM maestro_ventas m
  WHERE m.paciente_id = v_idPac
  AND m.estado_id IN (22, 23)
  AND m.venta_tipo_id IN (1, 2)
  ORDER BY m.id DESC LIMIT 0, 1;

END
$$

--
-- Create procedure `FU_SET_TMP_MED`
--
CREATE DEFINER = 'root'@'localhost'
PROCEDURE FU_SET_TMP_MED (IN `v_apellido` varchar(100),
IN `v_nombre` varchar(100),
IN `v_m_nac` varchar(50),
IN `v_m_prov` varchar(50),
IN `v_email` varchar(100),
IN `v_especialidad` varchar(50),
IN `v_visitador` varchar(100),
IN `v_telefono` varchar(100),
IN `v_provincia` varchar(100),
IN `v_localidad` varchar(100),
IN `v_calle` varchar(100),
IN `v_n_dom` varchar(50),
IN `v_t_c_ate` varchar(50),
IN `v_n_c_ate` varchar(255))
COMMENT 'Carga de Medicos desde Excel Meditec'
BEGIN

  DECLARE c_m_tipo varchar(30);
  DECLARE c_esp_id int;
  DECLARE c_apm_id int;
  DECLARE c_prov_id int;
  DECLARE c_id_med int; /* ID DEL MEDICO YA CARGADO EN TMP_MED*/
  DECLARE c_id_med_prod int; /* ID DEL MEDICO YA CARGADO EN MEDICOS*/



  SET @apm_v = v_visitador;
  SET @apm_v = CONCAT('%', @apm_v, '%');

  SET c_apm_id = (SELECT
      a.id
    FROM apm a
    WHERE a.nombre LIKE @apm_v);
  SET c_esp_id = (SELECT
      IFNULL((SELECT
          e.id
        FROM especialidad e
        WHERE e.med_siglas = v_especialidad), 99));
  SET c_prov_id = (SELECT
      p.id
    FROM provincias p
    WHERE p.provincia = v_provincia);



  IF (v_m_nac = 0) THEN
    SET c_m_tipo = 'Provincial';
  ELSE
    IF (v_m_prov = 0) THEN
      SET c_m_tipo = 'Nacional';
    ELSE
      SET c_m_tipo = 'Nacional';
    END IF;
  END IF;

  SET c_id_med = (SELECT
      IFNULL((SELECT
          id
        FROM tmp_med
        WHERE apellido = v_apellido
        AND m_nac = v_m_nac
        AND m_prov = v_m_prov
        AND m_tipo = c_m_tipo), 0));
  SET c_id_med_prod = (SELECT
      COUNT(*)
    FROM medicos m
    WHERE m_nac = v_m_nac
    AND m_prov = v_m_prov
    AND m.matricula_tipo = c_m_tipo);

  IF (c_id_med_prod = 0) THEN

    SELECT
      `FU_NEW_MED`(v_apellido, v_nombre, v_m_nac, v_m_prov, v_t_c_ate, v_n_c_ate, v_telefono, '', '', c_prov_id, CONCAT(v_calle, ' ', v_n_dom), v_localidad, '', '', c_apm_id, 'Inactivo', v_email, c_esp_id);

  END IF;


  IF (c_id_med = 0) THEN

    INSERT INTO tmp_med
    SET apellido = v_apellido,
        nombre = v_nombre,
        m_nac = v_m_nac,
        m_prov = v_m_prov,
        email = v_email,
        esp_id = c_esp_id,
        apm_id = c_apm_id,
        telefono = v_telefono,
        prov_id = c_prov_id,
        localidad = v_localidad,
        calle = v_calle,
        n_dom = v_n_dom,
        t_c_ate = v_t_c_ate,
        n_c_ate = v_n_c_ate,
        m_tipo = c_m_tipo;

  ELSEIF (c_id_med > 0) THEN

    UPDATE tmp_med
    SET apellido = v_apellido,
        nombre = v_nombre,
        m_nac = v_m_nac,
        m_prov = v_m_prov,
        email = v_email,
        esp_id = c_esp_id,
        apm_id = c_apm_id,
        telefono = v_telefono,
        prov_id = c_prov_id,
        localidad = v_localidad,
        calle = v_calle,
        n_dom = v_n_dom,
        t_c_ate = v_t_c_ate,
        n_c_ate = v_n_c_ate,
        m_tipo = c_m_tipo

    WHERE id = c_id_med;

  END IF;

END
$$

--
-- Create function `GET_NOM_PAC`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION GET_NOM_PAC (`v_id` int)
RETURNS varchar(250) CHARSET latin1
COMMENT 'Obtiene el nombre del paciente en base al ID'
BEGIN

  DECLARE d_salida varchar(250);

  SET d_salida = (SELECT
      nombre
    FROM pacientes
    WHERE id = v_id);
  RETURN d_salida;
END
$$

--
-- Create function `FU_VAL_UNI`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_VAL_UNI (`v_id_pac` int,
`v_diff_u_v` int,
`v_id_mst` int)
RETURNS int(11)
BEGIN

  DECLARE cant_hist int;
  DECLARE cant_venta int;
  DECLARE res int;

  SET cant_hist = (SELECT
      IFNULL((SELECT
          SUM(unidades) AS CANT_uni
        FROM soliris_maestro AS RM
        WHERE RM.nombre = v_id_pac
        AND DATE(RM.fecha_venta) BETWEEN DATE_SUB(DATE(NOW()), INTERVAL v_diff_u_v DAY) AND DATE(NOW())
        AND RM.estado IN ('NP', 'FV')
        AND RM.id NOT IN (v_id_mst)), 0));

  SET cant_venta = (SELECT
      unidades
    FROM soliris_maestro
    WHERE id = v_id_mst);

  SET res = (SELECT
      cant_hist + cant_venta);

  RETURN res;

END
$$

--
-- Create function `FU_VAL_MED`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_VAL_MED (`v_ape` varchar(50),
`v_nom` varchar(50),
`v_prov_id` int,
`v_mat_n` int,
`v_mat_p` int)
RETURNS varchar(100) CHARSET latin1
COMMENT 'VALIDACION DEL MEDICO'
BEGIN

  IF (v_mat_n > 0
    AND v_mat_n != "") THEN
    IF (SELECT
          COUNT(*)
        FROM medicos M
        WHERE (M.apellido NOT IN ('v_ape')
        AND M.nombre NOT IN ('v_nom'))
        AND (M.m_nac = v_mat_n)) THEN
      RETURN "ERROR - YA HAY UN MÉDICO CON ESA MATRICULA NACIONAL";
    ELSE
      RETURN "OK";
    END IF;

  ELSE
    IF (v_mat_p > 0
      AND v_mat_p != "") THEN
      IF (SELECT
            COUNT(*)
          FROM medicos M
          WHERE (M.apellido NOT IN ('v_ape')
          AND M.nombre NOT IN ('v_nom'))
          AND (M.m_prov = v_mat_n
          AND M.prov_id = v_prov_id)) THEN
        RETURN "ERROR - YA HAY UN MÉDICO CON ESA MATRICULA PROVINCIAL";
      ELSE
        RETURN "OK";
      END IF;
    END IF;
  END IF;

END
$$

--
-- Create function `FU_VAL_FEC_REC`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_VAL_FEC_REC (`v_id` int,
`v_pac` int,
`v_fec_rec` date)
RETURNS varchar(50) CHARSET latin1
COMMENT 'Funcion que valida la fecha de receta'
BEGIN
  DECLARE res_receta date;

  SET res_receta = (SELECT
      im.fecha_receta
    FROM soliris_maestro im
    WHERE im.id NOT IN ('v_id')
    AND im.nombre = 'v_pac '
    AND im.fecha_receta = 'v_fec_rec'
    AND im.estado IN ('FV', 'Documentacion', 'NP')
    LIMIT 1);

  RETURN res_receta;
END
$$

--
-- Create function `FU_GET_MED_NAME`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_GET_MED_NAME (`v_medico` int)
RETURNS varchar(100) CHARSET latin1
COMMENT 'Obtiene el nombre del Médico'
BEGIN
  DECLARE nombre varchar(255);
  SET nombre = (SELECT
      GROUP_CONCAT(M.Apellido, ' ', M.Nombre)
    FROM medicos AS M
    WHERE M.id = v_medico);

  RETURN nombre;
END
$$

--
-- Create function `FU_CONVEN_PANEL_MOD`
--
CREATE DEFINER = 'root'@'localhost'
FUNCTION FU_CONVEN_PANEL_MOD (`v_id` int,
`v_usuairo` varchar(45))
RETURNS longtext CHARSET utf8mb4
DETERMINISTIC
MODIFIES SQL DATA
BEGIN
  DECLARE devolucion longtext;
  UPDATE soliris_maestro
  SET estado = 'NP',
      fecha_venta = NOW()
  WHERE id = v_id;

  IF (SELECT
        ROW_COUNT() > 0) THEN
    SET devolucion = v_id;
  ELSE
    SET devolucion = 'ERROR NO_UPDATE';
  END IF;

  RETURN devolucion;
END
$$

DELIMITER ;

-- 
-- Dumping data for table maestro_estado
--
INSERT INTO maestro_estado VALUES
(1, 'Activo', 'estado', 'usuario'),
(2, 'Inactivo', 'estado', 'usuario'),
(3, 'Activo', 'estado', 'rol'),
(4, 'Inactivo', 'estado', 'rol'),
(5, 'Activo', 'estado', 'patologia'),
(6, 'Inactivo', 'estado', 'patologia'),
(7, 'Pendiente', 'estado', 'paciente'),
(8, 'Activo', 'sub_estado', 'paciente'),
(9, 'Discontinuó', 'sub_estado', 'paciente'),
(10, 'Falleció', 'sub_estado', 'paciente'),
(11, 'Aprobado', 'estado', 'paciente'),
(12, 'Baja', 'estado', 'paciente'),
(13, 'Rechazado', 'estado', 'paciente'),
(14, 'Eliminado', 'estado', 'venta'),
(15, 'Activo', 'estado', 'documento'),
(16, 'Inactivo', 'estado', 'documento'),
(17, 'Activo', 'estado', 'apm'),
(18, 'Inactivo', 'estado', 'apm'),
(19, 'Activo', 'estado', 'medico'),
(20, 'Inactivo', 'estado', 'medico'),
(21, 'Activo', 'estado', 'producto'),
(22, 'Venta Registrada', 'estado', 'venta'),
(23, 'NP Generada', 'estado', 'venta'),
(24, 'Activo', 'estado', 'canales'),
(25, 'Inactivo', 'estado', 'canales'),
(26, 'Activo', 'estado', 'institucion'),
(27, 'Inactivo', 'estado', 'institucion'),
(28, 'Activo', 'estado', 'especialidad'),
(29, 'Inactivo', 'estado', 'especialidad'),
(30, 'Sin Capacitacion', 'estado', 'medico'),
(31, 'Sin Documentacion', 'estado', 'paciente');

-- 
-- Dumping data for table rol
--
INSERT INTO rol VALUES
(1, 'admin', 3),
(2, 'fv', 3),
(3, 'marketing', 3),
(4, 'ventas', 3),
(5, 'atencion_paciente', 3),
(6, 'auditor', 3),
(7, 'apm', 3);

-- 
-- Dumping data for table medico_matricula_tipo
--
INSERT INTO medico_matricula_tipo VALUES
(1, 'Nacional'),
(2, 'Provincial');

-- 
-- Dumping data for table usuario
--
INSERT INTO usuario VALUES
(34, 'dcilveti', 'pmiranda@raffo.com.ar', 1, 1),
(35, 'gpardo', 'pmiranda@raffo.com.ar', 1, 1),
(36, 'mnakatsuno', 'pmiranda@raffo.com.ar', 1, 1),
(37, 'lliloia', 'pmiranda@raffo.com.ar', 1, 1),
(38, 'msadouet', 'pmiranda@raffo.com.ar', 1, 1),
(39, 'agonzalez', 'pmiranda@raffo.com.ar', 1, 1),
(40, 'mcavagion', 'pmiranda@raffo.com.ar', 1, 1),
(41, 'jkiprizlian', 'pmiranda@raffo.com.ar', 1, 1),
(42, 'cburgues', 'pmiranda@raffo.com.ar', 1, 1),
(43, 'marruzazabala', 'pmiranda@raffo.com.ar', 1, 1),
(44, 'fcastro', 'pmiranda@raffo.com.ar', 1, 1),
(45, 'aheredia', 'pmiranda@raffo.com.ar', 1, 1),
(46, 'cbento', 'pmiranda@raffo.com.ar', 1, 1),
(47, 'splatero', 'pmiranda@raffo.com.ar', 1, 1),
(48, 'mnorris', 'pmiranda@raffo.com.ar', 1, 1),
(49, 'dmartinez', 'pmiranda@raffo.com.ar', 1, 1),
(50, 'pmiranda', 'pmiranda@raffo.com.ar', 1, 1),
(51, 'sdiazbancalari', 'pmiranda@raffo.com.ar', 1, 1),
(52, 'rjfernandez', 'pmiranda@raffo.com.ar', 1, 1),
(53, 'eala', 'pmiranda@raffo.com.ar', 1, 1),
(54, 'cpalomeque', 'pmiranda@raffo.com.ar', 1, 1),
(55, 'fzapata', 'pmiranda@raffo.com.ar', 1, 1),
(56, 'cpenela', 'pmiranda@raffo.com.ar', 1, 1),
(57, 'sbisceglia', 'pmiranda@raffo.com.ar', 1, 1);

-- 
-- Dumping data for table os
--
INSERT INTO os VALUES
(1, 'AMEPBA', 'Obra social de empleados del Banco Provincia de Buenos Aires', NULL, NULL, '0000-00-00 00:00:00', '', 'AC'),
(2, 'OSCHOCA', 'Obra Social de Choferes de Camiones', '', '', '2019-11-13 16:59:53', 'np_dcilveti@arndp.raffo.local', 'AC'),
(3, 'OSGEGYPE', 'Sindicato de obreros y empleados de estaciones de servicio', '', '', '2019-12-06 10:53:27', 'np_dcilveti@arndp.raffo.local', 'AC'),
(4, 'SIN OBRA SOCIAL', NULL, NULL, NULL, '2020-02-26 00:00:00', '', 'AC');

-- 
-- Dumping data for table medico_matricula
--
INSERT INTO medico_matricula VALUES
(1, 2, 'BUENOS AIRES'),
(2, 2, 'CATAMARCA'),
(3, 2, 'CHACO'),
(4, 2, 'CHUBUT'),
(5, 2, 'CÓRDOBA'),
(6, 2, 'CORRIENTES'),
(7, 2, 'ENTRE RÍOS'),
(8, 2, 'FORMOSA'),
(9, 2, 'JUJUY'),
(10, 2, 'LA PAMPA'),
(11, 2, 'LA RIOJA'),
(12, 2, 'MENDOZA'),
(13, 2, 'MISIONES'),
(14, 2, 'NEUQUÉN'),
(15, 2, 'RÍO NEGRO'),
(16, 2, 'SALTA'),
(17, 2, 'SAN JUAN'),
(18, 2, 'SAN LUIS'),
(19, 2, 'SANTA CRUZ'),
(20, 2, 'SANTA FÉ'),
(21, 2, 'SANTIAGO DEL ESTERO'),
(22, 2, 'TIERRA DEL FUEGO'),
(23, 2, 'TUCUMÁN'),
(24, 1, 'NACIONAL');

-- 
-- Dumping data for table apm
--
INSERT INTO apm VALUES
(1, 10047, 17, 50, '2020-04-20 19:37:20', 'jvidela', NULL, 'VIDELA JUAN IGNACIO'),
(3, 10245, 17, 50, '2020-04-20 19:37:20', 'mparamo', NULL, 'PARAMO MARTIN GUSTAVO'),
(4, 5001, 17, 50, '2020-04-20 19:37:20', 'goldani', NULL, 'OLDANI GUSTAVO ALBERTO'),
(5, 10202, 17, 50, '2020-04-20 19:37:20', 'dmartinez', NULL, 'MARTINEZ DANIELA FERNANDA'),
(7, 10239, 17, 50, '2020-04-20 19:37:20', 'vlorenzo', NULL, 'LORENZO VALERIA PAULA'),
(8, 10282, 17, 50, '2020-04-20 19:37:20', 'ufernandez', NULL, 'FERNANDEZ URIEL LUIS'),
(9, 11745, 17, 50, '2020-04-20 19:37:20', 'ccattaneo', NULL, 'CATTANEO CARLA'),
(10, 10142, 17, 50, '2020-04-20 19:37:20', 'galbiero', NULL, 'ALBIERO GASTON FRANCO JESUS '),
(11, 0, 18, 50, '2020-04-20 20:18:08', 'pmiranda', 'pmiranda@raffo.com.ar', 'Miranda, Pablo'),
(12, 0, 17, 50, '2020-04-20 20:24:35', 'dcilveti', 'dcilveti@raffo.com.ar', 'Cilveti, Diego'),
(13, 0, 18, 50, '2020-04-20 21:08:14', 'mcarretero', 'mcarretero@raffo.com.ar', 'Carretero, Monica');

-- 
-- Dumping data for table documentos_tipo
--
INSERT INTO documentos_tipo VALUES
(1, 'Vacunacion', 'Paciente'),
(2, 'Otro', 'Paciente'),
(3, 'Receta', 'Venta'),
(4, 'Otro', 'Venta'),
(5, 'Certificado Calidad', 'Venta'),
(6, 'Capacitación', 'Medico');

-- 
-- Dumping data for table producto
--
INSERT INTO producto VALUES
(1, '123', 'SOL', 'Soliris', 21);

-- 
-- Dumping data for table presentacion
--
INSERT INTO presentacion VALUES
(2, 'SOLIRIS 25 Mg', 1, NULL, 'SOL', 50),
(3, 'SOLIRIS 20 Mg', 1, NULL, 'SOL', 50),
(4, 'SOLIRIS 5 Mg', 1, NULL, 'SOL', 50),
(5, 'SOLIRIS 48 Mg', 1, NULL, 'SOL', 50),
(6, 'SOLIRIS 50 Mg', 1, NULL, 'SOL', 50),
(7, 'SOLIRIS 25', 1, NULL, 'SOL', 50),
(8, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(9, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(10, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(11, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(12, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(13, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(14, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(15, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(16, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(17, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(18, 'SOLIRIS 2566', 1, NULL, 'SOL', 50),
(19, 'SOLIRIS 2566', 1, NULL, 'SOL', 50),
(20, 'SOLIRIS 7500', 1, NULL, 'SOL', 50),
(21, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(22, 'SOLIRIS 4900', 1, NULL, 'SOL', 50),
(23, 'SOLIRIS 2578', 1, NULL, 'SOL', 50),
(24, 'SOLIRIS 478966', 1, NULL, 'SOL', 50),
(25, 'SOLIRIS 55', 1, NULL, 'SOL', 50),
(26, 'SOLIRIS 55', 1, NULL, 'SOL', 50);

-- 
-- Dumping data for table institucion
--
INSERT INTO institucion VALUES
(1025, 'Aca Salud', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1026, 'Aca Salud- Hospital Privado', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1027, 'Accord Salud', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1028, 'Accord Salud - Hospital Britanico', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1029, 'AMEBPBA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1030, 'AMR', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1031, 'ANDAR', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1032, 'ANM', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1033, 'APRES', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1034, 'APROSS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Convenio', 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1035, 'APROSS-Drog Mediterranea', '', 0, '', '', '', '', '', '', 'Convenio', 'SOL', 'dcilveti', '2020-04-07 22:29:02', 0, 26),
(1036, 'Ase. Policia de Formosa', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1037, 'ASOC. MEDICA DPTO CASTELLANOS – RAFAELA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1038, 'ASUNT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1039, 'Bancarios', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1040, 'Banco de Drogas', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Convenio', 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1041, 'C.A.S.A.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1042, 'CEMIC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1043, 'centro de mezclas intravenosas', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1044, 'cimesa', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1045, 'Circulo de Ingenieros', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1046, 'Circulo de San Isidro', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1047, 'CM SALUD', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1048, 'Consolidar', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1049, 'DAMSU MENDOZA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1050, 'DAS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1051, 'Desarrollo Social', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1052, 'DIBPFA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1053, 'DIRECCION DE SERVICIOS DIRECTOS INSSSEP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1054, 'Dosen', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1055, 'DOSPU', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1056, 'DOSUBA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1057, 'Escribanos', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1058, 'Escribanos de La Plata', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1059, 'Fleming', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1060, 'Fundaleu', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1061, 'GALENO', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1062, 'Hospital Aleman', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1063, 'Hospital Aleman', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1064, 'Hospital Británico', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1065, 'Hospital Central', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1066, 'Hospital Churruca', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1067, 'Hospital Italiano', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1068, 'I.A.P.O.S.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1069, 'IAPOS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1070, 'INSSP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1072, 'INSSSEP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1073, 'INSSSEP-Hospital Italiano', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1074, 'Inst. Prev y Seguro Tucuman', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1075, 'Instituto de Seguridad Social de Neuquen', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1076, 'IOMA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Convenio', 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1078, 'IOSCOR', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1079, 'IOSE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1080, 'IOSE campo de mayo', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1081, 'IOSE Matienzo', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1082, 'IProSS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1083, 'IPS TUCUMAN', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1084, 'IPSST SEGURIDAD SOCIAL TUCUMAN', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1085, 'ISSN', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1086, 'ISSP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1087, 'Jerarquicos', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1088, 'Luis Pasteur', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1089, 'MAPFRE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1090, 'Medicus', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1091, 'MEDICUS- Austral', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1092, 'MEDICUS_ Fleming', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1093, 'MEDIFE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1094, 'META', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1095, 'Min. Desarrollo Social', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1096, 'Ministerio de Desarrollo', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1097, 'Ministerio de la provincia de Rio Negro', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1098, 'Ministerio de Salud. (PROFE)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1099, 'MOA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1100, 'Mutual Federada 25 de Junio', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1101, 'O.S.C.T.C.P.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1102, 'O.S.E.C.A.C.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1103, 'Ob Soc de los empreadores Publicos', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1104, 'Ob. SBA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1105, 'Ob. Social del Servicio Penitenciario', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1106, 'OBSBA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Convenio', 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1107, 'OMINT', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1108, 'OPSA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1109, 'OSAM', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1110, 'OSDE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1111, 'OSDE - Hospital Británico', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1112, 'OSDE Hospital Italiano', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1113, 'OSDE _ANM', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1114, 'OSDE- Fleming', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1115, 'OSDE-CEMIC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1116, 'OSDE-Hospital Alemán', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1117, 'osdepym', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1118, 'osecac', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1119, 'OSEP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Convenio', 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1120, 'OSER', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1121, 'OSFATLYF', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1122, 'OSIMRA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1123, 'OSMECOM', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1124, 'OSMECON', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1125, 'Ospac', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1126, 'OSPAGA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1127, 'OSPIPRA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1128, 'Osplad', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1129, 'OSPOCE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1130, 'OSPRERA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1131, 'ostatlyf', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1132, 'OSTEE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1133, 'OSTEL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1134, 'OSTIG', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1135, 'OSUNER-Hospital Italiano', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1136, 'PAMI', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'Convenio', 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1141, 'PAPO MONOCLONAL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1142, 'poder judicial', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1143, 'Policlínico Neuquén', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1144, 'Privado', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1145, 'PROFE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1146, 'PS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1147, 'RosFar', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1148, 'SAMA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1149, 'SANCOR SALUD', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1150, 'Scienza', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1151, 'Seros Chubut', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1152, 'SMG', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1153, 'SMG(cemic)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1154, 'SMG-Fundaleu', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1155, 'Solidaridad (Bancaria)', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1156, 'Subsidio', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1157, 'Sutiaga', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1158, 'U.P.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1159, 'U.T.A.', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1160, 'UAI', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1161, 'UNS', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1162, 'UOM', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1163, 'UOMM', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1164, 'UP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1165, 'UTA', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1166, 'Damsu', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1167, 'Oseg', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1168, 'Ospia', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1169, 'Osseg', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1170, 'Apdis', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1171, 'Centro Gallegos', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1172, 'Ips', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1173, 'Hospital Privado', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1174, 'Samo', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1175, 'Ospip', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1176, 'Ipauss', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1177, 'Iosper', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1178, 'Plan de Salud', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1179, 'Britanico', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1180, 'I.A.S.E.P', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1181, 'Osetya', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1182, 'ASPURC', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1183, 'OSPIA PROVINCIA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1184, 'Ospecom', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1185, 'OSA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1186, 'FATSO', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1187, 'Hospital Central Mendoza', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1188, 'Docthos', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1189, 'Ospadep', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1190, 'Ospedyc', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1191, 'Hospital Ramos Mejia', 'ohiggins', 0, 'Tigre', 'Buenos Aires', '', 'pmirand6@gmail.com', '01131218333', '', '', 'SOL', 'pmiranda', '2020-04-07 22:55:51', 0, 26),
(1192, 'Hope', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1193, 'OSADEF', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1194, 'SS', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1195, 'Mutual SADAIC', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1196, 'OSUTHGRA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1197, 'DASU', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1198, 'POLICLINICO', 'Av. S. Martin', 326, 'Rafaela', 'Sta. Fe', NULL, NULL, '03492 425087', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1199, 'LUZ Y FUERZA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1200, 'oncofarma', 'CHACABUCO', 2069, 'S.M.DE TUCUMAN ', 'TUCUMAN ', NULL, NULL, '0381-4310011', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1201, 'CIRME', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1202, 'Hospital Juan A. Fernandez', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1203, 'Ospil', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1204, 'Dir. de Obra Social Prov.', '', 0, '', 'san juan', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1205, 'OSPAV', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1206, 'IPS Misiones', '', 0, '', 'Misiones', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1207, 'Federada Salud', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1208, 'Obra Social del P Maritimo', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1209, 'Policia Federal', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1210, 'Hospital Santojanni', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1211, 'OSPESGyPE', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1212, 'Conet Plan', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1213, 'SIMECO', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1214, 'OSUOMRA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1215, 'CAIPO', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1216, 'TV SALUD', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1217, 'O S San Juan', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1218, 'OSPIC', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1219, 'Hospital Schestakow', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1220, 'OSCCPTAC', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1221, 'OSSIMRA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1222, 'OSPERYH', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1223, 'SADAIC', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1224, 'AXXA pharma', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1225, 'Caja de Servicios Sociales', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1226, 'OSMATA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1227, 'SEMPRE', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1228, 'OSDOP', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1229, 'Prensa Salud', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1230, 'DIBA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1231, 'OSOSS', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1232, 'daspu', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1233, 'OSRAC Arte de Curar', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1234, 'FEMEBA SALUD', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1235, 'APSOT', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1236, 'OSDIPP', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1237, 'Medicina Privada', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1238, 'Nativa Salud', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1239, 'Programas Medicos', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1240, 'OSCHOCA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1241, 'IPAM', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1242, 'Red Arg Salud', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1243, 'OSPEGAP', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1244, 'SUMA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1245, 'Fundacion COMEI', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1246, 'SIMEPA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1247, 'UNIMEDICA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1248, 'San Pedro', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1249, 'ELEVAR', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1250, 'Arte de Curar', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1251, 'Inst Seguros Jujuy', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1252, 'osmeba', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1253, 'MUPAYE', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1254, 'AMFFA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1255, 'OSFE', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1256, 'FEMESA San Luis', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1257, 'Sanatorio Adventista del Plata', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1258, 'OS Personal TV', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1259, 'IOSEP', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1260, 'HOSP ARGERICH', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1261, 'INCLUIR SALUD', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1262, 'FEMEDICA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1263, 'CSF', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1264, 'PASTELEROS', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1265, 'Caja Forense', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1266, 'OSSSB', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1267, 'Caja de Ingenieros', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1268, 'ODPF', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1269, 'OSPF', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1270, 'IOSFA', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1271, 'TUCUMAN', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1272, 'Caja Notarial', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1273, '', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1274, 'SANIDAD', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1275, 'OSPM', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1276, 'ISSINNE', '', 0, '', '', NULL, NULL, '', NULL, NULL, 'SOL', NULL, '2020-04-07 22:29:02', 0, 26),
(1277, 'CONSEJO PROF.CS.ECONOMICAS', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1278, 'OSAP', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1279, 'OSFATUM', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1280, 'UNR ', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1281, 'AGM', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1282, 'APTM', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1283, 'OBRA SOCIAL DEL MINISTERIO ECONOMIA', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1284, 'OSPEPRI', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1285, 'OSPE', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1286, 'O.S.A.R.P.Y.H', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1287, 'Ministerio de Chaco', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1288, 'OSEF', '', 0, '', '', '', '', '', '', '', 'SOL', 'mnorris', '2020-04-07 22:29:02', 0, 26),
(1289, 'UOCRA', '', 0, '', '', '', '', '', '', '', 'SOL', 'eala', '2020-04-07 22:29:02', 0, 26),
(1290, 'Salud Total', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1291, 'Hospital Pablo Soria', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1292, 'Caja de Escribanos', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1293, 'Hospital Lagomaggiore', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1294, 'IASEP', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1295, 'OSPTF (OS tierra del Fuego)', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1296, 'Mi. de Desarollo Formosa', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1297, 'Ministerio de desarrollo Formosa', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1298, 'OSCA', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1299, 'Caja de Sta. Cruz', '', 0, '', '', '', '', '', '', '', 'SOL', 'sbisceglia', '2020-04-07 22:29:02', 0, 26),
(1302, 'Institucion Prueba2', 'Gelly y Obe', NULL, 'Tigre', 'Claro', '', '', '', '', 'Erro', 'SOL', 'pmiranda', '2020-04-07 23:22:59', 0, 26),
(1303, 'Institucion Prueba2', 'Gelly y Obe', NULL, 'Tigre', 'Claro', '', '', '', '', 'Erro', 'SOL', 'pmiranda', '2020-04-07 23:23:03', 0, 26),
(1304, 'Institucion Prueba2', 'Gelly y Obe', NULL, 'Tigre', 'Claro', '', '', '', '', 'Erro', 'SOL', 'pmiranda', '2020-04-07 23:23:05', 0, 26),
(1305, 'Institucion Prueba2', 'Gelly y Obe', NULL, 'Tigre', 'Claro', '', '', '', '', 'Erro', 'SOL', 'pmiranda', '2020-04-07 23:24:27', 0, 26);

-- 
-- Dumping data for table canales
--
INSERT INTO canales VALUES
(75, 'Scienza', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:00:31', 'Activo', 24, 0),
(76, 'ROS FAR', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:00:35', 'Activo', 24, 0),
(77, 'META', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:00:39', 'Activo', 24, 0),
(78, 'Medicus', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:00:43', 'Activo', 24, 0),
(79, 'SMG', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:00:47', 'Activo', 24, 0),
(80, 'Hospital Italiano', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:00', 'Activo', 24, 0),
(81, 'OMINT', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:12', 'Activo', 24, 0),
(82, 'Hospital Churruca', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:18', 'Activo', 24, 0),
(83, 'DroFar', 'SOL', '', '', '', '', '', '', NULL, 'jkiprizlian', '2017-08-15 09:01:24', 'Activo', 24, 0),
(84, 'Hospital Aleman', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:30', 'Activo', 24, 0),
(85, 'Hospital Britanico', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:37', 'Activo', 24, 0),
(86, 'IOSE', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:42', 'Activo', 24, 0),
(87, 'ONCOFARMA', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:46', 'Activo', 24, 0),
(88, 'REDFARM', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:53', 'Activo', 24, 0),
(89, 'MONUMENTO', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:01:59', 'Activo', 24, 0),
(90, 'AVANTFAR', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:02:04', 'Activo', 24, 0),
(91, 'WENT', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:02:08', 'Activo', 24, 0),
(92, 'ORIEN', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:02:13', 'Activo', 24, 0),
(93, 'FARMA KD', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:02:17', 'Activo', 24, 0),
(94, 'MEDITERRANEA', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:02:22', 'Activo', 24, 0),
(95, 'EXCELL PHARMA', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:02:28', 'Activo', 24, 0),
(96, 'CICLOFAR', 'SOL', '', '', '', '', '', '', NULL, 'jkiprizlian', '2017-08-15 09:02:37', 'Activo', 24, 0),
(97, 'CITY PHARMA GROUP', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:02:44', 'Activo', 24, 0),
(98, 'In.S.S.Se.P', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:02:59', 'Activo', 24, 0),
(99, 'SIFAR', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:06:31', 'Activo', 24, 0),
(100, 'ONCOLIFE', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:06:36', 'Activo', 24, 0),
(101, 'ABC', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:06:52', 'Activo', 24, 0),
(102, 'MEDIFAR', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:06:58', 'Activo', 24, 0),
(103, 'AUDIFARM', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:05', 'Activo', 24, 0),
(104, 'NEO SALUD', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:12', 'Activo', 24, 0),
(105, 'SUIZO', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:15', 'Activo', 24, 0),
(106, 'METRO KD', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:21', 'Activo', 24, 0),
(107, 'PROV HOSPITALARIOS', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:30', 'Activo', 24, 0),
(108, 'SOLS', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:35', 'Activo', 24, 0),
(109, 'ZBC', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:41', 'Activo', 24, 0),
(110, 'DIGMA', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:44', 'Activo', 24, 0),
(111, 'GLOBAL MED', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:07:48', 'Activo', 24, 0),
(112, 'CSF-COMPAÑIA DE SERVICIOS FARMACEUTICOS', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:08:13', 'Activo', 24, 0),
(113, 'OSECAC (SEGURMED)', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:08:31', 'Activo', 24, 0),
(114, 'DOSPU', 'SOL', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'sistemas', '2017-08-15 09:08:36', 'Activo', 24, 0),
(115, 'Medical Pro', 'SOL', '', '', '', '', '', '', NULL, 'agonzalez', '2017-11-03 15:54:04', 'Activo', 24, 0),
(116, 'LOGISTICA MEDICA', 'SOL', '', '', '', '', '', '', NULL, 'jkiprizlian', '2017-11-22 15:37:26', 'Activo', 24, 0),
(117, 'C&C Medicals', 'SOL', '', '', '', '', '', '', NULL, 'jkiprizlian', '2017-12-20 08:18:40', 'Activo', 24, 0),
(118, 'Alexander Fleming', 'SOL', 'Zabala 2836, CABA', '', '', '', '', 'Zabala 2836, CABA', NULL, 'agonzalez', '2018-07-30 14:04:15', 'Activo', 24, 0),
(119, 'COFARMA', 'SOL', '', '', '', '', '', 'SAN JOSÉ 1747, SANTA FE', NULL, 'agonzalez', '2018-08-15 13:17:59', 'Activo', 24, 0),
(120, 'CEMIC', 'SOL', 'Av. Galván 4102 – CABA ', '', '', '', '', '', NULL, 'jkiprizlian', '2018-09-12 08:33:06', 'Activo', 24, 0),
(121, 'PSCOFARM', 'SOL', '', '', '', '', '', '', NULL, 'agonzalez', '2018-09-14 10:50:40', 'Activo', 24, 0),
(122, 'Sitio Salud', 'SOL', '', '', '', '', '', 'HIPOLITO YRIGOYEN 5263/67/69, lanus', NULL, 'agonzalez', '2018-09-20 13:15:46', 'Activo', 24, 0),
(123, 'Lider SA', 'SOL', 'Av O Higgins 5591 B', '', '', '', '', 'Av O Higgins 5591 B', NULL, 'eala', '2018-10-26 13:41:09', 'Activo', 24, 0),
(124, 'Drogueria Psicofarm SA', 'SOL', 'Condor 1851 ', '', '', '', '', 'Condor 1851 ', NULL, 'eala', '2018-11-02 10:06:55', 'Activo', 24, 0),
(125, 'Femani Medical SRL', 'SOL', '', '', '', '', '', '', NULL, 'agonzalez', '2019-02-11 10:20:39', 'Activo', 24, 0),
(126, 'Disval', 'SOL', '', '', '', '', '', '', NULL, 'agonzalez', '2019-03-21 08:37:42', 'Activo', 24, 0),
(127, 'Drogueria y Distribuidora del Valle SC', 'SOL', '24 de Septiembre 725 - Santiago del Estero', '', 'Valeria Liz Argibay', '', '', '24 de Septiembre 725 - Santiago del Estero', NULL, 'eala', '2019-05-24 09:35:21', 'Activo', 24, 0),
(128, 'Drogueria Del Pueblo', 'SOL', 'Jose Rosas 589 - Neuquen ', '', '', '', '', 'Jose Rosas 589 - Neuquen ', NULL, 'eala', '2019-06-26 09:58:06', 'Activo', 24, 0),
(129, 'Farma S.R.L.', 'SOL', 'Av. Hipolito Yrigoyen 2972 - Trelew', '', 'Graciela Berta Montangie', '', 'Sergio Oscar Amoroso (Socio Gerente)', 'Av. Hipolito Yrigoyen 2972 - Trelew', NULL, 'eala', '2019-09-03 11:44:59', 'Activo', 24, 0),
(130, 'prueba canal', 'SOL', '', '', '', '', '', NULL, NULL, 'pmiranda', '2020-04-20 13:19:06', NULL, 24, 0),
(131, 'prueba canal 3', 'SOL', 'direccion de canal', 'mail@mail.com', '', '', '', NULL, NULL, 'pmiranda', '2020-04-20 13:19:14', 'Activo', 24, 0);

-- 
-- Dumping data for table paises
--
INSERT INTO paises VALUES
(1, 4, 'AF', 'AFG', 'Afganistán'),
(2, 248, 'AX', 'ALA', 'Islas Gland'),
(3, 8, 'AL', 'ALB', 'Albania'),
(4, 276, 'DE', 'DEU', 'Alemania'),
(5, 20, 'AD', 'AND', 'Andorra'),
(6, 24, 'AO', 'AGO', 'Angola'),
(7, 660, 'AI', 'AIA', 'Anguilla'),
(8, 10, 'AQ', 'ATA', 'Antártida'),
(9, 28, 'AG', 'ATG', 'Antigua y Barbuda'),
(10, 530, 'AN', 'ANT', 'Antillas Holandesas'),
(11, 682, 'SA', 'SAU', 'Arabia Saudí'),
(12, 12, 'DZ', 'DZA', 'Argelia'),
(13, 32, 'AR', 'ARG', 'Argentina'),
(14, 51, 'AM', 'ARM', 'Armenia'),
(15, 533, 'AW', 'ABW', 'Aruba'),
(16, 36, 'AU', 'AUS', 'Australia'),
(17, 40, 'AT', 'AUT', 'Austria'),
(18, 31, 'AZ', 'AZE', 'Azerbaiyán'),
(19, 44, 'BS', 'BHS', 'Bahamas'),
(20, 48, 'BH', 'BHR', 'Bahréin'),
(21, 50, 'BD', 'BGD', 'Bangladesh'),
(22, 52, 'BB', 'BRB', 'Barbados'),
(23, 112, 'BY', 'BLR', 'Bielorrusia'),
(24, 56, 'BE', 'BEL', 'Bélgica'),
(25, 84, 'BZ', 'BLZ', 'Belice'),
(26, 204, 'BJ', 'BEN', 'Benin'),
(27, 60, 'BM', 'BMU', 'Bermudas'),
(28, 64, 'BT', 'BTN', 'Bhután'),
(29, 68, 'BO', 'BOL', 'Bolivia'),
(30, 70, 'BA', 'BIH', 'Bosnia y Herzegovina'),
(31, 72, 'BW', 'BWA', 'Botsuana'),
(32, 74, 'BV', 'BVT', 'Isla Bouvet'),
(33, 76, 'BR', 'BRA', 'Brasil'),
(34, 96, 'BN', 'BRN', 'Brunéi'),
(35, 100, 'BG', 'BGR', 'Bulgaria'),
(36, 854, 'BF', 'BFA', 'Burkina Faso'),
(37, 108, 'BI', 'BDI', 'Burundi'),
(38, 132, 'CV', 'CPV', 'Cabo Verde'),
(39, 136, 'KY', 'CYM', 'Islas Caimán'),
(40, 116, 'KH', 'KHM', 'Camboya'),
(41, 120, 'CM', 'CMR', 'Camerún'),
(42, 124, 'CA', 'CAN', 'Canadá'),
(43, 140, 'CF', 'CAF', 'República Centroafricana'),
(44, 148, 'TD', 'TCD', 'Chad'),
(45, 203, 'CZ', 'CZE', 'República Checa'),
(46, 152, 'CL', 'CHL', 'Chile'),
(47, 156, 'CN', 'CHN', 'China'),
(48, 196, 'CY', 'CYP', 'Chipre'),
(49, 162, 'CX', 'CXR', 'Isla de Navidad'),
(50, 336, 'VA', 'VAT', 'Ciudad del Vaticano'),
(51, 166, 'CC', 'CCK', 'Islas Cocos'),
(52, 170, 'CO', 'COL', 'Colombia'),
(53, 174, 'KM', 'COM', 'Comoras'),
(54, 180, 'CD', 'COD', 'República Democrática del Congo'),
(55, 178, 'CG', 'COG', 'Congo'),
(56, 184, 'CK', 'COK', 'Islas Cook'),
(57, 408, 'KP', 'PRK', 'Corea del Norte'),
(58, 410, 'KR', 'KOR', 'Corea del Sur'),
(59, 384, 'CI', 'CIV', 'Costa de Marfil'),
(60, 188, 'CR', 'CRI', 'Costa Rica'),
(61, 191, 'HR', 'HRV', 'Croacia'),
(62, 192, 'CU', 'CUB', 'Cuba'),
(63, 208, 'DK', 'DNK', 'Dinamarca'),
(64, 212, 'DM', 'DMA', 'Dominica'),
(65, 214, 'DO', 'DOM', 'República Dominicana'),
(66, 218, 'EC', 'ECU', 'Ecuador'),
(67, 818, 'EG', 'EGY', 'Egipto'),
(68, 222, 'SV', 'SLV', 'El Salvador'),
(69, 784, 'AE', 'ARE', 'Emiratos Árabes Unidos'),
(70, 232, 'ER', 'ERI', 'Eritrea'),
(71, 703, 'SK', 'SVK', 'Eslovaquia'),
(72, 705, 'SI', 'SVN', 'Eslovenia'),
(73, 724, 'ES', 'ESP', 'España'),
(74, 581, 'UM', 'UMI', 'Islas ultramarinas de Estados Unidos'),
(75, 840, 'US', 'USA', 'Estados Unidos'),
(76, 233, 'EE', 'EST', 'Estonia'),
(77, 231, 'ET', 'ETH', 'Etiopía'),
(78, 234, 'FO', 'FRO', 'Islas Feroe'),
(79, 608, 'PH', 'PHL', 'Filipinas'),
(80, 246, 'FI', 'FIN', 'Finlandia'),
(81, 242, 'FJ', 'FJI', 'Fiyi'),
(82, 250, 'FR', 'FRA', 'Francia'),
(83, 266, 'GA', 'GAB', 'Gabón'),
(84, 270, 'GM', 'GMB', 'Gambia'),
(85, 268, 'GE', 'GEO', 'Georgia'),
(86, 239, 'GS', 'SGS', 'Islas Georgias del Sur y Sandwich del Sur'),
(87, 288, 'GH', 'GHA', 'Ghana'),
(88, 292, 'GI', 'GIB', 'Gibraltar'),
(89, 308, 'GD', 'GRD', 'Granada'),
(90, 300, 'GR', 'GRC', 'Grecia'),
(91, 304, 'GL', 'GRL', 'Groenlandia'),
(92, 312, 'GP', 'GLP', 'Guadalupe'),
(93, 316, 'GU', 'GUM', 'Guam'),
(94, 320, 'GT', 'GTM', 'Guatemala'),
(95, 254, 'GF', 'GUF', 'Guayana Francesa'),
(96, 324, 'GN', 'GIN', 'Guinea'),
(97, 226, 'GQ', 'GNQ', 'Guinea Ecuatorial'),
(98, 624, 'GW', 'GNB', 'Guinea-Bissau'),
(99, 328, 'GY', 'GUY', 'Guyana'),
(100, 332, 'HT', 'HTI', 'Haití'),
(101, 334, 'HM', 'HMD', 'Islas Heard y McDonald'),
(102, 340, 'HN', 'HND', 'Honduras'),
(103, 344, 'HK', 'HKG', 'Hong Kong'),
(104, 348, 'HU', 'HUN', 'Hungría'),
(105, 356, 'IN', 'IND', 'India'),
(106, 360, 'ID', 'IDN', 'Indonesia'),
(107, 364, 'IR', 'IRN', 'Irán'),
(108, 368, 'IQ', 'IRQ', 'Iraq'),
(109, 372, 'IE', 'IRL', 'Irlanda'),
(110, 352, 'IS', 'ISL', 'Islandia'),
(111, 376, 'IL', 'ISR', 'Israel'),
(112, 380, 'IT', 'ITA', 'Italia'),
(113, 388, 'JM', 'JAM', 'Jamaica'),
(114, 392, 'JP', 'JPN', 'Japón'),
(115, 400, 'JO', 'JOR', 'Jordania'),
(116, 398, 'KZ', 'KAZ', 'Kazajstán'),
(117, 404, 'KE', 'KEN', 'Kenia'),
(118, 417, 'KG', 'KGZ', 'Kirguistán'),
(119, 296, 'KI', 'KIR', 'Kiribati'),
(120, 414, 'KW', 'KWT', 'Kuwait'),
(121, 418, 'LA', 'LAO', 'Laos'),
(122, 426, 'LS', 'LSO', 'Lesotho'),
(123, 428, 'LV', 'LVA', 'Letonia'),
(124, 422, 'LB', 'LBN', 'Líbano'),
(125, 430, 'LR', 'LBR', 'Liberia'),
(126, 434, 'LY', 'LBY', 'Libia'),
(127, 438, 'LI', 'LIE', 'Liechtenstein'),
(128, 440, 'LT', 'LTU', 'Lituania'),
(129, 442, 'LU', 'LUX', 'Luxemburgo'),
(130, 446, 'MO', 'MAC', 'Macao'),
(131, 807, 'MK', 'MKD', 'ARY Macedonia'),
(132, 450, 'MG', 'MDG', 'Madagascar'),
(133, 458, 'MY', 'MYS', 'Malasia'),
(134, 454, 'MW', 'MWI', 'Malawi'),
(135, 462, 'MV', 'MDV', 'Maldivas'),
(136, 466, 'ML', 'MLI', 'Malí'),
(137, 470, 'MT', 'MLT', 'Malta'),
(138, 238, 'FK', 'FLK', 'Islas Malvinas'),
(139, 580, 'MP', 'MNP', 'Islas Marianas del Norte'),
(140, 504, 'MA', 'MAR', 'Marruecos'),
(141, 584, 'MH', 'MHL', 'Islas Marshall'),
(142, 474, 'MQ', 'MTQ', 'Martinica'),
(143, 480, 'MU', 'MUS', 'Mauricio'),
(144, 478, 'MR', 'MRT', 'Mauritania'),
(145, 175, 'YT', 'MYT', 'Mayotte'),
(146, 484, 'MX', 'MEX', 'México'),
(147, 583, 'FM', 'FSM', 'Micronesia'),
(148, 498, 'MD', 'MDA', 'Moldavia'),
(149, 492, 'MC', 'MCO', 'Mónaco'),
(150, 496, 'MN', 'MNG', 'Mongolia'),
(151, 500, 'MS', 'MSR', 'Montserrat'),
(152, 508, 'MZ', 'MOZ', 'Mozambique'),
(153, 104, 'MM', 'MMR', 'Myanmar'),
(154, 516, 'NA', 'NAM', 'Namibia'),
(155, 520, 'NR', 'NRU', 'Nauru'),
(156, 524, 'NP', 'NPL', 'Nepal'),
(157, 558, 'NI', 'NIC', 'Nicaragua'),
(158, 562, 'NE', 'NER', 'Níger'),
(159, 566, 'NG', 'NGA', 'Nigeria'),
(160, 570, 'NU', 'NIU', 'Niue'),
(161, 574, 'NF', 'NFK', 'Isla Norfolk'),
(162, 578, 'NO', 'NOR', 'Noruega'),
(163, 540, 'NC', 'NCL', 'Nueva Caledonia'),
(164, 554, 'NZ', 'NZL', 'Nueva Zelanda'),
(165, 512, 'OM', 'OMN', 'Omán'),
(166, 528, 'NL', 'NLD', 'Países Bajos'),
(167, 586, 'PK', 'PAK', 'Pakistán'),
(168, 585, 'PW', 'PLW', 'Palau'),
(169, 275, 'PS', 'PSE', 'Palestina'),
(170, 591, 'PA', 'PAN', 'Panamá'),
(171, 598, 'PG', 'PNG', 'Papúa Nueva Guinea'),
(172, 600, 'PY', 'PRY', 'Paraguay'),
(173, 604, 'PE', 'PER', 'Perú'),
(174, 612, 'PN', 'PCN', 'Islas Pitcairn'),
(175, 258, 'PF', 'PYF', 'Polinesia Francesa'),
(176, 616, 'PL', 'POL', 'Polonia'),
(177, 620, 'PT', 'PRT', 'Portugal'),
(178, 630, 'PR', 'PRI', 'Puerto Rico'),
(179, 634, 'QA', 'QAT', 'Qatar'),
(180, 826, 'GB', 'GBR', 'Reino Unido'),
(181, 638, 'RE', 'REU', 'Reunión'),
(182, 646, 'RW', 'RWA', 'Ruanda'),
(183, 642, 'RO', 'ROU', 'Rumania'),
(184, 643, 'RU', 'RUS', 'Rusia'),
(185, 732, 'EH', 'ESH', 'Sahara Occidental'),
(186, 90, 'SB', 'SLB', 'Islas Salomón'),
(187, 882, 'WS', 'WSM', 'Samoa'),
(188, 16, 'AS', 'ASM', 'Samoa Americana'),
(189, 659, 'KN', 'KNA', 'San Cristóbal y Nevis'),
(190, 674, 'SM', 'SMR', 'San Marino'),
(191, 666, 'PM', 'SPM', 'San Pedro y Miquelón'),
(192, 670, 'VC', 'VCT', 'San Vicente y las Granadinas'),
(193, 654, 'SH', 'SHN', 'Santa Helena'),
(194, 662, 'LC', 'LCA', 'Santa Lucía'),
(195, 678, 'ST', 'STP', 'Santo Tomé y Príncipe'),
(196, 686, 'SN', 'SEN', 'Senegal'),
(197, 891, 'CS', 'SCG', 'Serbia y Montenegro'),
(198, 690, 'SC', 'SYC', 'Seychelles'),
(199, 694, 'SL', 'SLE', 'Sierra Leona'),
(200, 702, 'SG', 'SGP', 'Singapur'),
(201, 760, 'SY', 'SYR', 'Siria'),
(202, 706, 'SO', 'SOM', 'Somalia'),
(203, 144, 'LK', 'LKA', 'Sri Lanka'),
(204, 748, 'SZ', 'SWZ', 'Suazilandia'),
(205, 710, 'ZA', 'ZAF', 'Sudáfrica'),
(206, 736, 'SD', 'SDN', 'Sudán'),
(207, 752, 'SE', 'SWE', 'Suecia'),
(208, 756, 'CH', 'CHE', 'Suiza'),
(209, 740, 'SR', 'SUR', 'Surinam'),
(210, 744, 'SJ', 'SJM', 'Svalbard y Jan Mayen'),
(211, 764, 'TH', 'THA', 'Tailandia'),
(212, 158, 'TW', 'TWN', 'Taiwán'),
(213, 834, 'TZ', 'TZA', 'Tanzania'),
(214, 762, 'TJ', 'TJK', 'Tayikistán'),
(215, 86, 'IO', 'IOT', 'Territorio Británico del Océano Índico'),
(216, 260, 'TF', 'ATF', 'Territorios Australes Franceses'),
(217, 626, 'TL', 'TLS', 'Timor Oriental'),
(218, 768, 'TG', 'TGO', 'Togo'),
(219, 772, 'TK', 'TKL', 'Tokelau'),
(220, 776, 'TO', 'TON', 'Tonga'),
(221, 780, 'TT', 'TTO', 'Trinidad y Tobago'),
(222, 788, 'TN', 'TUN', 'Túnez'),
(223, 796, 'TC', 'TCA', 'Islas Turcas y Caicos'),
(224, 795, 'TM', 'TKM', 'Turkmenistán'),
(225, 792, 'TR', 'TUR', 'Turquía'),
(226, 798, 'TV', 'TUV', 'Tuvalu'),
(227, 804, 'UA', 'UKR', 'Ucrania'),
(228, 800, 'UG', 'UGA', 'Uganda'),
(229, 858, 'UY', 'URY', 'Uruguay'),
(230, 860, 'UZ', 'UZB', 'Uzbekistán'),
(231, 548, 'VU', 'VUT', 'Vanuatu'),
(232, 862, 'VE', 'VEN', 'Venezuela'),
(233, 704, 'VN', 'VNM', 'Vietnam'),
(234, 92, 'VG', 'VGB', 'Islas Vírgenes Británicas'),
(235, 850, 'VI', 'VIR', 'Islas Vírgenes de los Estados Unidos'),
(236, 876, 'WF', 'WLF', 'Wallis y Futuna'),
(237, 887, 'YE', 'YEM', 'Yemen'),
(238, 262, 'DJ', 'DJI', 'Yibuti'),
(239, 894, 'ZM', 'ZMB', 'Zambia'),
(240, 716, 'ZW', 'ZWE', 'Zimbabue');

-- 
-- Dumping data for table soliris_seguridad
--
INSERT INTO soliris_seguridad VALUES
(70, 'pacientes.php', 'Listado de Pacientes'),
(71, 'canal.php', 'ABM Canal'),
(72, 'canales.php', 'Listado de Canales'),
(73, 'docs_hist_medico.php', 'ABM Documentación Cap Medicos'),
(74, 'docs_medico.php', 'ABM Documentación Medicos'),
(75, 'docs_pacientes.php', 'ABM Documentación Paciente'),
(76, 'institucion.php', 'ABM Institución'),
(77, 'instituciones.php', 'Listado de Instituciones'),
(78, 'medico.php', 'ABM Medico'),
(79, 'medicos.php', 'Listado de Medicos'),
(80, 'seguridad.php', 'Listado y ABM de Seguridad'),
(81, 'usuario.php', 'ABM Usuarios'),
(82, 'usuarios.php', 'Listado de Usuarios'),
(83, 'paciente.php', 'ABM Paciente'),
(84, 'dosis.php', 'Listado de Dosis'),
(85, 'a_dosis.php', 'ABM Dosis'),
(86, 'adm_regs.php', 'Administrador de Registros'),
(87, 'adm_regs_edit.php', 'Administrador de Registros - Editor de Registros'),
(88, 'adm_regs_docsedit.php', 'Administrador de Registros - Editor de Documentos'),
(89, 'log.php', 'Visor de Log'),
(90, 'reporte_ventas_apm.php', 'Reportes - Ventas por APM'),
(91, 'reporte_ventas_paciente.php', 'Reporte de Ventas a Pacientes'),
(92, 'reporte_docs_paciente.php', 'Reporte de Ventas (Documentación)'),
(93, 'reporte_ventas.php', 'Reporte de Ventas por periodo'),
(94, 'reporte_anmat.php', 'Reporte Semestral de ANMAT'),
(95, 'reporte_ventas_convenios.php', 'Reporte de Ventas por Convenios'),
(96, 'reportes_panel.php', 'Reporte Panel General'),
(97, 'reporte_grilla.php', 'Reporte Grilla'),
(98, 'reporte_filtros.php', 'Reporte por Filtros'),
(99, 'reporte_panel.php', 'Reporte Panel'),
(100, 'docs_paciente.php', 'Documentación del Paciente'),
(101, 'patologias.php', 'Listado de Patologías'),
(102, 'patologia.php', 'ABM Patologías'),
(103, 'listado.php', 'Listado de Historial de Ventas'),
(104, 'listado_details.php', 'Detalle del Historial de Ventas'),
(105, 'panel.php', 'Principal'),
(106, 'panel_mod.php', 'Administrador de Registros FV'),
(107, 'informes.php', 'Alta de Venta'),
(108, 'docs_nueva_venta.php', 'Docs Nueva Venta'),
(109, 'apms.php', 'Listado de APMs'),
(110, 'apm.php', 'ABM de APMs'),
(111, 'especialidades.php', 'Listado de Especialidades'),
(112, 'a_esp.php', 'ABM de Especialidades'),
(113, 'docs_canales.php', 'Documentación de los Canales'),
(114, 'reporte_productos.php', 'Reporte por dosis'),
(115, 'unidades.php', 'Listado de Unidades'),
(116, 'a_unidad.php', 'ABM de Unidad'),
(117, 'adm_reasignar.php', 'Reasignación de Venta'),
(118, 'reasignar.php', 'Listado de Ventas con posible reasignación'),
(119, 'reasignados.php', 'Listado de Venta para vincular'),
(120, 'reporte_reasignaciones.php', 'Reporte de Reasignaciones'),
(121, 'prueba.php', 'prueba'),
(122, 'prueba2.php', ''),
(123, 'docs_hist_paciente.php', 'Historico Documentacion Paciente'),
(124, 'diff_med.php', 'Diferencias de Medicos Meditec'),
(125, 'nueva_venta.php', 'Nueva Venta'),
(126, 'generar_venta.php', 'Generación de Venta'),
(127, 'modificar_venta.php', 'Modificación de Venta'),
(128, 'historial_ventas.php', 'Historial de Ventas');

-- 
-- Dumping data for table sub_patologia
--
INSERT INTO sub_patologia VALUES
(1, 'C3GN', 'SOL', '', '2020-02-10 16:05:32'),
(2, 'EDD', 'SOL', '', '2020-02-10 16:05:44'),
(3, 'CFHR5GP', 'SOL', '', '2020-02-10 16:05:54'),
(4, 'N/A', 'SOL', '', '2020-02-26 16:10:02');

-- 
-- Dumping data for table patologia
--
INSERT INTO patologia VALUES
(17, 'HPN', 5, 'SOL', NULL, '2020-02-10 15:52:49'),
(18, 'SUHa', 5, 'SOL', NULL, '2020-02-10 15:53:04'),
(19, 'gMGr', 5, 'SOL', NULL, '2020-02-10 15:53:12'),
(20, 'NMOSD', 5, 'SOL', NULL, '2020-02-10 15:53:30'),
(21, 'Glomerulospatias ', 5, 'SOL', NULL, '2020-02-10 15:53:38'),
(22, 'patologia pruebas', 6, 'SOL', 'pmiranda', '2020-04-08 00:36:45');

-- 
-- Dumping data for table paciente
--
INSERT INTO paciente VALUES
(1, 'APELLIDOUNO', 'NOMBREUNO NOMBREDOS', 'APELLIDOUNO, NOMBREUNO NOMBREDOS', '1990-06-21', 'M', '', '', 13, 'mail@mail.com', 19, 4, 2, 'ok se ve bien la documentacion', 34, NULL, 11, 8, '2020-04-13 15:31:44', 'SOL', '2020-04-13 15:34:15', 34, 30406),
(2, 'MIRANDA', 'PABLO', 'MIRANDA, PABLO', '2020-04-07', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, '', 50, NULL, 11, 8, '2020-04-13 15:56:57', 'SOL', '2020-04-13 15:57:37', 50, 0),
(3, 'paciente1', 'paciente1', 'paciente1, paciente1', '2020-04-06', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:21:32', 'SOL', '2020-04-15 22:25:30', 34, 0),
(4, 'paciente2', 'paciente2', 'paciente2, paciente2', '2020-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:21:39', 'SOL', '2020-04-15 22:25:33', 34, 0),
(5, 'paciente3', 'paciente3', 'paciente3, paciente3', '2020-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:21:44', 'SOL', '2020-04-15 22:25:36', 34, 0),
(6, 'paciente4', 'paciente4', 'paciente4, paciente4', '1999-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:21:55', 'SOL', '2020-04-15 22:25:38', 34, 0),
(7, 'paciente5', 'paciente5', 'paciente5, paciente5', '1987-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:22:04', 'SOL', '2020-04-15 22:25:40', 34, 0),
(8, 'paciente6', 'paciente6', 'paciente6, paciente6', '1987-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:22:11', 'SOL', '2020-04-15 22:25:42', 34, 0),
(9, 'paciente7', 'paciente7', 'paciente7, paciente7', '1946-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:22:27', 'SOL', '2020-04-15 22:25:44', 34, 0),
(10, 'paciente8', 'paciente8', 'paciente8, paciente8', '1945-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:22:35', 'SOL', '2020-04-15 22:25:47', 34, 0),
(11, 'paciente9', 'paciente9', 'paciente9, paciente9', '1978-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 7, 8, '2020-04-15 22:22:42', 'SOL', '2020-04-15 22:25:49', 34, 0),
(12, 'paciente10', 'paciente10', 'paciente10, paciente10', '1978-04-04', 'M', '01131218333', 'Tigre', 13, 'pmirand6@gmail.com', 17, 4, 4, 'ok se ve bien la documentacion', 50, NULL, 11, 8, '2020-04-15 22:22:48', 'SOL', '2020-04-15 22:25:51', 34, 0);

-- 
-- Dumping data for table especialidad
--
INSERT INTO especialidad VALUES
(1, 'especialidad prueba', 'SOL', 28, 'pmiranda', '2020-04-07 21:50:38'),
(2, 'especialidad pruebas', 'SOL', 28, 'pmiranda', '2020-04-07 21:50:53');

-- 
-- Dumping data for table medico
--
INSERT INTO medico VALUES
(1, 'Medico_nombre', 'Medico_apellidosss', 24, '123123123', '2020-04-13 15:46:48', 9, '', 'HOSPITAL', 'mail@ail.com', '', '', NULL, '', '2020-04-02', '', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 34, 50, 'Se activa nuevamente el medico'),
(2, 'Miranda', 'Pablo', 24, '12345', '2020-04-15 15:25:38', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', '2020-04-08', 'Tigre', 19, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(3, 'Miranda', 'Miranda', 24, '12345', '2020-04-15 16:32:17', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', '2020-04-08', 'Tigre', 19, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(4, 'Miranda', 'Gaston', 24, '12345', '2020-04-15 16:32:52', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', '2020-04-01', 'Tigre', 19, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(5, 'Miranda', 'Pablo gaston', 24, '12345', '2020-04-15 16:34:24', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', NULL, 'Tigre', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(6, 'Miranda', 'Dsjalkdjaklsjd', 24, '12345', '2020-04-15 16:36:01', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', NULL, 'Tigre', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(8, 'Miranda', 'Dsjalkdjakl', 24, '12345', '2020-04-15 16:51:43', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', NULL, 'Tigre', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(10, 'test1', 'test1', 24, '124545', '2020-04-15 22:20:36', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', NULL, 'Tigre', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(11, 'test2', 'test2', 24, '124545645', '2020-04-15 22:20:48', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', NULL, 'Tigre', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(12, 'test3', 'test3', 24, '124545645', '2020-04-15 22:20:53', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', NULL, 'Tigre', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(13, 'test4', 'test4', 24, '124545645', '2020-04-15 22:20:58', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', NULL, 'Tigre', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(14, 'test5', 'test5', 24, '124545645', '2020-04-15 22:21:02', 1, '', 'HOSPITAL', 'pmirand6@gmail.com', '01131218333', '', NULL, '1737, ohiggings', NULL, 'Tigre', 30, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(15, 'Nombre', 'Apellido', 24, '1234', '2020-04-16 18:53:55', 3, 'APROSS', 'HOSPITAL', '', '', '', NULL, '', NULL, 'Fefsdf', 19, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL),
(16, 'Medicoape', 'Nombreape', 24, '132132', '2020-04-16 20:12:20', 4, '', 'HOSPITAL', '', '', '', NULL, '', '2020-04-01', '', 19, '2020-04-21 23:32:19', '2020-04-21 23:31:57', '0000-00-00 00:00:00', '2020-04-21 23:32:19', 'SOL', 50, 50, NULL);

-- 
-- Dumping data for table documentos
--
INSERT INTO documentos VALUES
(1, 'Otro_1_2020-04-13_so_2.png', 2, '2020-04-13 15:32:13', '2020-04-10', 16, 34, 'SOL'),
(2, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-13 15:32:13', '2020-04-13', 16, 34, 'SOL'),
(3, 'Vacunacion_1_2020-04-13_so_2.png', 1, '2020-04-13 15:33:29', '2020-04-13', 15, 34, 'SOL'),
(4, 'Otro_1_2020-04-13_20A02054.pdf', 2, '2020-04-13 15:33:29', '2020-04-10', 15, 34, 'SOL'),
(5, 'capacitacion_1_2020-04-09_arrow-out.png', 6, '2020-04-13 15:46:58', '2020-04-09', 15, 34, 'SOL'),
(6, 'Vacunacion_2_2020-04-13_logo_t.png', 1, '2020-04-13 15:57:09', '2020-04-01', 15, 50, 'SOL'),
(7, 'receta_2_2020-04-10_18P03288.pdf', 3, '2020-04-13 15:59:51', '2020-04-10', 16, 34, 'SOL'),
(8, 'receta_2_2020-04-02_WIN_20170825_12_07_41_Pro.jpg', 3, '2020-04-14 15:38:40', '2020-04-02', 16, 50, 'SOL'),
(9, 'receta_2_2020-04-04_WIN_20180206_11_16_23_Pro.jpg', 3, '2020-04-14 15:46:11', '2020-04-04', 15, 50, 'SOL'),
(10, 'otro_2_2020-04-09_WIN_20180207_15_17_00_Pro.jpg', 4, '2020-04-14 15:51:39', '2020-04-09', 15, 50, 'SOL'),
(11, 'capacitacion_2_2020-04-08_test.jpg', 6, '2020-04-15 15:26:28', '2020-04-08', 15, 50, 'SOL'),
(12, 'capacitacion_3_2020-04-08_WIN_20170825_12_07_02_Pro.jpg', 6, '2020-04-15 16:32:30', '2020-04-08', 15, 50, 'SOL'),
(13, 'capacitacion_4_2020-04-01_WIN_20170825_12_07_02_Pro.jpg', 6, '2020-04-15 16:33:04', '2020-04-01', 15, 50, 'SOL'),
(14, 'receta_2_2020-04-01_test.jpg', 3, '2020-04-15 21:49:23', '2020-04-01', 15, 50, 'SOL'),
(15, 'receta_1_2020-04-01_WIN_20170825_12_07_02_Pro.jpg', 3, '2020-04-15 21:51:38', '2020-04-01', 15, 50, 'SOL'),
(16, 'receta_2_2020-04-02_WIN_20170825_12_07_02_Pro.jpg', 3, '2020-04-15 21:52:20', '2020-04-02', 15, 50, 'SOL'),
(17, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:24:10', '2020-04-13', 15, 34, 'SOL'),
(18, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:24:16', '2020-04-13', 15, 34, 'SOL'),
(19, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:24:24', '2020-04-13', 15, 34, 'SOL'),
(20, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:24:32', '2020-04-13', 15, 34, 'SOL'),
(21, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:24:39', '2020-04-13', 15, 34, 'SOL'),
(22, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:24:45', '2020-04-13', 15, 34, 'SOL'),
(23, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:24:54', '2020-04-13', 15, 34, 'SOL'),
(24, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:25:00', '2020-04-13', 15, 34, 'SOL'),
(25, 'Vacunacion_1_2020-04-13_20P00117.pdf', 1, '2020-04-15 22:25:05', '2020-04-13', 15, 34, 'SOL'),
(26, 'receta_2_2020-04-02_WIN_20170825_12_07_02_Pro.jpg', 4, '2020-04-15 22:29:06', '2020-04-02', 15, 50, 'SOL'),
(27, 'receta_2_2020-04-02_WIN_20170825_12_07_02_Pro.jpg', 4, '2020-04-15 22:29:28', '2020-04-02', 15, 50, 'SOL'),
(28, 'receta_2_2020-04-02_WIN_20170825_12_07_02_Pro.jpg', 5, '2020-04-15 22:29:51', '2020-04-02', 15, 50, 'SOL'),
(30, 'receta_2_2020-04-02_WIN_20170825_12_07_02_Pro.jpg', 3, '2020-04-15 22:31:00', '2020-04-02', 15, 50, 'SOL'),
(31, 'capacitacion_16_2020-04-01_test.jpg', 6, '2020-04-16 20:16:53', '2020-04-01', 15, 50, 'SOL'),
(32, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:26:35', '2020-04-01', 15, 50, 'SOL'),
(33, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:27:37', '2020-04-01', 15, 50, 'SOL'),
(34, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:28:11', '2020-04-01', 15, 50, 'SOL'),
(35, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:29:00', '2020-04-01', 15, 50, 'SOL'),
(36, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:30:45', '2020-04-01', 15, 50, 'SOL'),
(37, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:31:04', '2020-04-01', 15, 50, 'SOL'),
(38, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:34:00', '2020-04-01', 15, 50, 'SOL'),
(39, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:36:14', '2020-04-01', 15, 50, 'SOL'),
(40, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:36:32', '2020-04-01', 15, 50, 'SOL'),
(41, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:36:45', '2020-04-01', 15, 50, 'SOL'),
(42, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:37:28', '2020-04-01', 15, 50, 'SOL'),
(43, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:38:10', '2020-04-01', 15, 50, 'SOL'),
(44, 'capacitacion_1_2020-04-01_test.jpg', 6, '2020-04-20 15:38:21', '2020-04-01', 15, 50, 'SOL'),
(45, 'capacitacion_1_2020-04-02_test.jpg', 6, '2020-04-20 15:39:21', '2020-04-02', 15, 50, 'SOL'),
(46, 'capacitacion_16_2020-04-01_test.jpg', 6, '2020-04-20 15:40:07', '2020-04-01', 15, 50, 'SOL'),
(47, 'receta_1_2020-04-01_test.jpg', 3, '2020-04-21 13:32:14', '2020-04-01', 15, 50, 'SOL');

-- 
-- Dumping data for table maestro_ventas_tipo
--
INSERT INTO maestro_ventas_tipo VALUES
(1, 'RI', 'Registro Inicial'),
(2, 'FU', 'Follow Up'),
(3, 'CA', 'Cancelado');

-- 
-- Dumping data for table maestro_ventas
--
INSERT INTO maestro_ventas VALUES
(5, 1, '29', 4, 1, 1, 1, 2, '2018-02-03 00:00:00', 19, 4, 1062, 75, 23, 34, NULL, NULL, NULL, '2356490', '2020-04-13 15:54:47', 34, '0000-00-00 00:00:00'),
(6, 2, '0', 4, 1, 1, 1, 2, '2018-02-03 00:00:00', 17, 4, 1028, 75, 23, 34, NULL, NULL, NULL, '2356490', '2020-04-13 15:59:51', 50, '2020-04-14 16:26:21'),
(7, 2, '0', 4, 2, 1, 1, 1, '2018-02-03 00:00:00', 17, 4, 1026, 75, 23, 50, NULL, NULL, NULL, '2356490', '2020-04-15 21:49:22', 50, '0000-00-00 00:00:00'),
(8, 1, '29', 4, 2, 1, 1, 2, '2018-02-03 00:00:00', 19, 4, 1067, 76, 23, 50, NULL, NULL, NULL, '2356490', '2020-04-15 21:51:38', 50, '0000-00-00 00:00:00'),
(9, 2, '0', 3, 2, 1, 1, 2, '2018-02-03 00:00:00', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, '2356490', '2020-04-15 21:52:20', 50, '0000-00-00 00:00:00'),
(10, 3, '0', 3, 1, 1, 1, 2, '2020-02-03 00:00:00', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, '2356490', '2020-04-15 22:28:54', 50, '0000-00-00 00:00:00'),
(11, 4, '0', 3, 1, 1, 1, 2, '2020-04-15 22:29:20', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:29:20', 50, '0000-00-00 00:00:00'),
(12, 5, '0', 3, 1, 1, 1, 2, '2020-02-03 00:00:00', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, '2356490', '2020-04-15 22:29:41', 50, '0000-00-00 00:00:00'),
(13, 6, '21', 3, 1, 1, 1, 2, '2020-02-03 00:00:00', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, '2356490', '2020-04-15 22:30:01', 50, '0000-00-00 00:00:00'),
(14, 3, '0', 3, 2, 1, 1, 2, '2020-02-03 00:00:00', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, '2356490', '2020-04-15 22:37:00', 50, '0000-00-00 00:00:00'),
(15, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:01', 17, 4, 1136, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:01', 50, '0000-00-00 00:00:00'),
(16, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:02', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:02', 50, '0000-00-00 00:00:00'),
(17, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:02', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:02', 50, '0000-00-00 00:00:00'),
(18, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:03', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:03', 50, '0000-00-00 00:00:00'),
(19, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:03', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:03', 50, '0000-00-00 00:00:00'),
(20, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:03', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:03', 50, '0000-00-00 00:00:00'),
(21, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:04', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:04', 50, '0000-00-00 00:00:00'),
(22, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:04', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:04', 50, '0000-00-00 00:00:00'),
(23, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:04', 17, 4, 1136, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:04', 50, '0000-00-00 00:00:00'),
(24, 3, '0', 3, 2, 1, 1, 2, '2020-04-15 22:37:05', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:05', 50, '0000-00-00 00:00:00'),
(25, 11, '42', 3, 1, 1, 1, 2, '2020-04-15 22:37:08', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:08', 50, '0000-00-00 00:00:00'),
(26, 11, '42', 3, 2, 1, 1, 2, '2020-04-15 22:37:08', 17, 4, 1076, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:08', 50, '0000-00-00 00:00:00'),
(27, 11, '42', 3, 2, 1, 1, 2, '2020-04-15 22:37:09', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:09', 50, '0000-00-00 00:00:00'),
(28, 11, '42', 3, 2, 1, 1, 2, '2020-04-15 22:37:09', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:09', 50, '0000-00-00 00:00:00'),
(29, 10, '75', 3, 1, 1, 1, 2, '2020-04-15 22:37:13', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:13', 50, '0000-00-00 00:00:00'),
(30, 10, '75', 3, 2, 1, 1, 2, '2020-04-15 22:37:13', 17, 4, 1076, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:13', 50, '0000-00-00 00:00:00'),
(31, 10, '75', 3, 2, 1, 1, 2, '2020-04-15 22:37:14', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:14', 50, '0000-00-00 00:00:00'),
(32, 6, '21', 3, 2, 1, 1, 2, '2020-04-15 22:37:20', 17, 4, 1136, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:20', 50, '0000-00-00 00:00:00'),
(33, 6, '21', 3, 2, 1, 1, 2, '2020-04-15 22:37:21', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:21', 50, '0000-00-00 00:00:00'),
(34, 6, '21', 3, 2, 1, 1, 2, '2020-04-15 22:37:21', 17, 4, 1035, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:21', 50, '0000-00-00 00:00:00'),
(35, 6, '21', 3, 2, 1, 1, 2, '2020-04-15 22:37:22', 17, 4, 1136, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:22', 50, '0000-00-00 00:00:00'),
(36, 7, '33', 3, 1, 1, 1, 2, '2020-04-15 22:37:24', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:24', 50, '0000-00-00 00:00:00'),
(37, 7, '33', 3, 2, 1, 1, 2, '2020-04-15 22:37:25', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:25', 50, '0000-00-00 00:00:00'),
(38, 7, '33', 3, 2, 1, 1, 2, '2020-04-15 22:37:25', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:25', 50, '0000-00-00 00:00:00'),
(39, 8, '33', 3, 1, 1, 1, 2, '2020-04-15 22:37:28', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:28', 50, '0000-00-00 00:00:00'),
(40, 8, '33', 3, 2, 1, 1, 2, '2020-04-15 22:37:28', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:28', 50, '0000-00-00 00:00:00'),
(41, 8, '33', 3, 2, 1, 1, 2, '2020-04-15 22:37:28', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:28', 50, '0000-00-00 00:00:00'),
(42, 10, '75', 3, 2, 1, 1, 2, '2020-04-15 22:37:32', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:32', 50, '0000-00-00 00:00:00'),
(43, 10, '75', 3, 2, 1, 1, 2, '2020-04-15 22:37:32', 17, 4, 1067, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:32', 50, '0000-00-00 00:00:00'),
(44, 10, '75', 3, 2, 1, 1, 2, '2020-04-15 22:37:33', 17, 4, 1034, 75, 23, 50, NULL, NULL, NULL, NULL, '2020-04-15 22:37:33', 50, '0000-00-00 00:00:00'),
(45, 1, '29', 8, 3, 1, 1, 2, '2020-04-21 13:32:14', 19, 4, 1302, 131, 14, 50, NULL, NULL, NULL, NULL, '2020-04-21 13:32:14', 50, '2020-04-21 14:22:43');

-- 
-- Dumping data for table provincias
--
INSERT INTO provincias VALUES
(1, 'BUENOS AIRES', 13),
(2, 'CATAMARCA', 13),
(3, 'CHACO', 13),
(4, 'CHUBUT', 13),
(5, 'CÓRDOBA', 13),
(6, 'CORRIENTES', 13),
(7, 'ENTRE RÍOS', 13),
(8, 'FORMOSA', 13),
(9, 'JUJUY', 13),
(10, 'LA PAMPA', 13),
(11, 'LA RIOJA', 13),
(12, 'MENDOZA', 13),
(13, 'MISIONES', 13),
(14, 'NEUQUÉN', 13),
(15, 'RÍO NEGRO', 13),
(16, 'SALTA', 13),
(17, 'SAN JUAN', 13),
(18, 'SAN LUIS', 13),
(19, 'SANTA CRUZ', 13),
(20, 'SANTA FÉ', 13),
(21, 'SANTIAGO DEL ESTERO', 13),
(22, 'TIERRA DEL FUEGO', 13),
(23, 'TUCUMÁN', 13);

-- 
-- Dumping data for table soliris_log
--
INSERT INTO soliris_log VALUES
(1, 'dcilveti', '2020-04-13 15:31:44', 'CALL `ST_NEW_PACIENTE`(\n            ''APELLIDOUNO'', \n            ''NOMBREUNO NOMBREDOS'', \n            ''1990-06-21'', \n            ''M'', \n            '''', \n            '''', \n            13, \n            ''mail@mail.com'', \n            19, \n            4, \n            2, \n            ''dcilveti'', \n            ''8'', \n            30406)', 'paciente_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(2, 'dcilveti', '2020-04-13 15:32:13', 'CALL `ST_UP_DOC_PACIENTE`(''1'', ''Otro'', ''Otro_1_2020-04-13_so_2.png'', ''dcilveti'', ''2020-04-10'')', 'ajx.docs_paciente.php', NULL, NULL, NULL, NULL, NULL, NULL),
(3, 'dcilveti', '2020-04-13 15:32:13', 'CALL `ST_UP_DOC_PACIENTE`(''1'', ''Vacunacion'', ''Vacunacion_1_2020-04-13_20P00117.pdf'', ''dcilveti'', ''2020-04-13'')', 'ajx.docs_paciente.php', NULL, NULL, NULL, NULL, NULL, NULL),
(4, 'dcilveti', '2020-04-13 15:33:29', 'CALL `ST_UP_DOC_PACIENTE`(''1'', ''Vacunacion'', ''Vacunacion_1_2020-04-13_so_2.png'', ''dcilveti'', ''2020-04-13'')', 'ajx.docs_paciente.php', NULL, NULL, NULL, NULL, NULL, NULL),
(5, 'dcilveti', '2020-04-13 15:33:29', 'CALL `ST_UP_DOC_PACIENTE`(''1'', ''Otro'', ''Otro_1_2020-04-13_20A02054.pdf'', ''dcilveti'', ''2020-04-10'')', 'ajx.docs_paciente.php', NULL, NULL, NULL, NULL, NULL, NULL),
(6, 'dcilveti', '2020-04-13 15:34:15', 'CALL ST_VAL_PAC(''1'', ''ok se ve bien la documentacion'', ''11'', ''dcilveti'')', 'paciente_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(7, 'dcilveti', '2020-04-13 15:35:47', 'CALL ST_NEW_MEDICO(\n    ''Raul'', \n    ''Marin'', \n    ''1'', \n    ''12342342'', \n    ''HOSPITAL'', \n    ''BOCALANDRO'', \n    '''', \n    '''', \n    '''', \n    '''', \n    ''9'', \n    '''',\n    ''dcilveti'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(8, 'dcilveti', '2020-04-13 15:46:48', 'CALL ST_NEW_MEDICO(\n    ''Medico_nombre'', \n    ''Medico_apellido'', \n    ''24'', \n    ''123123123'', \n    ''HOSPITAL'', \n    '''', \n    '''', \n    '''', \n    '''', \n    '''', \n    ''9'', \n    ''mail@ail.com'',\n    ''dcilveti'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(9, 'dcilveti', '2020-04-13 15:46:58', 'CALL `ST_GUARDAR_MEDICO_DOCS`(''1'', ''6'', ''capacitacion_1_2020-04-09_arrow-out.png'', ''dcilveti'', ''2020-04-09'')', 'save_doc_medico', NULL, NULL, NULL, NULL, NULL, NULL),
(10, 'dcilveti', '2020-04-13 15:48:14', 'CALL `ST_GUARDAR_VENTA`(''1'',\n     ''1'', \n     ''1'', \n     ''4'', \n     ''2'', \n     ''1062'', \n     ''75'', \n     ''dcilveti'')', 'ajx.guarda_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(11, 'dcilveti', '2020-04-13 15:50:00', 'CALL `ST_GUARDAR_VENTA`(''1'',\n     ''1'', \n     ''1'', \n     ''4'', \n     ''2'', \n     ''1062'', \n     ''75'', \n     ''dcilveti'')', 'ajx.guarda_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(12, 'pmiranda', '2020-04-13 15:56:57', 'CALL `ST_NEW_PACIENTE`(\n            ''MIRANDA'', \n            ''PABLO'', \n            ''2020-04-07'', \n            ''M'', \n            ''01131218333'', \n            ''Tigre'', \n            13, \n            ''pmirand6@gmail.com'', \n            17, \n            4, \n            4, \n            ''pmiranda'', \n            ''8'', \n            0)', 'paciente_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(13, 'pmiranda', '2020-04-13 15:57:09', 'CALL `ST_UP_DOC_PACIENTE`(''2'', ''Vacunacion'', ''Vacunacion_2_2020-04-13_logo_t.png'', ''pmiranda'', ''2020-04-01'')', 'ajx.docs_paciente.php', NULL, NULL, NULL, NULL, NULL, NULL),
(14, 'pmiranda', '2020-04-13 15:57:37', 'CALL ST_VAL_PAC(''2'', '''', ''11'', ''pmiranda'')', 'paciente_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(15, 'dcilveti', '2020-04-13 15:59:51', 'CALL `ST_GUARDAR_VENTA`(''2'',\n     ''1'', \n     ''1'', \n     ''4'', \n     ''3'', \n     ''1062'', \n     ''75'', \n     ''dcilveti'')', 'ajx.guarda_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(16, 'dcilveti', '2020-04-13 15:59:51', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-10_18P03288.pdf'', ''dcilveti'', ''2020-04-10'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(17, 'pmiranda', '2020-04-14 13:47:33', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(18, 'pmiranda', '2020-04-14 13:51:56', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(19, 'pmiranda', '2020-04-14 13:54:41', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(20, 'pmiranda', '2020-04-14 13:54:41', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta__2020-04-01_WIN_20170825_12_07_02_Pro.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(21, 'pmiranda', '2020-04-14 13:58:41', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(22, 'pmiranda', '2020-04-14 13:58:41', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta__2020-04-01_WIN_20170825_12_07_02_Pro.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(23, 'pmiranda', '2020-04-14 13:59:10', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(24, 'pmiranda', '2020-04-14 13:59:10', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-01_WIN_20170825_12_07_41_Pro.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(25, 'pmiranda', '2020-04-14 14:04:31', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(26, 'pmiranda', '2020-04-14 14:04:32', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-02_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-02'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(27, 'pmiranda', '2020-04-14 14:06:23', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(28, 'pmiranda', '2020-04-14 14:06:23', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-03_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-03'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(29, 'pmiranda', '2020-04-14 14:07:26', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(30, 'pmiranda', '2020-04-14 14:07:26', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-03_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-03'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(31, 'pmiranda', '2020-04-14 14:10:01', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(32, 'pmiranda', '2020-04-14 14:10:01', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-03_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-03'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(33, 'pmiranda', '2020-04-14 14:10:34', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(34, 'pmiranda', '2020-04-14 14:11:09', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(35, 'pmiranda', '2020-04-14 14:11:35', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(36, 'pmiranda', '2020-04-14 14:11:59', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(37, 'pmiranda', '2020-04-14 14:11:59', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-03_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-03'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(38, 'pmiranda', '2020-04-14 14:12:27', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(39, 'pmiranda', '2020-04-14 14:12:27', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-03_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-03'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(40, 'pmiranda', '2020-04-14 14:53:15', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(41, 'pmiranda', '2020-04-14 14:54:41', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(42, 'pmiranda', '2020-04-14 14:57:05', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(43, 'pmiranda', '2020-04-14 14:57:05', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-01_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(44, 'pmiranda', '2020-04-14 14:58:38', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(45, 'pmiranda', '2020-04-14 14:58:38', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-01_WIN_20170825_12_07_02_Pro.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(46, 'pmiranda', '2020-04-14 15:07:01', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(47, 'pmiranda', '2020-04-14 15:08:20', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(48, 'pmiranda', '2020-04-14 15:09:03', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(49, 'pmiranda', '2020-04-14 15:09:20', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1062'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(50, 'pmiranda', '2020-04-14 15:24:07', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''3'', \r\n     ''1028'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(51, 'pmiranda', '2020-04-14 15:27:46', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(52, 'pmiranda', '2020-04-14 15:27:46', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-02_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-02'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(53, 'pmiranda', '2020-04-14 15:29:18', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(54, 'pmiranda', '2020-04-14 15:29:18', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-10_WIN_20170825_12_07_41_Pro.jpg'', ''pmiranda'', ''2020-04-10'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(55, 'pmiranda', '2020-04-14 15:30:12', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(56, 'pmiranda', '2020-04-14 15:30:12', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-02_WIN_20170825_12_07_41_Pro.jpg'', ''pmiranda'', ''2020-04-02'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(57, 'pmiranda', '2020-04-14 15:46:11', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(58, 'pmiranda', '2020-04-14 15:46:11', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''3'', ''receta_2_2020-04-04_WIN_20180206_11_16_23_Pro.jpg'', ''pmiranda'', ''2020-04-04'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(59, 'pmiranda', '2020-04-14 15:47:50', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(60, 'pmiranda', '2020-04-14 15:50:00', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(61, 'pmiranda', '2020-04-14 15:51:06', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(62, 'pmiranda', '2020-04-14 15:51:39', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(63, 'pmiranda', '2020-04-14 15:51:39', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''6'', ''4'', ''otro_2_2020-04-09_WIN_20180207_15_17_00_Pro.jpg'', ''pmiranda'', ''2020-04-09'')', 'save_doc_otro', NULL, NULL, NULL, NULL, NULL, NULL),
(64, 'pmiranda', '2020-04-14 16:26:21', 'CALL `ST_MODIFICAR_VENTA`(''6'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1028'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(65, 'pmiranda', '2020-04-15 15:25:38', 'CALL ST_NEW_MEDICO(\r\n    ''Pablo'', \r\n    ''Miranda'', \r\n    ''24'', \r\n    ''12345'', \r\n    ''HOSPITAL'', \r\n    '''', \r\n    ''01131218333'', \r\n    '''', \r\n    ''1737, ohiggings'', \r\n    ''Tigre'', \r\n    ''1'', \r\n    ''pmirand6@gmail.com'',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(66, 'pmiranda', '2020-04-15 15:26:28', 'CALL `ST_GUARDAR_MEDICO_DOCS`(''2'', ''6'', ''capacitacion_2_2020-04-08_test.jpg'', ''pmiranda'', ''2020-04-08'')', 'save_doc_medico', NULL, NULL, NULL, NULL, NULL, NULL),
(67, 'pmiranda', '2020-04-15 16:32:17', 'CALL ST_NEW_MEDICO(\r\n    ''Miranda'', \r\n    ''Miranda'', \r\n    ''24'', \r\n    ''12345'', \r\n    ''HOSPITAL'', \r\n    '''', \r\n    ''01131218333'', \r\n    '''', \r\n    ''1737, ohiggings'', \r\n    ''Tigre'', \r\n    ''1'', \r\n    ''pmirand6@gmail.com'',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(68, 'pmiranda', '2020-04-15 16:32:30', 'CALL `ST_GUARDAR_MEDICO_DOCS`(''3'', ''6'', ''capacitacion_3_2020-04-08_WIN_20170825_12_07_02_Pro.jpg'', ''pmiranda'', ''2020-04-08'')', 'save_doc_medico', NULL, NULL, NULL, NULL, NULL, NULL),
(69, 'pmiranda', '2020-04-15 16:32:52', 'CALL ST_NEW_MEDICO(\r\n    ''Gaston'', \r\n    ''Miranda'', \r\n    ''24'', \r\n    ''12345'', \r\n    ''HOSPITAL'', \r\n    '''', \r\n    ''01131218333'', \r\n    '''', \r\n    ''1737, ohiggings'', \r\n    ''Tigre'', \r\n    ''1'', \r\n    ''pmirand6@gmail.com'',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(70, 'pmiranda', '2020-04-15 16:33:04', 'CALL `ST_GUARDAR_MEDICO_DOCS`(''4'', ''6'', ''capacitacion_4_2020-04-01_WIN_20170825_12_07_02_Pro.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_medico', NULL, NULL, NULL, NULL, NULL, NULL),
(71, 'pmiranda', '2020-04-15 16:34:24', 'CALL ST_NEW_MEDICO(\r\n    ''Pablo gaston'', \r\n    ''Miranda'', \r\n    ''24'', \r\n    ''12345'', \r\n    ''HOSPITAL'', \r\n    '''', \r\n    ''01131218333'', \r\n    '''', \r\n    ''1737, ohiggings'', \r\n    ''Tigre'', \r\n    ''1'', \r\n    ''pmirand6@gmail.com'',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(72, 'pmiranda', '2020-04-15 16:36:01', 'CALL ST_NEW_MEDICO(\r\n    ''Dsjalkdjaklsjd'', \r\n    ''Miranda'', \r\n    ''24'', \r\n    ''12345'', \r\n    ''HOSPITAL'', \r\n    '''', \r\n    ''01131218333'', \r\n    '''', \r\n    ''1737, ohiggings'', \r\n    ''Tigre'', \r\n    ''1'', \r\n    ''pmirand6@gmail.com'',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(73, 'pmiranda', '2020-04-15 16:42:05', 'CALL ST_NEW_MEDICO(\r\n    ''Dsjalkdjaklsjd'', \r\n    ''Miranda'', \r\n    ''24'', \r\n    ''12345'', \r\n    ''HOSPITAL'', \r\n    '''', \r\n    ''01131218333'', \r\n    '''', \r\n    ''1737, ohiggings'', \r\n    ''Tigre'', \r\n    ''1'', \r\n    ''pmirand6@gmail.com.ar'',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(74, 'pmiranda', '2020-04-15 16:51:43', 'CALL ST_NEW_MEDICO(\r\n    ''Dsjalkdjakl'', \r\n    ''Miranda'', \r\n    ''24'', \r\n    ''12345'', \r\n    ''HOSPITAL'', \r\n    '''', \r\n    ''01131218333'', \r\n    '''', \r\n    ''1737, ohiggings'', \r\n    ''Tigre'', \r\n    ''1'', \r\n    ''pmirand6@gmail.com'',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(75, 'pmiranda', '2020-04-15 17:14:54', 'CALL FU_NEW_MED(''Dsjalkdjaklsjd'', ''24'', ''12345'', ''INSTITUCION'', '''', ''01131218333'', '''', '''', ''1737, ohiggings'', ''Tigre'', '''', ''1'', ''pmirand6@gmail.com'') as response', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(76, 'pmiranda', '2020-04-15 17:16:28', 'SELECT FU_UP_MED(''Dsjalkdjaklsjd'', ''24'', ''12345'', ''INSTITUCION'', '''', ''01131218333'', '''', '''', ''1737, ohiggings'', ''Tigre'', '''', ''1'', ''Seleccione Estado'', ''pmiranda'', ''6'',''pmirand6@gmail.com'') as response', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(77, 'pmiranda', '2020-04-15 21:49:22', 'CALL `ST_GUARDAR_VENTA`(''2'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''1'', \r\n     ''1026'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.guarda_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(78, 'pmiranda', '2020-04-15 21:49:22', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''7'', ''3'', ''receta_2_2020-04-01_test.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(79, 'pmiranda', '2020-04-15 21:51:38', 'CALL `ST_GUARDAR_VENTA`(''1'',\r\n     ''1'', \r\n     ''1'', \r\n     ''4'', \r\n     ''2'', \r\n     ''1067'', \r\n     ''76'', \r\n     ''pmiranda'')', 'ajx.guarda_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(80, 'pmiranda', '2020-04-15 21:51:38', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''8'', ''3'', ''receta_1_2020-04-01_WIN_20170825_12_07_02_Pro.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(81, 'pmiranda', '2020-04-15 21:52:20', 'CALL `ST_GUARDAR_VENTA`(''2'',\r\n     ''1'', \r\n     ''1'', \r\n     ''3'', \r\n     ''2'', \r\n     ''1067'', \r\n     ''75'', \r\n     ''pmiranda'')', 'ajx.guarda_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(82, 'pmiranda', '2020-04-15 21:52:20', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''9'', ''3'', ''receta_2_2020-04-02_WIN_20170825_12_07_02_Pro.jpg'', ''pmiranda'', ''2020-04-02'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(83, 'pmiranda', '2020-04-16 16:19:54', 'SELECT FU_UP_DOSIS(''12 Mg'', ''SOL'', ''pmiranda'', ''1'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(84, 'pmiranda', '2020-04-16 16:22:33', 'SELECT FU_UP_DOSIS(''12 Mg'', ''SOL'', ''pmiranda'', ''1'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(85, 'pmiranda', '2020-04-16 16:23:52', 'SELECT FU_UP_DOSIS(''12 Mg'', ''SOL'', ''pmiranda'', ''1'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(86, 'pmiranda', '2020-04-16 16:59:52', 'SELECT FU_UP_DOSIS(''12 Mg'', ''SOL'', ''pmiranda'', ''1'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(87, 'pmiranda', '2020-04-16 17:00:01', 'SELECT FU_UP_DOSIS(''13 Mg'', ''SOL'', ''pmiranda'', ''1'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(88, 'pmiranda', '2020-04-16 17:00:54', 'SELECT FU_UP_DOSIS(''28 Mg'', ''SOL'', ''pmiranda'', ''1'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(89, 'pmiranda', '2020-04-16 17:01:58', 'DELETE FROM presentacion WHERE id = 1', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(90, 'pmiranda', '2020-04-16 17:15:23', 'SELECT FU_NEW_DOSIS(''48 Mg'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(91, 'pmiranda', '2020-04-16 17:27:21', 'SELECT FU_NEW_PRESENTACION(''4900 Mg'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(92, 'pmiranda', '2020-04-16 17:27:37', 'SELECT FU_UP_PRESENTACION(''49 Mg'', ''SOL'', ''pmiranda'', ''6'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(93, 'pmiranda', '2020-04-16 17:28:19', 'SELECT FU_UP_PRESENTACION(''50 Mg'', ''SOL'', ''pmiranda'', ''6'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(94, 'pmiranda', '2020-04-16 17:41:17', 'SELECT FU_UP_MED(''Medico_nombre'', ''24'', ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', '''', '''', ''9'', ''Activo'', ''pmiranda'', ''1'',''mail@ail.com'') as response', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(95, 'pmiranda', '2020-04-16 18:37:57', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(96, 'pmiranda', '2020-04-16 18:40:19', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(97, 'pmiranda', '2020-04-16 18:40:45', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(98, 'pmiranda', '2020-04-16 18:41:31', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(99, 'pmiranda', '2020-04-16 18:42:06', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(100, 'pmiranda', '2020-04-16 18:43:32', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(101, 'pmiranda', '2020-04-16 18:47:03', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(102, 'pmiranda', '2020-04-16 18:47:49', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(103, 'pmiranda', '2020-04-16 18:48:57', 'CALL ST_REL_ESP_MED(1, ''especialidad pruebas'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(104, 'pmiranda', '2020-04-16 18:50:37', 'CALL ST_UP_MEDICO(1, 20, ''Medico_nombre'', ''Medico_apellido2'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(105, 'pmiranda', '2020-04-16 18:50:52', 'CALL ST_UP_MEDICO(1, 19, ''Medico_apellid'', ''Medico_nombre'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(106, 'pmiranda', '2020-04-16 18:51:17', 'CALL ST_UP_MEDICO(1, 20, ''Medico_nombre'', ''Medico_apellidosss'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(107, 'pmiranda', '2020-04-16 18:53:55', 'CALL ST_NEW_MEDICO(\r\n    ''Nombre'', \r\n    ''Apellido'', \r\n    ''24'', \r\n    ''1234'', \r\n    ''HOSPITAL'', \r\n    ''APROSS'', \r\n    '''', \r\n    '''', \r\n    '''', \r\n    '''', \r\n    ''3'', \r\n    '''',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(108, 'pmiranda', '2020-04-16 19:57:51', 'CALL ST_UP_MEDICO(15, 20, ''Nombre'', ''Apellido'',\r\n     24, ''1234'', ''HOSPITAL'', ''APROSS'', '''', '''', '''', '''', 3, '''', ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(109, 'pmiranda', '2020-04-16 20:09:56', 'CALL ST_UP_MEDICO(15, 19, ''Apellido'', ''Nombre'',\r\n     24, ''1234'', ''HOSPITAL'', ''APROSS'', '''', '''', '''', '''', 3, '''', ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(110, 'pmiranda', '2020-04-16 20:11:35', 'CALL ST_UP_MEDICO(15, 19, ''Nombre'', ''Apellido'',\r\n     24, ''1234'', ''HOSPITAL'', ''APROSS'', '''', '''', '''', ''Fefsdf'', 3, '''', ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(111, 'pmiranda', '2020-04-16 20:12:20', 'CALL ST_NEW_MEDICO(\r\n    ''Nombreape'', \r\n    ''Medicoape'', \r\n    ''24'', \r\n    ''132132'', \r\n    ''HOSPITAL'', \r\n    '''', \r\n    '''', \r\n    '''', \r\n    '''', \r\n    '''', \r\n    ''4'', \r\n    '''',\r\n    ''pmiranda'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(112, 'pmiranda', '2020-04-16 20:16:53', 'CALL `ST_GUARDAR_MEDICO_DOCS`(''16'', ''6'', ''capacitacion_16_2020-04-01_test.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_medico', NULL, NULL, NULL, NULL, NULL, NULL),
(113, 'TEST', '2020-04-17 00:07:39', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(114, 'PMIRANDA', '2020-04-17 00:48:43', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(115, 'PMIRANDA', '2020-04-17 00:50:31', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(116, 'TEST', '2020-04-17 01:14:52', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(117, 'TEST', '2020-04-17 01:17:32', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(118, 'TEST', '2020-04-17 01:18:22', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(119, 'TEST', '2020-04-17 01:24:44', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(120, 'PMIRANDA', '2020-04-17 12:22:27', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(121, 'PMIRANDA', '2020-04-17 12:23:36', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(122, 'TEST', '2020-04-17 12:28:13', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(123, 'PMIRANDA', '2020-04-17 13:30:16', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(124, 'PMIRANDA', '2020-04-17 13:30:41', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(125, 'PMIRANDA', '2020-04-17 23:32:31', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(126, 'pmiranda', '2020-04-17 23:33:58', 'SELECT FU_NEW_PRESENTACION(''25'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(127, 'pmiranda', '2020-04-17 23:36:35', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(128, 'pmiranda', '2020-04-18 00:03:41', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(129, 'pmiranda', '2020-04-18 00:04:51', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(130, 'pmiranda', '2020-04-18 00:11:05', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(131, 'pmiranda', '2020-04-18 00:13:52', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(132, 'pmiranda', '2020-04-18 00:18:10', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(133, 'pmiranda', '2020-04-18 00:22:15', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(134, 'pmiranda', '2020-04-18 00:31:41', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(135, 'pmiranda', '2020-04-18 00:35:36', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(136, 'PMIRANDA', '2020-04-18 00:42:18', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(137, 'PMIRANDA', '2020-04-18 00:43:00', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(138, 'PMIRANDA', '2020-04-18 00:43:22', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(139, 'PMIRANDA', '2020-04-18 00:44:02', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(140, 'PMIRANDA', '2020-04-18 00:44:51', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(141, 'PMIRANDA', '2020-04-18 00:46:06', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(142, 'TEST', '2020-04-18 00:47:27', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(143, 'pmiranda', '2020-04-18 00:48:47', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(144, 'pmiranda', '2020-04-18 00:50:58', 'SELECT FU_NEW_PRESENTACION(''2566'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(145, 'pmiranda', '2020-04-18 00:51:11', 'SELECT FU_NEW_PRESENTACION(''2566'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(146, 'pmiranda', '2020-04-18 00:54:34', 'SELECT FU_NEW_PRESENTACION(''7500'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(147, 'pmiranda', '2020-04-18 00:56:40', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(148, 'pmiranda', '2020-04-18 01:04:45', 'SELECT FU_NEW_PRESENTACION(''4900'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(149, 'PMIRANDA', '2020-04-20 00:14:59', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL),
(150, 'pmiranda', '2020-04-20 00:17:44', 'SELECT FU_NEW_PRESENTACION(''2578'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(151, 'pmiranda', '2020-04-20 00:18:17', 'SELECT FU_NEW_PRESENTACION(''478966'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(152, 'pmiranda', '2020-04-20 00:19:22', 'SELECT FU_NEW_PRESENTACION(''55'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(153, 'pmiranda', '2020-04-20 00:20:12', 'SELECT FU_NEW_PRESENTACION(''55'', ''SOL'', ''pmiranda'') as response', 'dosis_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(154, 'pmiranda', '2020-04-20 13:14:34', 'SELECT FU_NEW_CANAL(''canal prueba'', ''SOL'', '''', '''', '''', '''', '''', ''pmiranda'') as response', 'canal_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(155, 'pmiranda', '2020-04-20 13:14:43', 'SELECT FU_NEW_CANAL(''canal prueba 2'', ''SOL'', '''', '''', '''', '''', '''', ''pmiranda'') as response', 'canal_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(156, 'pmiranda', '2020-04-20 13:18:08', 'SELECT FU_NEW_CANAL(''prueba canal'', ''SOL'', '''', '''', '''', '''', '''', ''pmiranda'', ''Activo'') as response', 'canal_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(157, 'pmiranda', '2020-04-20 13:19:14', 'SELECT FU_NEW_CANAL(''prueba canal 2'', ''SOL'', '''', '''', '''', '''', '''', ''pmiranda'', ''Activo'') as response', 'canal_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(158, 'pmiranda', '2020-04-20 13:21:57', 'SELECT FU_UP_CANAL(''prueba canal 2'', ''SOL'', ''direccion de canal'', '''', '''', '''', '''', ''Activo'', ''pmiranda'', ''131'') as response', 'canal_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(159, 'pmiranda', '2020-04-20 13:23:15', 'SELECT FU_UP_CANAL(''prueba canal 2'', ''SOL'', ''direccion de canal'', ''mail@mail.com'', '''', '''', '''', ''Activo'', ''pmiranda'', ''131'') as response', 'canal_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(160, 'pmiranda', '2020-04-20 14:03:41', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(161, 'pmiranda', '2020-04-20 14:21:08', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(162, 'pmiranda', '2020-04-20 14:21:37', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(163, 'pmiranda', '2020-04-20 14:22:47', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(164, 'pmiranda', '2020-04-20 14:23:14', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(165, 'pmiranda', '2020-04-20 14:24:05', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(166, 'pmiranda', '2020-04-20 14:24:48', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(167, 'pmiranda', '2020-04-20 14:25:19', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(168, 'pmiranda', '2020-04-20 14:27:09', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(169, 'pmiranda', '2020-04-20 14:27:59', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(170, 'pmiranda', '2020-04-20 14:28:23', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(171, 'pmiranda', '2020-04-20 14:30:10', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(172, 'pmiranda', '2020-04-20 14:30:59', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(173, 'pmiranda', '2020-04-20 14:32:31', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-01'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(174, 'pmiranda', '2020-04-20 15:10:17', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-01'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(175, 'pmiranda', '2020-04-20 15:10:28', 'CALL ST_CONTROL_RECETA_VENTA(''2020-03-01'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(176, 'pmiranda', '2020-04-20 15:11:50', 'CALL ST_CONTROL_RECETA_VENTA(''2020-03-01'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(177, 'pmiranda', '2020-04-20 15:12:21', 'CALL ST_CONTROL_RECETA_VENTA(''2020-03-01'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(178, 'pmiranda', '2020-04-20 15:12:51', 'CALL ST_CONTROL_RECETA_VENTA(''2020-03-01'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(179, 'pmiranda', '2020-04-20 15:13:06', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-04'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(180, 'pmiranda', '2020-04-20 15:13:17', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-01'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(181, 'pmiranda', '2020-04-20 15:13:42', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-20'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(182, 'pmiranda', '2020-04-20 15:13:50', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-20'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(183, 'pmiranda', '2020-04-20 15:13:51', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-20'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(184, 'pmiranda', '2020-04-20 15:14:04', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-20'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(185, 'pmiranda', '2020-04-20 15:14:29', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-20'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(186, 'pmiranda', '2020-04-20 15:14:42', 'CALL ST_CONTROL_RECETA_VENTA(''2020-04-01'', ''2'')', 'check_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(187, 'pmiranda', '2020-04-20 15:26:35', 'CALL `ST_GUARDAR_MEDICO_DOCS`(''1'', ''6'', ''capacitacion_1_2020-04-01_test.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_medico', NULL, NULL, NULL, NULL, NULL, NULL),
(188, 'pmiranda', '2020-04-20 15:39:21', 'CALL `ST_GUARDAR_MEDICO_DOCS`(''1'', ''6'', ''capacitacion_1_2020-04-02_test.jpg'', ''pmiranda'', ''2020-04-02'')', 'save_doc_medico', NULL, NULL, NULL, NULL, NULL, NULL),
(189, 'pmiranda', '2020-04-20 15:40:07', 'CALL `ST_GUARDAR_MEDICO_DOCS`(''16'', ''6'', ''capacitacion_16_2020-04-01_test.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_medico', NULL, NULL, NULL, NULL, NULL, NULL),
(190, 'pmiranda', '2020-04-20 19:58:23', 'CALL ST_NEW_APM(''Activo'', ''pmiranda'', ''pmiranda'', ''pmiranda@raffo.com.ar'', ''Miranda, Pablo'')', 'apm_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(191, 'pmiranda', '2020-04-20 19:58:52', 'CALL ST_NEW_APM(''Activo'', ''pmiranda'', ''pmiranda'', ''pmiranda@raffo.com.ar'', ''Miranda, Pablo'')', 'apm_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(192, 'pmiranda', '2020-04-20 19:59:18', 'CALL ST_NEW_APM(''Activo'', ''pmiranda'', ''pmiranda'', ''pmiranda@raffo.com.ar'', ''Miranda, Pablo'')', 'apm_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(193, 'pmiranda', '2020-04-20 20:16:30', 'SELECT FU_UP_APM(''11'', ''Inactivo'', ''pmiranda'') as response', 'apm_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(194, 'pmiranda', '2020-04-20 20:17:41', 'SELECT FU_UP_APM(''11'', ''Activo'', ''pmiranda'') as response', 'apm_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(195, 'pmiranda', '2020-04-20 20:17:47', 'SELECT FU_UP_APM(''11'', ''Inactivo'', ''pmiranda'') as response', 'apm_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(196, 'pmiranda', '2020-04-20 20:18:01', 'UPDATE apm SET estado_id = 17 WHERE id = 11', 'apms_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(197, 'pmiranda', '2020-04-20 20:18:08', 'UPDATE apm SET estado_id = 18 WHERE id = 11', 'apms_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(198, 'pmiranda', '2020-04-20 20:24:35', 'CALL ST_NEW_APM(''Activo'', ''pmiranda'', ''dcilveti'', ''dcilveti@raffo.com.ar'', ''Cilveti, Diego'')', 'apm_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(199, 'pmiranda', '2020-04-20 21:07:48', 'CALL ST_NEW_APM(''Activo'', ''pmiranda'', ''mcarretero'', ''mcarretero@raffo.com.ar'', ''Carretero, Monica'')', 'apm_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(200, 'pmiranda', '2020-04-20 21:08:14', 'UPDATE apm SET estado_id = 18 WHERE id = 13', 'apms_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(201, 'pmiranda', '2020-04-21 10:24:14', 'prueba canal 3', 'Canal', NULL, 'Canales', 131, NULL, NULL, NULL),
(202, 'pmiranda', '2020-04-21 10:25:00', 'Activo', 'Estado', NULL, 'Canales', 131, NULL, NULL, NULL),
(205, 'pmiranda', '2020-04-21 10:28:22', 'Activo->Activo', 'Estado', NULL, 'Canales', 131, NULL, NULL, NULL),
(206, 'pmiranda', '2020-04-21 13:32:14', 'CALL `ST_GUARDAR_VENTA`(''1'',\r\n     ''1'', \r\n     ''1'', \r\n     ''8'', \r\n     ''2'', \r\n     ''1302'', \r\n     ''131'', \r\n     ''pmiranda'')', 'ajx.guarda_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(207, 'pmiranda', '2020-04-21 13:32:14', 'CALL `ST_GUARDAR_VENTA_DOCUMENTACION`(''45'', ''3'', ''receta_1_2020-04-01_test.jpg'', ''pmiranda'', ''2020-04-01'')', 'save_doc_receta', NULL, NULL, NULL, NULL, NULL, NULL),
(208, 'pmiranda', '2020-04-21 14:16:54', 'CALL `ST_MODIFICAR_VENTA`(''45'',\r\n     ''1'', \r\n     ''1'', \r\n     ''8'', \r\n     ''2'', \r\n     ''1302'', \r\n     ''131'', \r\n     ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(209, 'pmiranda', '2020-04-21 14:19:25', 'CALL ST_CANCELAR_VENTA(45, ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(210, 'pmiranda', '2020-04-21 14:20:10', 'CALL ST_CANCELAR_VENTA(45, ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(211, 'pmiranda', '2020-04-21 14:20:58', 'CALL ST_CANCELAR_VENTA(45, ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(212, 'pmiranda', '2020-04-21 14:21:21', 'CALL ST_CANCELAR_VENTA(45, ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(213, 'pmiranda', '2020-04-21 14:22:43', 'CALL ST_CANCELAR_VENTA(45, ''pmiranda'')', 'ajx.modificar_venta.php', NULL, NULL, NULL, NULL, NULL, NULL),
(214, 'pmiranda', '2020-04-21 23:11:40', 'CALL ST_UP_MEDICO(1, 20, ''Medico_apellidosss'', ''Medico_nombre'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'', ''Se inactiva el médico cón tódós'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(215, 'pmiranda', '2020-04-21 23:20:18', 'CALL ST_UP_MEDICO(1, 19, ''Medico_nombre'', ''Medico_apellidosss'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'', ''Se activa nuevamente el médico'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(216, 'pmiranda', '2020-04-21 23:24:35', 'CALL ST_UP_MEDICO(1, 20, ''Medico_apellidosss'', ''Medico_nombre'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'', ''se da de baja el médico'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(217, 'pmiranda', '2020-04-21 23:29:22', 'CALL ST_UP_MEDICO(1, 19, ''Medico_nombre'', ''Medico_apellidosss'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'', ''se habilita el medico'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(218, 'pmiranda', '2020-04-21 23:31:57', 'CALL ST_UP_MEDICO(1, 20, ''Medico_apellidosss'', ''Medico_nombre'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'', ''Se deshabilita el medico'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(219, 'pmiranda', '2020-04-21 23:32:19', 'CALL ST_UP_MEDICO(1, 19, ''Medico_nombre'', ''Medico_apellidosss'',\r\n     24, ''123123123'', ''HOSPITAL'', '''', '''', '''', '''', '''', 9, ''mail@ail.com'', ''pmiranda'', ''Se activa nuevamente el medico'')', 'medico_form.php', NULL, NULL, NULL, NULL, NULL, NULL),
(220, 'PMIRANDA', '2020-04-22 00:46:59', 'Intento Fallido de Login', NULL, 'Desde el Equipo: ::1 - ERROR: Verifique el usuario y la contraseña introducidos', NULL, NULL, NULL, NULL, NULL);

-- 
-- Dumping data for table soliris_documentacion
--
-- Table soliris.soliris_documentacion does not contain any data (it is empty)

-- 
-- Dumping data for table soliris_consultas
--
-- Table soliris.soliris_consultas does not contain any data (it is empty)

-- 
-- Dumping data for table rel_venta_documentos
--
INSERT INTO rel_venta_documentos VALUES
(1, 6, 7, '2020-04-13 15:59:51'),
(2, 6, 8, '2020-04-14 15:38:40'),
(3, 6, 9, '2020-04-14 15:46:11'),
(4, 6, 10, '2020-04-14 15:51:39'),
(5, 7, 14, '2020-04-15 21:49:23'),
(6, 8, 15, '2020-04-15 21:51:38'),
(7, 9, 16, '2020-04-15 21:52:20'),
(8, 10, 26, '2020-04-15 22:29:06'),
(9, 11, 27, '2020-04-15 22:29:28'),
(10, 12, 28, '2020-04-15 22:29:51'),
(11, 13, 30, '2020-04-15 22:31:00'),
(12, 45, 47, '2020-04-21 13:32:14');

-- 
-- Dumping data for table rel_seguridad_rol
--
INSERT INTO rel_seguridad_rol VALUES
(1, 70, 1, '2020-02-07 14:52:25'),
(2, 71, 1, '2020-02-07 14:52:25'),
(3, 72, 1, '2020-02-07 14:52:25'),
(4, 73, 1, '2020-02-07 14:52:25'),
(5, 74, 1, '2020-02-07 14:52:25'),
(6, 75, 1, '2020-02-07 14:52:25'),
(7, 76, 1, '2020-02-07 14:52:25'),
(8, 77, 1, '2020-02-07 14:52:25'),
(9, 78, 1, '2020-02-07 14:52:25'),
(10, 79, 1, '2020-02-07 14:52:25'),
(11, 80, 1, '2020-02-07 14:52:25'),
(12, 81, 1, '2020-02-07 14:52:25'),
(13, 82, 1, '2020-02-07 14:52:25'),
(14, 83, 1, '2020-02-07 14:52:25'),
(15, 84, 1, '2020-02-07 14:52:25'),
(16, 85, 1, '2020-02-07 14:52:25'),
(17, 86, 1, '2020-02-07 14:52:25'),
(18, 87, 1, '2020-02-07 14:52:25'),
(19, 88, 1, '2020-02-07 14:52:25'),
(20, 89, 1, '2020-02-07 14:52:25'),
(21, 90, 1, '2020-02-07 14:52:25'),
(22, 91, 1, '2020-02-07 14:52:25'),
(23, 92, 1, '2020-02-07 14:52:25'),
(24, 93, 1, '2020-02-07 14:52:25'),
(25, 94, 1, '2020-02-07 14:52:25'),
(26, 95, 1, '2020-02-07 14:52:25'),
(27, 96, 1, '2020-02-07 14:52:25'),
(28, 97, 1, '2020-02-07 14:52:25'),
(29, 98, 1, '2020-02-07 14:52:25'),
(30, 99, 1, '2020-02-07 14:52:25'),
(31, 100, 1, '2020-02-07 14:52:25'),
(32, 101, 1, '2020-02-07 14:52:25'),
(33, 102, 1, '2020-02-07 14:52:25'),
(34, 103, 1, '2020-02-07 14:52:25'),
(35, 104, 1, '2020-02-07 14:52:25'),
(36, 105, 1, '2020-02-10 11:56:39'),
(37, 106, 1, '2020-02-07 14:52:25'),
(38, 107, 1, '2020-02-07 14:52:25'),
(39, 108, 1, '2020-02-07 14:52:25'),
(40, 109, 1, '2020-02-07 14:52:25'),
(41, 110, 1, '2020-02-07 14:52:25'),
(42, 111, 1, '2020-02-07 14:52:25'),
(43, 112, 1, '2020-02-07 14:52:25'),
(44, 113, 1, '2020-02-07 14:52:25'),
(45, 114, 1, '2020-02-07 14:52:25'),
(46, 115, 1, '2020-02-07 14:52:25'),
(47, 116, 1, '2020-02-07 14:52:25'),
(48, 117, 1, '2020-02-07 14:52:25'),
(49, 118, 1, '2020-02-07 14:52:25'),
(50, 119, 1, '2020-02-07 14:52:25'),
(51, 120, 1, '2020-02-07 14:52:25'),
(52, 121, 1, '2020-02-07 14:52:25'),
(53, 123, 1, '2020-02-07 14:52:25'),
(54, 124, 1, '2020-02-07 14:52:25'),
(64, 70, 2, '2020-02-07 14:52:38'),
(65, 71, 2, '2020-02-07 14:52:38'),
(66, 72, 2, '2020-02-07 14:52:38'),
(67, 73, 2, '2020-02-07 14:52:38'),
(68, 74, 2, '2020-02-07 14:52:38'),
(69, 75, 2, '2020-02-07 14:52:38'),
(70, 76, 2, '2020-02-07 14:52:38'),
(71, 77, 2, '2020-02-07 14:52:38'),
(72, 78, 2, '2020-02-07 14:52:38'),
(73, 79, 2, '2020-02-07 14:52:38'),
(74, 83, 2, '2020-02-07 14:52:38'),
(75, 84, 2, '2020-02-07 14:52:38'),
(76, 85, 2, '2020-02-07 14:52:38'),
(77, 86, 2, '2020-02-07 14:52:38'),
(78, 87, 2, '2020-02-07 14:52:38'),
(79, 88, 2, '2020-02-07 14:52:38'),
(80, 89, 2, '2020-02-07 14:52:38'),
(81, 90, 2, '2020-02-07 14:52:38'),
(82, 91, 2, '2020-02-07 14:52:38'),
(83, 92, 2, '2020-02-07 14:52:38'),
(84, 93, 2, '2020-02-07 14:52:38'),
(85, 94, 2, '2020-02-07 14:52:38'),
(86, 95, 2, '2020-02-07 14:52:38'),
(87, 96, 2, '2020-02-07 14:52:38'),
(88, 97, 2, '2020-02-07 14:52:38'),
(89, 98, 2, '2020-02-07 14:52:38'),
(90, 99, 2, '2020-02-07 14:52:38'),
(91, 100, 2, '2020-02-07 14:52:38'),
(92, 101, 2, '2020-02-07 14:52:38'),
(93, 102, 2, '2020-02-07 14:52:38'),
(94, 103, 2, '2020-02-07 14:52:38'),
(95, 104, 2, '2020-02-07 14:52:38'),
(96, 105, 2, '2020-02-07 14:52:38'),
(97, 106, 2, '2020-02-07 14:52:38'),
(98, 108, 2, '2020-02-07 14:52:38'),
(99, 109, 2, '2020-02-07 14:52:38'),
(100, 110, 2, '2020-02-07 14:52:38'),
(101, 111, 2, '2020-02-07 14:52:38'),
(102, 112, 2, '2020-02-07 14:52:38'),
(103, 113, 2, '2020-02-07 14:52:38'),
(104, 114, 2, '2020-02-07 14:52:38'),
(105, 115, 2, '2020-02-07 14:52:38'),
(106, 116, 2, '2020-02-07 14:52:38'),
(107, 117, 2, '2020-02-07 14:52:38'),
(108, 118, 2, '2020-02-07 14:52:38'),
(109, 119, 2, '2020-02-07 14:52:38'),
(110, 120, 2, '2020-02-07 14:52:38'),
(111, 121, 2, '2020-02-07 14:52:38'),
(112, 123, 2, '2020-02-07 14:52:38'),
(113, 124, 2, '2020-02-07 14:52:38'),
(127, 70, 3, '2020-02-07 14:52:50'),
(128, 72, 3, '2020-02-07 14:52:50'),
(129, 74, 3, '2020-02-07 14:52:50'),
(130, 75, 3, '2020-02-07 14:52:50'),
(131, 77, 3, '2020-02-07 14:52:50'),
(132, 78, 3, '2020-02-07 14:52:50'),
(133, 79, 3, '2020-02-07 14:52:50'),
(134, 82, 3, '2020-02-07 14:52:50'),
(135, 83, 3, '2020-02-07 14:52:50'),
(136, 84, 3, '2020-02-07 14:52:50'),
(137, 90, 3, '2020-02-07 14:52:50'),
(138, 91, 3, '2020-02-07 14:52:50'),
(139, 92, 3, '2020-02-07 14:52:50'),
(140, 93, 3, '2020-02-07 14:52:50'),
(141, 95, 3, '2020-02-07 14:52:50'),
(142, 96, 3, '2020-02-07 14:52:50'),
(143, 97, 3, '2020-02-07 14:52:50'),
(144, 98, 3, '2020-02-07 14:52:50'),
(145, 99, 3, '2020-02-07 14:52:50'),
(146, 100, 3, '2020-02-07 14:52:50'),
(147, 101, 3, '2020-02-07 14:52:50'),
(148, 103, 3, '2020-02-07 14:52:50'),
(149, 104, 3, '2020-02-07 14:52:50'),
(150, 105, 3, '2020-02-07 14:52:50'),
(151, 109, 3, '2020-02-07 14:52:50'),
(152, 111, 3, '2020-02-07 14:52:50'),
(153, 114, 3, '2020-02-07 14:52:50'),
(154, 115, 3, '2020-02-07 14:52:50'),
(155, 118, 3, '2020-02-07 14:52:50'),
(156, 119, 3, '2020-02-07 14:52:50'),
(157, 120, 3, '2020-02-07 14:52:50'),
(158, 124, 3, '2020-02-07 14:52:50'),
(190, 70, 4, '2020-02-07 14:52:59'),
(191, 76, 4, '2020-02-07 14:52:59'),
(192, 77, 4, '2020-02-07 14:52:59'),
(193, 79, 4, '2020-02-07 14:52:59'),
(194, 83, 4, '2020-02-07 14:52:59'),
(195, 89, 4, '2020-02-07 14:52:59'),
(196, 98, 4, '2020-02-07 14:52:59'),
(197, 100, 4, '2020-02-07 14:52:59'),
(198, 103, 4, '2020-02-07 14:52:59'),
(199, 104, 4, '2020-02-07 14:52:59'),
(200, 105, 4, '2020-02-07 14:52:59'),
(201, 107, 4, '2020-02-07 14:52:59'),
(202, 108, 4, '2020-02-07 14:52:59'),
(203, 109, 4, '2020-02-07 14:52:59'),
(204, 124, 4, '2020-02-07 14:52:59'),
(205, 70, 6, '2020-02-07 14:53:11'),
(206, 72, 6, '2020-02-07 14:53:11'),
(207, 77, 6, '2020-02-07 14:53:11'),
(208, 79, 6, '2020-02-07 14:53:11'),
(209, 80, 6, '2020-02-07 14:53:11'),
(210, 82, 6, '2020-02-07 14:53:11'),
(211, 84, 6, '2020-02-07 14:53:11'),
(212, 89, 6, '2020-02-07 14:53:11'),
(213, 90, 6, '2020-02-07 14:53:11'),
(214, 91, 6, '2020-02-07 14:53:11'),
(215, 92, 6, '2020-02-07 14:53:11'),
(216, 93, 6, '2020-02-07 14:53:11'),
(217, 94, 6, '2020-02-07 14:53:11'),
(218, 95, 6, '2020-02-07 14:53:11'),
(219, 96, 6, '2020-02-07 14:53:11'),
(220, 97, 6, '2020-02-07 14:53:11'),
(221, 98, 6, '2020-02-07 14:53:11'),
(222, 99, 6, '2020-02-07 14:53:11'),
(223, 101, 6, '2020-02-07 14:53:11'),
(224, 103, 6, '2020-02-07 14:53:11'),
(225, 104, 6, '2020-02-07 14:53:11'),
(226, 105, 6, '2020-02-07 14:53:11'),
(227, 109, 6, '2020-02-07 14:53:11'),
(228, 111, 6, '2020-02-07 14:53:11'),
(229, 114, 6, '2020-02-07 14:53:11'),
(230, 115, 6, '2020-02-07 14:53:11'),
(231, 118, 6, '2020-02-07 14:53:11'),
(232, 119, 6, '2020-02-07 14:53:11'),
(233, 120, 6, '2020-02-07 14:53:11'),
(234, 124, 6, '2020-02-07 14:53:11'),
(235, 125, 4, '2020-03-26 00:36:40'),
(236, 126, 4, '2020-03-27 10:39:44'),
(237, 127, 4, '2020-03-31 02:49:12'),
(238, 128, 1, '2020-04-01 00:06:36'),
(239, 128, 4, '2020-04-01 00:06:36'),
(240, 128, 2, '2020-04-01 00:06:36'),
(241, 123, 4, '2020-04-22 00:51:49'),
(242, 123, 5, '2020-04-22 00:52:04');

-- 
-- Dumping data for table rel_patologia_sub_patologia
--
INSERT INTO rel_patologia_sub_patologia VALUES
(1, 21, 1),
(2, 21, 2),
(3, 21, 3);

-- 
-- Dumping data for table rel_paciente_documentos
--
INSERT INTO rel_paciente_documentos VALUES
(1, 1, 1, '2020-04-13 15:32:13'),
(2, 1, 2, '2020-04-13 15:32:13'),
(3, 1, 3, '2020-04-13 15:33:29'),
(4, 1, 4, '2020-04-13 15:33:29'),
(5, 2, 6, '2020-04-13 15:57:09'),
(6, 3, 17, '2020-04-15 22:24:10'),
(7, 4, 18, '2020-04-15 22:24:16'),
(8, 5, 19, '2020-04-15 22:24:24'),
(9, 6, 20, '2020-04-15 22:24:32'),
(10, 7, 21, '2020-04-15 22:24:39'),
(11, 8, 22, '2020-04-15 22:24:45'),
(12, 9, 23, '2020-04-15 22:24:54'),
(13, 10, 24, '2020-04-15 22:25:00'),
(14, 11, 25, '2020-04-15 22:25:05');

-- 
-- Dumping data for table rel_medico_especialidad
--
INSERT INTO rel_medico_especialidad VALUES
(2, 2, 2),
(3, 3, 1),
(4, 3, 2),
(5, 4, 1),
(6, 4, 2),
(7, 5, 1),
(8, 5, 2),
(9, 6, 1),
(10, 6, 2),
(11, 8, 1),
(12, 8, 2),
(40, 15, 1),
(41, 15, 2),
(42, 16, 1),
(43, 16, 2),
(49, 1, 2);

-- 
-- Dumping data for table rel_medico_documentos
--
INSERT INTO rel_medico_documentos VALUES
(1, 1, 5, '2020-04-13 15:46:58', 16),
(2, 2, 11, '2020-04-15 15:26:28', 15),
(3, 3, 12, '2020-04-15 16:32:30', 15),
(4, 4, 13, '2020-04-15 16:33:04', 15),
(5, 16, 31, '2020-04-16 20:16:53', 16),
(6, 1, 32, '2020-04-20 15:26:35', 16),
(7, 1, 33, '2020-04-20 15:27:37', 16),
(8, 1, 34, '2020-04-20 15:28:11', 16),
(9, 1, 35, '2020-04-20 15:29:00', 16),
(10, 1, 36, '2020-04-20 15:30:45', 16),
(11, 1, 37, '2020-04-20 15:31:04', 16),
(12, 1, 38, '2020-04-20 15:34:00', 16),
(13, 1, 39, '2020-04-20 15:36:14', 16),
(14, 1, 40, '2020-04-20 15:36:32', 16),
(15, 1, 41, '2020-04-20 15:36:45', 16),
(16, 1, 42, '2020-04-20 15:37:28', 16),
(17, 1, 43, '2020-04-20 15:38:10', 16),
(18, 1, 44, '2020-04-20 15:38:21', 16),
(19, 1, 45, '2020-04-20 15:39:21', 15),
(20, 16, 46, '2020-04-20 15:40:07', 15);

-- 
-- Dumping data for table rel_mail_rol
--
INSERT INTO rel_mail_rol VALUES
(1, 1, 1, 0),
(3, 2, 1, 0),
(4, 2, 2, 0);

-- 
-- Dumping data for table mail_configuracion
--
INSERT INTO mail_configuracion VALUES
(1, 'Alta de Venta', 1, '1'),
(2, 'Cancelacion Paciente', 1, '0');

-- 
-- Dumping data for table maestro_ventas_transaccion
--
INSERT INTO maestro_ventas_transaccion VALUES
(1, 22, 50, 45, 2, '2020-04-21 13:32:14');

-- 
-- Dumping data for table maestro_ventas_lockeo
--
INSERT INTO maestro_ventas_lockeo VALUES
(4, 6, 50, '2020-04-14 16:39:28');

-- 
-- Dumping data for table log_accesos
--
-- Table soliris.log_accesos does not contain any data (it is empty)

-- 
-- Dumping data for table localidades
--
-- Table soliris.localidades does not contain any data (it is empty)

-- 
-- Dumping data for table hist_paciente
--
-- Table soliris.hist_paciente does not contain any data (it is empty)

-- 
-- Dumping data for table documentos_error
--
-- Table soliris.documentos_error does not contain any data (it is empty)

-- 
-- Dumping data for table cp
--
INSERT INTO cp VALUES
(1, 62039, 'Alba del Sur', 21),
(2, 39243, 'Victoria del Sur', 6),
(3, 2943, 'Villa Valery', 7),
(4, 99553, 'Ayala del Oeste', 20),
(5, 5674, 'Gral. Michelle', 6),
(6, 82144, 'Gral. Valery del Mar', 7),
(7, 2956, 'Villa Gabriela del Este', 1),
(8, 5373, 'Chavarría del Mar', 5),
(9, 65072, 'Jesús del Norte', 22),
(10, 5721, 'Abeyta del Mar', 9),
(11, 87838, 'San Juana del Este', 18),
(12, 2094, 'San Eduardo del Sur', 5),
(13, 17941, 'Don Guadalupe', 9),
(14, 2930, 'Gral. Emilio', 5),
(15, 3106, 'San Abril', 8),
(16, 1052, 'Rebeca del Mar', 14),
(17, 7497, 'Martín del Este', 17),
(18, 7099, 'Leiva del Norte', 12),
(19, 7951, 'Lorenzo del Oeste', 6),
(20, 48278, 'Puerto Mariana', 9),
(21, 2304, 'Villa Abril del Este', 13),
(22, 72048, 'San Alonso del Oeste', 23),
(23, 45101, 'Guadalupe del Sur', 8),
(24, 8107, 'Llamas del Mirador', 8),
(25, 574, 'Don Andrés del Oeste', 20),
(26, 48498, 'San Daniela del Este', 11),
(27, 58088, 'Gral. Ian', 22),
(28, 2081, 'Villa Mateo del Mar', 12),
(29, 993, 'Longoria del Este', 16),
(30, 8871, 'Sergio del Sur', 8),
(31, 3564, 'Montez del Mirador', 6),
(32, 74573, 'Puerto Alejandro', 20),
(33, 428, 'Puerto Leonardo del Sur', 14),
(34, 17639, 'Gral. Agustín del Oeste', 1),
(35, 6683, 'Esquivel del Mar', 10),
(36, 15433, 'Rascón del Mirador', 8),
(37, 7544, 'Santiago del Mar', 19),
(38, 10820, 'Valentina del Oeste', 22),
(39, 6468, 'Gral. Matthew', 21),
(40, 6223, 'Nicole del Este', 10),
(41, 5273, 'San Nicole', 6),
(42, 1240, 'Hugo del Mar', 6),
(43, 7192, 'Gálvez del Mar', 15),
(44, 840, 'Nicole del Oeste', 7),
(45, 7247, 'Hipólito del Mar', 22),
(46, 3126, 'Emily del Norte', 19),
(47, 52176, 'Vaca del Mar', 19),
(48, 7447, 'Gabriela del Sur', 1),
(49, 53325, 'Puerto Emiliano del Este', 17),
(50, 67705, 'Don Antonia', 19),
(51, 59676, 'Villa Micaela', 20),
(52, 4035, 'Paula del Este', 6),
(53, 57406, 'Urrutia del Sur', 1),
(54, 58582, 'Puerto María Camila', 10),
(55, 7819, 'Alexander del Mar', 2),
(56, 5461, 'Puerto Damián del Oeste', 9),
(57, 85707, 'Miguel del Este', 7),
(58, 5294, 'Don Lola', 10),
(59, 8136, 'Puerto Juliana', 12),
(60, 99820, 'Salinas del Oeste', 9),
(61, 3672, 'Ignacio del Mar', 23),
(62, 12932, 'Puerto Jacobo', 20),
(63, 68808, 'Paulina del Mirador', 12),
(64, 64677, 'Villa Christian', 2),
(65, 62609, 'Ríos del Mirador', 11),
(66, 9480, 'Gral. Esteban del Este', 10),
(67, 86013, 'Hipólito del Oeste', 7),
(68, 4636, 'Damián del Norte', 6),
(69, 33508, 'San Martina', 19),
(70, 20624, 'Altamirano del Mar', 5),
(71, 8709, 'María Camila del Mar', 23),
(72, 1399, 'Villa Emily', 11),
(73, 96317, 'Gral. Ana', 7),
(74, 39634, 'Adriana del Sur', 17),
(75, 44303, 'Villa Daniela', 17),
(76, 41315, 'Don Fabiana del Este', 20),
(77, 24963, 'Arguello del Mirador', 12),
(78, 32907, 'Gabriela del Mar', 2),
(79, 3140, 'Puerto María Camila', 23),
(80, 7330, 'Leal del Oeste', 8),
(81, 447, 'Rafael del Este', 16),
(82, 4351, 'Villa Lola del Oeste', 2),
(83, 3164, 'Delatorre del Este', 16),
(84, 6398, 'Don Samuel', 14),
(85, 3595, 'Puerto Benjamín', 9),
(86, 5638, 'Puerto Ignacio del Este', 20),
(87, 9247, 'Romero del Sur', 22),
(88, 11152, 'Villa Magdalena del Sur', 21),
(89, 8142, 'Villa Alonso del Sur', 23),
(90, 2161, 'Villa Lorenzo', 7),
(91, 1020, 'Camila del Oeste', 4),
(92, 3192, 'Rosado del Sur', 11),
(93, 27592, 'Bianca del Norte', 21),
(94, 1152, 'Villa Nahuel del Mirador', 23),
(95, 9606, 'Gral. Sara', 18),
(96, 955, 'San Emilio', 3),
(97, 66353, 'Padrón del Mirador', 6),
(98, 76350, 'Julia del Mar', 9),
(99, 89037, 'Villa Isabella', 15),
(100, 60588, 'Quintero del Este', 22),
(101, 9541, 'Gral. Mía del Mirador', 22),
(102, 1369, 'Jerónimo del Sur', 3),
(103, 8561, 'Berríos del Norte', 12),
(104, 30559, 'Don Alejandra', 23),
(105, 67442, 'Don Camila', 20),
(106, 9377, 'Villa Luciana', 20),
(107, 5125, 'Rodrigo del Mar', 3),
(108, 4114, 'San Facundo del Mar', 9),
(109, 47314, 'Violeta del Este', 9),
(110, 3461, 'Espinal del Norte', 9),
(111, 2600, 'Adriana del Mirador', 5),
(112, 72440, 'Carla del Este', 5),
(113, 3364, 'Don Silvana del Mirador', 1),
(114, 11505, 'Gral. Romina del Mirador', 11),
(115, 88829, 'Cano del Oeste', 10),
(116, 87725, 'Aponte del Mirador', 14),
(117, 2436, 'Villa Andrés', 17),
(118, 35143, 'Gómez del Este', 13),
(119, 62064, 'Villa Gabriela', 3),
(120, 45862, 'Saldaña del Sur', 23),
(121, 7874, 'Espinosa del Mar', 11),
(122, 4007, 'Alonso del Sur', 10),
(123, 37882, 'San Ashley del Norte', 3),
(124, 4118, 'Villa Camilo', 1),
(125, 4959, 'Puerto Fátima del Este', 19),
(126, 1966, 'Venegas del Oeste', 17),
(127, 8273, 'Agustina del Oeste', 23),
(128, 60707, 'Olivares del Norte', 16),
(129, 91018, 'Munguía del Sur', 21),
(130, 2861, 'Puerto Alex', 9),
(131, 2545, 'Herrera del Este', 14),
(132, 8160, 'Aguirre del Sur', 17),
(133, 7404, 'Horacio del Mar', 5),
(134, 721, 'Emilio del Sur', 23),
(135, 3708, 'Gral. María Alejandra', 19),
(136, 4357, 'San Ashley del Norte', 4),
(137, 6032, 'Irizarry del Norte', 12),
(138, 1383, 'Acosta del Oeste', 22),
(139, 34254, 'Rodríguez del Norte', 3),
(140, 71803, 'Serna del Norte', 8),
(141, 84783, 'Rivero del Sur', 10),
(142, 86252, 'Carlos del Mar', 18),
(143, 820, 'Don Montserrat', 17),
(144, 278, 'Villa Julieta', 9),
(145, 7716, 'Florencia del Sur', 12),
(146, 447, 'San Valentina', 19),
(147, 27372, 'Villa Juan Diego del Sur', 23),
(148, 2925, 'Montalvo del Oeste', 5),
(149, 5774, 'Ramos del Norte', 9),
(150, 68790, 'Rodarte del Este', 7),
(151, 3258, 'Mota del Mirador', 15),
(152, 76715, 'Felipe del Oeste', 8),
(153, 9489, 'Gral. Vicente del Mirador', 18),
(154, 57224, 'Sauceda del Oeste', 7),
(155, 948, 'Ricardo del Oeste', 7),
(156, 8106, 'Puerto Ivan', 18),
(157, 63010, 'Páez del Norte', 12),
(158, 4423, 'Mateo del Mar', 6),
(159, 57881, 'Gral. María José del Sur', 4),
(160, 44977, 'Don Juan José del Oeste', 3),
(161, 8645, 'Lola del Oeste', 13),
(162, 3405, 'Gral. Micaela del Norte', 10),
(163, 84396, 'Briones del Mirador', 2),
(164, 11183, 'Irene del Sur', 19),
(165, 60666, 'Rodarte del Norte', 16),
(166, 47780, 'Puerto Camilo', 16),
(167, 6770, 'Don Joshua del Mar', 3),
(168, 5381, 'Puerto Camila del Mirador', 14),
(169, 43748, 'San Allison del Este', 19),
(170, 3830, 'Romina del Este', 7),
(171, 20909, 'San Joaquín', 23),
(172, 7221, 'Villa Samuel del Oeste', 1),
(173, 87198, 'Josué del Este', 3),
(174, 2262, 'Adame del Mar', 16),
(175, 9040, 'Juliana del Mirador', 12),
(176, 65086, 'Fátima del Este', 23),
(177, 6992, 'Don Abigail', 3),
(178, 9132, 'Álvarez del Sur', 2),
(179, 45237, 'Fernando del Mirador', 8),
(180, 3350, 'Villa María Camila', 7),
(181, 3559, 'Sergio del Mar', 18),
(182, 90986, 'Rebeca del Oeste', 12),
(183, 8948, 'Gral. Hugo', 3),
(184, 8709, 'Palomino del Este', 8),
(185, 4137, 'Gral. Magdalena del Oeste', 14),
(186, 5539, 'Gómez del Oeste', 9),
(187, 47656, 'Sánchez del Mirador', 12),
(188, 3544, 'Arellano del Mirador', 16),
(189, 55421, 'San Sara Sofía del Sur', 9),
(190, 11482, 'Delarosa del Mirador', 14),
(191, 2752, 'Domínquez del Mirador', 17),
(192, 441, 'Guadalupe del Oeste', 7),
(193, 85666, 'San Agustín del Mirador', 12),
(194, 7517, 'Gral. Gabriel del Norte', 6),
(195, 17984, 'Don Emilio', 5),
(196, 4669, 'Villa Juan Manuel del Sur', 17),
(197, 77848, 'Natalia del Mar', 21),
(198, 35285, 'Don Oliva', 21),
(199, 4875, 'Villa Pedro del Norte', 9),
(200, 9717, 'Don Elizabeth del Mirador', 3),
(201, 7636, 'Aguilera del Sur', 2),
(202, 1947, 'Villa Manuela', 19),
(203, 9348, 'Don Julia', 6),
(204, 10805, 'Don Miguel Ángel', 5),
(205, 544, 'Don Camila del Mar', 7),
(206, 8748, 'Serrato del Mirador', 5),
(207, 90414, 'Pizarro del Sur', 18),
(208, 95273, 'Trejo del Este', 13),
(209, 19457, 'Samantha del Oeste', 13),
(210, 6512, 'Ivan del Este', 23),
(211, 7517, 'Don Ana Paula', 16),
(212, 94200, 'Don Adriana del Norte', 12),
(213, 93142, 'Puerto Emiliano del Sur', 9),
(214, 39273, 'Puerto Mario', 11),
(215, 8599, 'Gral. Cristóbal', 15),
(216, 6106, 'Juan del Sur', 15),
(217, 4722, 'Don Luciana', 15),
(218, 6852, 'Menéndez del Mirador', 17),
(219, 88633, 'Carmona del Este', 19),
(220, 41682, 'Ariadna del Oeste', 13),
(221, 2369, 'Villa Dante', 3),
(222, 4395, 'Villa Ximena', 5),
(223, 26880, 'Alcántar del Mirador', 17),
(224, 6406, 'Tórrez del Este', 16),
(225, 5578, 'Abeyta del Mirador', 12),
(226, 3070, 'Gral. Paula del Mar', 19),
(227, 5291, 'Don Lola del Este', 9),
(228, 88123, 'Hugo del Norte', 22),
(229, 64164, 'Madrid del Sur', 19),
(230, 7761, 'Nava del Norte', 8),
(231, 76081, 'Puerto Juan José del Este', 5),
(232, 8190, 'Gral. Josefina del Norte', 8),
(233, 3951, 'Dante del Oeste', 17),
(234, 4365, 'Amanda del Norte', 5),
(235, 9411, 'Ordóñez del Oeste', 15),
(236, 1300, 'José del Mirador', 9),
(237, 88171, 'Mariangel del Sur', 21),
(238, 4227, 'Don Axel', 2),
(239, 62458, 'Don Felipe del Oeste', 2),
(240, 1320, 'San Juan', 3),
(241, 4458, 'Puerto Rodrigo', 20),
(242, 35635, 'Don Jesús del Oeste', 14),
(243, 98317, 'Gral. Aarón del Sur', 16),
(244, 2583, 'Jacobo del Sur', 21),
(245, 1259, 'Gral. Sofía del Mar', 3),
(246, 92290, 'Gral. Renata del Norte', 2),
(247, 7447, 'Don Adriana del Norte', 23),
(248, 1117, 'San Jorge del Oeste', 22),
(249, 68602, 'Villa María', 11),
(250, 6161, 'Cotto del Norte', 11),
(251, 6936, 'Don Andrés del Este', 20),
(252, 9313, 'Don Abril', 19),
(253, 39855, 'Mota del Oeste', 12),
(254, 2054, 'Don Olivia', 21),
(255, 86373, 'San Aitana', 22),
(256, 1110, 'Bañuelos del Norte', 3),
(257, 841, 'Alonso del Mirador', 2),
(258, 71545, 'Alessandra del Sur', 3),
(259, 5583, 'Arellano del Oeste', 19),
(260, 3887, 'Villalpando del Sur', 1),
(261, 5562, 'Don Zoe del Mar', 22),
(262, 2295, 'Don Isabel del Este', 22),
(263, 96875, 'San Josefa', 16),
(264, 9260, 'Carrero del Este', 7),
(265, 3150, 'Manuela del Norte', 10),
(266, 42355, 'Don Silvana', 7),
(267, 58365, 'Gral. Juan', 5),
(268, 37211, 'Puerto Juana del Sur', 12),
(269, 74927, 'Gral. Clara', 7),
(270, 3099, 'Ivan del Norte', 8),
(271, 6455, 'Puerto Julia', 20),
(272, 2510, 'Puerto Damián del Oeste', 5),
(273, 81366, 'San Fabiana', 23),
(274, 84884, 'Don María Alejandra del Este', 2),
(275, 8943, 'Arteaga del Sur', 18),
(276, 14185, 'Josefina del Mirador', 2),
(277, 3775, 'Gral. Violeta del Oeste', 23),
(278, 2359, 'Don Gael del Norte', 22),
(279, 18022, 'Amanda del Oeste', 13),
(280, 62528, 'Matías del Oeste', 7),
(281, 9033, 'Velázquez del Este', 17),
(282, 21880, 'Gral. Antonia del Mar', 13),
(283, 40910, 'Don Montserrat del Este', 13),
(284, 4709, 'San Pedro', 11),
(285, 48375, 'Padilla del Mirador', 5),
(286, 39637, 'María Fernanda del Mar', 9),
(287, 4191, 'Villa del Sur', 3),
(288, 2730, 'Gral. María del Mar', 3),
(289, 666, 'Bianca del Oeste', 20),
(290, 22785, 'Luna del Norte', 16),
(291, 35603, 'Solorio del Mirador', 22),
(292, 2731, 'Holguín del Norte', 7),
(293, 47464, 'Puerto Alexa', 10),
(294, 6506, 'Delacrúz del Norte', 23),
(295, 56892, 'Don Agustín del Sur', 21),
(296, 2083, 'Josefa del Oeste', 7),
(297, 9244, 'Don Elena', 5),
(298, 14121, 'Lucas del Este', 18),
(299, 76511, 'Catalina del Sur', 5),
(300, 7377, 'Bueno del Mirador', 6),
(301, 1934, 'Santillán del Sur', 21),
(302, 4709, 'Villa José', 6),
(303, 39888, 'Razo del Norte', 15),
(304, 2754, 'Gral. Jerónimo', 9),
(305, 8748, 'Gral. Fernando', 13),
(306, 3121, 'Gral. Zoe del Norte', 20),
(307, 5369, 'Regina del Mirador', 8),
(308, 47460, 'Don Javier', 14),
(309, 32556, 'Don Andrea del Sur', 18),
(310, 95034, 'Villa David', 8),
(311, 9004, 'Vargas del Mar', 6),
(312, 6557, 'Renata del Mirador', 22),
(313, 67929, 'Montez del Mar', 11),
(314, 6115, 'Villa Natalia', 13),
(315, 42188, 'Catalina del Este', 17),
(316, 88288, 'Villa Alonso', 4),
(317, 5517, 'Sara del Norte', 14),
(318, 10690, 'Gral. Manuela del Este', 10),
(319, 39184, 'Ureña del Mirador', 3),
(320, 33018, 'Guzmán del Mar', 21),
(321, 96705, 'Candelaria del Norte', 15),
(322, 8903, 'Don Agustín', 5),
(323, 8772, 'Villagómez del Mar', 12),
(324, 3736, 'Trejo del Norte', 20),
(325, 93346, 'Don Nahuel del Este', 21),
(326, 74216, 'San Samantha', 14),
(327, 6385, 'Quezada del Norte', 20),
(328, 6496, 'Jorge del Mirador', 4),
(329, 1116, 'Lucía del Mirador', 20),
(330, 28394, 'Enríquez del Sur', 5),
(331, 3414, 'San Ariana', 16),
(332, 127, 'Villa Amanda del Oeste', 1),
(333, 7457, 'Don Renata del Oeste', 18),
(334, 9591, 'Villa Bruno', 21),
(335, 1801, 'Gral. Camila', 15),
(336, 399, 'Aarón del Oeste', 6),
(337, 8429, 'Solorio del Mirador', 18),
(338, 2088, 'Páez del Este', 10),
(339, 80269, 'Don Sebastián del Mirador', 1),
(340, 8152, 'San Thiago del Mirador', 20),
(341, 14699, 'Villa Montserrat', 1),
(342, 78155, 'Catalina del Sur', 15),
(343, 5534, 'Sedillo del Oeste', 16),
(344, 2827, 'Silvana del Sur', 13),
(345, 6551, 'Valery del Norte', 16),
(346, 5270, 'Rincón del Mirador', 23),
(347, 49327, 'Villa Paula del Oeste', 9),
(348, 35744, 'Tamayo del Este', 15),
(349, 4005, 'Gabriel del Norte', 6),
(350, 864, 'Gral. Camila del Norte', 22),
(351, 2694, 'Villa Silvana', 13),
(352, 7395, 'Juárez del Oeste', 6),
(353, 6737, 'Villa Matías', 12),
(354, 13185, 'Puerto Emma del Este', 5),
(355, 2610, 'Garrido del Norte', 20),
(356, 16150, 'Puerto Luana del Norte', 22),
(357, 4012, 'Constanza del Oeste', 2),
(358, 77660, 'San Carolina del Mar', 16),
(359, 50, 'San María Paula', 6),
(360, 1965, 'Sophie del Sur', 19),
(361, 23404, 'Don Sofía del Norte', 10),
(362, 86664, 'Julieta del Sur', 14),
(363, 1929, 'Villa Ivanna', 10),
(364, 6005, 'Gral. Amelia', 18),
(365, 59972, 'Gral. Delfina', 5),
(366, 74679, 'Don Francisco', 10),
(367, 35776, 'Daniel del Mirador', 14),
(368, 24986, 'Don Martina del Este', 17),
(369, 36328, 'Puerto Michelle', 18),
(370, 3604, 'Centeno del Mar', 13),
(371, 1828, 'Don Luis del Mar', 23),
(372, 9790, 'Violeta del Norte', 6),
(373, 50085, 'Peña del Oeste', 16),
(374, 9473, 'Gral. Bautista', 15),
(375, 7434, 'San Antonia', 13),
(376, 8972, 'Martina del Este', 14),
(377, 20426, 'Pablo del Mirador', 11),
(378, 2546, 'Don Manuel del Mirador', 18),
(379, 6505, 'Delfina del Mirador', 4),
(380, 6858, 'Allison del Mar', 13),
(381, 31564, 'Gral. Rafael del Este', 14),
(382, 15362, 'Bautista del Mirador', 3),
(383, 4933, 'Gral. Paulina del Norte', 12),
(384, 76872, 'Don Isabel', 5),
(385, 5329, 'Villa Juan Manuel', 18),
(386, 31636, 'Puerto Juan David', 18),
(387, 7939, 'Abreu del Este', 14),
(388, 16684, 'Quintana del Oeste', 19),
(389, 9863, 'San Florencia del Sur', 16),
(390, 473, 'Puerto Sophie', 12),
(391, 6036, 'Lola del Mirador', 1),
(392, 4157, 'Villa Antonia', 1),
(393, 9419, 'Ortega del Norte', 16),
(394, 4614, 'San Joaquín', 3),
(395, 1083, 'Don Agustina del Este', 2),
(396, 4138, 'Don Antonella', 13),
(397, 9734, 'Piña del Este', 22),
(398, 1762, 'Villa Christopher del Mirador', 15),
(399, 1854, 'Don Alan', 8),
(400, 46904, 'Gral. Kevin', 3),
(401, 84965, 'Vargas del Mar', 18),
(402, 73378, 'Antonio del Oeste', 22),
(403, 44650, 'Pichardo del Sur', 1),
(404, 98442, 'Andrés del Norte', 22),
(405, 8786, 'Martina del Norte', 3),
(406, 63456, 'Villa Florencia del Sur', 11),
(407, 2025, 'San Bautista del Oeste', 15),
(408, 38104, 'Chavarría del Mirador', 11),
(409, 9455, 'Gral. Axel del Mirador', 15),
(410, 3666, 'Sánchez del Este', 4),
(411, 42860, 'Villa Mariana del Este', 10),
(412, 2580, 'Ochoa del Mirador', 17),
(413, 5697, 'Gral. Florencia', 13),
(414, 98461, 'Puerto Ariana del Sur', 2),
(415, 7334, 'Gral. Isidora del Mirador', 5),
(416, 23243, 'Villa María Alejandra', 14),
(417, 64466, 'Mía del Este', 23),
(418, 91447, 'Vargas del Mirador', 9),
(419, 76140, 'San Emmanuel del Este', 1),
(420, 5324, 'Anguiano del Norte', 11),
(421, 55805, 'Montserrat del Oeste', 17),
(422, 9540, 'Gral. Christian del Sur', 14),
(423, 4889, 'Gral. Cristóbal del Mar', 22),
(424, 16160, 'Abigail del Mirador', 15),
(425, 18312, 'Juan José del Sur', 2),
(426, 86945, 'Fernández del Este', 10),
(427, 6217, 'Leyva del Mar', 11),
(428, 36681, 'Don Carlos del Este', 3),
(429, 59816, 'Flórez del Mar', 12),
(430, 13537, 'Hidalgo del Mirador', 1),
(431, 588, 'Gral. Luana', 16),
(432, 65, 'Silvana del Este', 5),
(433, 54456, 'Alaniz del Oeste', 23),
(434, 3762, 'Gral. Antonia del Oeste', 19),
(435, 5509, 'Munguía del Mar', 19),
(436, 8944, 'Mondragón del Mirador', 8),
(437, 58411, 'Don Salomé del Este', 7),
(438, 84015, 'Pichardo del Mar', 2),
(439, 33609, 'Alejandro del Mar', 7),
(440, 5911, 'Gral. Regina del Mirador', 23),
(441, 52468, 'Villa Simón del Norte', 19),
(442, 3578, 'Rosales del Este', 3),
(443, 30917, 'San Andrés', 17),
(444, 88017, 'Silvana del Sur', 3),
(445, 10008, 'Sergio del Oeste', 9),
(446, 1693, 'San Daniela del Sur', 9),
(447, 4030, 'Villa Mateo', 5),
(448, 9898, 'Puerto Juan José', 6),
(449, 2267, 'Don Franco', 16),
(450, 3525, 'Arroyo del Mar', 3),
(451, 58541, 'Centeno del Este', 4),
(452, 986, 'Villa Julieta del Oeste', 6),
(453, 5514, 'Puerto Santino del Norte', 12),
(454, 7846, 'Puerto Alejandro', 6),
(455, 59578, 'Micaela del Mirador', 11),
(456, 10129, 'Roldán del Este', 15),
(457, 83526, 'Villa Agustín del Sur', 17),
(458, 46701, 'Gral. Alma del Mar', 13),
(459, 9365, 'Sebastián del Norte', 21),
(460, 121, 'Cabrera del Sur', 23),
(461, 9467, 'Alonso del Oeste', 22),
(462, 26673, 'Sara Sofía del Mar', 21),
(463, 12404, 'Villa Julia del Este', 6),
(464, 9884, 'Diego Alejandro del Mirador', 23),
(465, 37632, 'Tello del Oeste', 20),
(466, 6793, 'Andrés del Este', 16),
(467, 90685, 'Montserrat del Sur', 11),
(468, 28458, 'Javier del Este', 2),
(469, 27199, 'Puerto Oliva del Mar', 3),
(470, 16937, 'Gral. Fátima', 2),
(471, 92600, 'María Paula del Oeste', 22),
(472, 94993, 'Narváez del Norte', 20),
(473, 6528, 'Macías del Este', 20),
(474, 2833, 'Gral. Ana del Norte', 9),
(475, 46042, 'Villarreal del Mar', 20),
(476, 59645, 'Juan David del Oeste', 17),
(477, 41766, 'Santino del Norte', 17),
(478, 7730, 'Gral. Gabriela del Este', 8),
(479, 52241, 'Benítez del Oeste', 15),
(480, 70893, 'San Ornela del Mar', 11),
(481, 40808, 'Ashley del Oeste', 9),
(482, 4435, 'Villa Natalia del Este', 13),
(483, 4002, 'Puerto Fátima', 2),
(484, 7762, 'Gral. Alejandro', 2),
(485, 561, 'Franco del Oeste', 4),
(486, 57401, 'Villa Gabriela', 12),
(487, 93223, 'Don Christian del Este', 13),
(488, 407, 'Gral. Florencia', 3),
(489, 5456, 'Antonio del Mirador', 10),
(490, 7930, 'Puerto Clara del Norte', 10),
(491, 9429, 'Torres del Este', 20),
(492, 52065, 'Don Juana', 18),
(493, 2934, 'Puerto Sebastián', 8),
(494, 195, 'Elena del Mirador', 15),
(495, 5859, 'Pérez del Oeste', 4),
(496, 2801, 'Villa Franco del Sur', 20),
(497, 2009, 'Sara del Mar', 18),
(498, 98038, 'Guajardo del Oeste', 4),
(499, 7245, 'Gral. Alessandra del Este', 12),
(500, 3113, 'Mateo del Sur', 1),
(501, 15540, 'Samuel del Mar', 17),
(502, 3335, 'Romero del Mirador', 22),
(503, 53412, 'Lautaro del Oeste', 10),
(504, 535, 'San Jazmín del Este', 3),
(505, 93438, 'Rodrigo del Este', 13),
(506, 6421, 'Rebeca del Sur', 17),
(507, 952, 'José del Norte', 17),
(508, 202, 'Osorio del Oeste', 20),
(509, 543, 'Jorge del Este', 11),
(510, 9531, 'Puerto Christian', 13),
(511, 94656, 'Juan Manuel del Mirador', 9),
(512, 6599, 'San Hidalgo del Mar', 13),
(513, 2910, 'Don Agustín', 20),
(514, 7471, 'Altamirano del Oeste', 2),
(515, 34540, 'Elizabeth del Oeste', 15),
(516, 5598, 'Montalvo del Mirador', 17),
(517, 7329, 'Cervántez del Este', 5),
(518, 80039, 'Constanza del Este', 22),
(519, 8934, 'Valdés del Sur', 17),
(520, 9561, 'Villa Damián del Oeste', 1),
(521, 30201, 'Villa Anthony del Sur', 16),
(522, 1131, 'Jazmín del Norte', 22),
(523, 82510, 'San Ximena', 12),
(524, 92909, 'Camacho del Oeste', 17),
(525, 96087, 'Julieta del Mirador', 2),
(526, 4934, 'Madera del Este', 15),
(527, 7728, 'Matías del Norte', 17),
(528, 62, 'Paula del Sur', 18),
(529, 21242, 'Don Emily del Mar', 20),
(530, 32212, 'Oquendo del Oeste', 20),
(531, 9029, 'Gral. Mía del Sur', 2),
(532, 5168, 'Don María Paula del Este', 19),
(533, 1661, 'Chapa del Mar', 12),
(534, 243, 'Esteban del Mar', 19),
(535, 2258, 'Puerto Ian', 16),
(536, 25376, 'Lorenzo del Sur', 18),
(537, 35902, 'Don Michelle', 18),
(538, 62040, 'Villa Javier', 18),
(539, 6804, 'Puerto Alexa', 11),
(540, 1595, 'Villa José del Sur', 18),
(541, 34051, 'Colón del Este', 17),
(542, 3644, 'San Mateo', 21),
(543, 32551, 'Puerto Daniel', 3),
(544, 103, 'Don María Camila del Mirador', 8),
(545, 772, 'Irizarry del Mirador', 4),
(546, 8693, 'San Mateo del Mar', 10),
(547, 84915, 'Juan Pablo del Este', 6),
(548, 78909, 'Girón del Norte', 18),
(549, 5518, 'San Mateo del Sur', 21),
(550, 55640, 'Gral. Christian del Mar', 6),
(551, 3659, 'Villa Juan Pablo', 8),
(552, 38035, 'Villa Alessandra del Norte', 23),
(553, 80340, 'Duarte del Mirador', 23),
(554, 70369, 'Lovato del Sur', 11),
(555, 4335, 'Puerto Constanza', 18),
(556, 5212, 'San Miranda del Norte', 14),
(557, 339, 'Don Josefa del Mirador', 13),
(558, 6520, 'San Jerónimo del Mar', 16),
(559, 59651, 'Ibarra del Norte', 5),
(560, 1714, 'Gral. Miranda del Este', 5),
(561, 82309, 'Bravo del Sur', 18),
(562, 9496, 'Juan Manuel del Mar', 8),
(563, 81157, 'Puerto Elena del Oeste', 2),
(564, 70677, 'Villa Mateo', 14),
(565, 23004, 'San Sebastián', 21),
(566, 59520, 'Laura del Mirador', 23),
(567, 28628, 'Jorge del Norte', 23),
(568, 3007, 'Paredes del Mirador', 10),
(569, 8253, 'Leonardo del Mar', 3),
(570, 7004, 'Montserrat del Mar', 11),
(571, 25065, 'Guevara del Este', 7),
(572, 33989, 'San Antonella del Mirador', 16),
(573, 333, 'San Ashley del Mirador', 22),
(574, 36354, 'Luis del Norte', 6),
(575, 1833, 'Villegas del Mar', 10),
(576, 4945, 'Puerto Samantha del Oeste', 9),
(577, 11827, 'Juan Sebastián del Norte', 17),
(578, 5308, 'Villa Victoria', 6),
(579, 5589, 'Lautaro del Mar', 21),
(580, 16208, 'Puerto Nicole del Sur', 22),
(581, 3268, 'Villa María Paula', 19),
(582, 78200, 'Maestas del Sur', 13),
(583, 1811, 'Mía del Norte', 12),
(584, 8876, 'Juan Sebastián del Este', 21),
(585, 78314, 'Adame del Oeste', 12),
(586, 2498, 'Kevin del Este', 17),
(587, 38261, 'Gral. María José del Norte', 8),
(588, 16339, 'Don Rodrigo del Oeste', 23),
(589, 86282, 'Julián del Oeste', 1),
(590, 79030, 'Felipe del Sur', 22),
(591, 6872, 'Renata del Mirador', 10),
(592, 7363, 'Don Dylan del Mirador', 3),
(593, 32968, 'Esparza del Sur', 19),
(594, 95077, 'San Hipólito', 23),
(595, 79372, 'Don Sophie', 7),
(596, 46625, 'Gral. Micaela', 19),
(597, 77090, 'Villa Bautista', 17),
(598, 1859, 'Hidalgo del Mirador', 7),
(599, 66405, 'Solís del Sur', 20),
(600, 74399, 'Samantha del Sur', 18),
(601, 5628, 'Domínquez del Norte', 23),
(602, 12304, 'Don Abril del Este', 20),
(603, 98437, 'Abrego del Mar', 5),
(604, 7863, 'Don Thiago del Oeste', 22),
(605, 82431, 'Herrera del Mirador', 20),
(606, 86240, 'Juan José del Norte', 5),
(607, 5319, 'Cotto del Norte', 21),
(608, 3079, 'Benavides del Mar', 22),
(609, 27527, 'Gral. Oliva', 10),
(610, 4035, 'Alex del Norte', 14),
(611, 30801, 'Tafoya del Sur', 23),
(612, 3803, 'Villa Mario del Sur', 1),
(613, 3350, 'Mario del Mar', 13),
(614, 6438, 'Mondragón del Mar', 19),
(615, 9331, 'Don Camila', 19),
(616, 2665, 'Delarosa del Norte', 2),
(617, 1979, 'Carla del Este', 7),
(618, 5334, 'San Samantha', 23),
(619, 36390, 'Adrián del Sur', 10),
(620, 147, 'Don Alma', 18),
(621, 8441, 'Villa Allison', 23),
(622, 2221, 'Luciano del Norte', 20),
(623, 53468, 'Puerto Andrea del Mirador', 20),
(624, 84315, 'Renata del Este', 8),
(625, 49458, 'Escamilla del Este', 13),
(626, 27841, 'Reynoso del Mirador', 16),
(627, 97304, 'Don Sophie del Norte', 15),
(628, 3933, 'Puerto Dylan', 18),
(629, 8571, 'Gral. María Alejandra', 16),
(630, 6487, 'Pulido del Mirador', 10),
(631, 6967, 'Miranda del Este', 10),
(632, 98322, 'Alexander del Oeste', 7),
(633, 5130, 'San Jesús del Mar', 14),
(634, 799, 'Puerto Amelia', 16),
(635, 82976, 'Lugo del Sur', 11),
(636, 6057, 'Villa Fabiana del Norte', 9),
(637, 4164, 'Juliana del Norte', 4),
(638, 6798, 'Don Valentino', 17),
(639, 36886, 'Valentino del Mirador', 10),
(640, 58208, 'Villa Matthew', 16),
(641, 34017, 'Granados del Mar', 5),
(642, 2947, 'Florencia del Oeste', 11),
(643, 64439, 'Villa Clara del Mirador', 7),
(644, 65719, 'Don Ana', 13),
(645, 4067, 'Solorzano del Oeste', 13),
(646, 3476, 'Pedro del Mar', 22),
(647, 24023, 'Gral. Ariana del Mar', 2),
(648, 33714, 'Anthony del Mar', 11),
(649, 9216, 'Santiago del Norte', 2),
(650, 1533, 'Miguel Ángel del Norte', 14),
(651, 9624, 'Gral. Ana', 12),
(652, 14260, 'Villa Mariangel', 1),
(653, 5837, 'Josefina del Este', 11),
(654, 5251, 'Puerto Juan José del Este', 18),
(655, 71376, 'Laura del Mirador', 4),
(656, 9853, 'Gral. Delfina', 7),
(657, 93080, 'Montserrat del Mar', 6),
(658, 2504, 'San Nahuel del Oeste', 11),
(659, 1856, 'Puerto Adriana del Sur', 7),
(660, 3128, 'Puerto Aitana del Oeste', 20),
(661, 3012, 'Villa Luciana', 13),
(662, 4681, 'Villa Benjamín', 18),
(663, 50409, 'Chávez del Norte', 8),
(664, 1509, 'Villa Hidalgo del Mirador', 23),
(665, 9202, 'San Adriana del Mirador', 2),
(666, 4847, 'Puerto Alejandro', 3),
(667, 25638, 'Mireles del Norte', 5),
(668, 3474, 'Mariana del Mirador', 9),
(669, 44993, 'Don Paula', 3),
(670, 48725, 'Puerto Florencia', 8),
(671, 41607, 'Don Miranda del Oeste', 11),
(672, 8724, 'Villa Sara del Este', 5),
(673, 25857, 'Gabriel del Mirador', 18),
(674, 30581, 'Gael del Mirador', 20),
(675, 3892, 'Guerra del Sur', 5),
(676, 4327, 'Gálvez del Mirador', 16),
(677, 2154, 'Puerto Bruno del Sur', 18),
(678, 8856, 'Don Paulina', 23),
(679, 28188, 'San Daniel', 3),
(680, 147, 'Alaniz del Mar', 16),
(681, 3005, 'Estrada del Este', 12),
(682, 5999, 'Olmos del Mar', 5),
(683, 7005, 'Palomino del Norte', 2),
(684, 8188, 'María Paula del Mar', 12),
(685, 43895, 'San Irene', 12),
(686, 4170, 'Reynoso del Oeste', 8),
(687, 6524, 'Villa Dylan', 3),
(688, 68819, 'Antonio del Mar', 14),
(689, 345, 'Gral. Anthony del Mirador', 4),
(690, 8620, 'Portillo del Mirador', 13),
(691, 9039, 'Carrasquillo del Mirador', 9),
(692, 3174, 'Almanza del Oeste', 13),
(693, 4540, 'Puerto Valeria', 5),
(694, 94674, 'Victoria del Sur', 12),
(695, 87084, 'Gaytán del Sur', 6),
(696, 9093, 'Medrano del Norte', 12),
(697, 603, 'Gral. Mía', 14),
(698, 5267, 'Villa Clara', 18),
(699, 3026, 'San María Camila del Sur', 17),
(700, 7257, 'Montserrat del Norte', 16),
(701, 529, 'Gral. Bruno', 11),
(702, 787, 'Adame del Oeste', 13),
(703, 39760, 'Alex del Mirador', 13),
(704, 43654, 'Villa Vicente', 20),
(705, 5084, 'Sierra del Oeste', 16),
(706, 7177, 'Puerto Ashley', 13),
(707, 6996, 'Ignacio del Mar', 23),
(708, 15879, 'Villa Emilia del Sur', 10),
(709, 3084, 'Villa Lorenzo del Sur', 12),
(710, 32162, 'Puerto Franco', 14),
(711, 65262, 'Puerto Amelia', 23),
(712, 8953, 'Gral. Hipólito', 12),
(713, 43912, 'José del Mar', 19),
(714, 93178, 'Delfina del Oeste', 15),
(715, 3588, 'San José', 11),
(716, 1502, 'San Lola del Mirador', 6),
(717, 3758, 'Gral. Facundo', 7),
(718, 5928, 'Prieto del Mirador', 22),
(719, 60681, 'Sara Sofía del Norte', 20),
(720, 15910, 'Antonio del Mar', 19),
(721, 12234, 'Don Rafaela del Sur', 15),
(722, 8601, 'Gral. Agustina', 2),
(723, 64350, 'Cervantes del Mirador', 13),
(724, 3373, 'Puerto Olivia del Sur', 5),
(725, 59264, 'Valentino del Sur', 18),
(726, 28574, 'Don Daniela del Norte', 13),
(727, 1458, 'Christian del Mar', 4),
(728, 2103, 'Miranda del Este', 2),
(729, 63605, 'Villa Julia', 4),
(730, 88960, 'Sophie del Mar', 1),
(731, 76045, 'Don Gabriel del Sur', 23),
(732, 2553, 'Ana Sofía del Sur', 23),
(733, 92313, 'Don Pablo', 21),
(734, 92452, 'Fabiana del Norte', 21),
(735, 38805, 'Villa Adriana', 8),
(736, 5578, 'Santana del Sur', 18),
(737, 7254, 'Esteban del Mar', 12),
(738, 75673, 'María José del Mar', 11),
(739, 3351, 'Gral. Emilia del Norte', 16),
(740, 8514, 'Puerto Alan', 9),
(741, 86008, 'San Miguel Ángel', 2),
(742, 4022, 'Amanda del Mirador', 5),
(743, 3929, 'Puerto María Alejandra', 22),
(744, 4002, 'Gral. Axel', 19),
(745, 96931, 'Olivia del Este', 3),
(746, 40895, 'Ivan del Mirador', 20),
(747, 76589, 'Vélez del Norte', 22),
(748, 74189, 'Gral. Delfina', 6),
(749, 8094, 'Gral. Juan José', 6),
(750, 9308, 'Valle del Este', 11),
(751, 79073, 'Villa Juan', 21),
(752, 9609, 'Gastélum del Mirador', 7),
(753, 69024, 'Montoya del Sur', 17),
(754, 10663, 'Don Jerónimo', 11),
(755, 7790, 'Gral. Constanza del Sur', 20),
(756, 89455, 'Reynoso del Mar', 5),
(757, 21898, 'San Gabriela del Oeste', 1),
(758, 8274, 'Puerto Luis', 4),
(759, 88791, 'Juan del Este', 5),
(760, 47386, 'Villa Alexander', 18),
(761, 13810, 'Catalina del Este', 16),
(762, 63950, 'Don Gabriel', 16),
(763, 1941, 'Aranda del Sur', 3),
(764, 9381, 'Ivan del Mar', 1),
(765, 6315, 'Ocampo del Este', 13),
(766, 7256, 'Araña del Este', 22),
(767, 3129, 'Puerto Pedro', 7),
(768, 2617, 'Horacio del Sur', 16),
(769, 93660, 'San Magdalena', 12),
(770, 93537, 'Villa Abril del Este', 4),
(771, 69556, 'Arevalo del Norte', 2),
(772, 9594, 'San Carolina del Mar', 5),
(773, 3193, 'Alonso del Mirador', 6),
(774, 4197, 'Hidalgo del Mar', 7),
(775, 1753, 'Puerto Miranda del Este', 5),
(776, 93612, 'Rubio del Oeste', 10),
(777, 7690, 'Linares del Este', 19),
(778, 7256, 'Villa Alejandra del Mirador', 14),
(779, 9999, 'Marroquín del Este', 4),
(780, 73375, 'San Axel del Mirador', 4),
(781, 65290, 'San Isaac', 2),
(782, 3754, 'Villa Regina del Oeste', 21),
(783, 16037, 'Avilés del Sur', 14),
(784, 7241, 'Isabel del Mirador', 21),
(785, 4613, 'Puerto Sebastián del Oeste', 16),
(786, 7333, 'Barreto del Norte', 3),
(787, 8221, 'Villa Eduardo', 7),
(788, 54068, 'Puerto Santiago', 7),
(789, 6815, 'Juan Sebastián del Oeste', 19),
(790, 56853, 'Gral. Mariana', 1),
(791, 3653, 'Camarillo del Este', 8),
(792, 49315, 'Adrián del Mar', 10),
(793, 44817, 'Puerto Violeta del Sur', 10),
(794, 4611, 'Villa Victoria del Este', 11),
(795, 3910, 'Rosado del Mirador', 3),
(796, 79441, 'Montañez del Sur', 9),
(797, 71516, 'Puerto Ariana del Sur', 21),
(798, 23706, 'Mateo del Este', 20),
(799, 29808, 'Valentino del Norte', 7),
(800, 2497, 'Anthony del Este', 7),
(801, 20139, 'Puerto Bruno', 14),
(802, 85408, 'Don Emma', 22),
(803, 6672, 'Gral. Ximena del Mirador', 6),
(804, 95481, 'Carlos del Mar', 23),
(805, 89951, 'San Valeria del Norte', 17),
(806, 7977, 'Daniela del Norte', 19),
(807, 50962, 'Puerto Kevin', 7),
(808, 7610, 'Anthony del Sur', 17),
(809, 1591, 'Don Jorge', 17),
(810, 2339, 'Daniel del Sur', 9),
(811, 2863, 'Ferrer del Mar', 4),
(812, 15850, 'Gral. Emmanuel', 23),
(813, 2878, 'Don Bautista del Mirador', 17),
(814, 41112, 'Puerto Ana Paula', 14),
(815, 42962, 'Juan Manuel del Este', 21),
(816, 8697, 'Marín del Mirador', 11),
(817, 9535, 'Don Paula del Este', 19),
(818, 97170, 'Calderón del Mirador', 15),
(819, 3516, 'Mía del Este', 12),
(820, 29807, 'Villa Dante', 19),
(821, 17528, 'San Julián del Norte', 21),
(822, 7108, 'Villa Montserrat del Sur', 6),
(823, 2143, 'Sophie del Oeste', 22),
(824, 489, 'Jesús del Sur', 8),
(825, 165, 'Alejandra del Mar', 18),
(826, 3959, 'Antonia del Sur', 9),
(827, 73442, 'San Olivia del Mirador', 20),
(828, 70775, 'Puerto Felipe del Oeste', 9),
(829, 50089, 'Ruelas del Oeste', 12),
(830, 23911, 'Puerto Francisco del Sur', 15),
(831, 6266, 'Zarate del Oeste', 23),
(832, 64686, 'Soria del Oeste', 10),
(833, 12251, 'Samantha del Sur', 22),
(834, 18258, 'Magdalena del Oeste', 6),
(835, 47608, 'Gral. Luciana', 2),
(836, 45133, 'Bruno del Este', 16),
(837, 28102, 'Gral. Elena', 6),
(838, 36185, 'Ornela del Mar', 14),
(839, 6825, 'Don Emiliano del Oeste', 13),
(840, 6580, 'Josué del Oeste', 10),
(841, 3900, 'Bueno del Sur', 19),
(842, 41285, 'Vélez del Mirador', 13),
(843, 60274, 'Gallardo del Mirador', 21),
(844, 8105, 'Angulo del Este', 15),
(845, 55491, 'Fonseca del Mirador', 9),
(846, 25390, 'León del Oeste', 4),
(847, 3630, 'María José del Mirador', 9),
(848, 67226, 'Hurtado del Oeste', 3),
(849, 54091, 'San Ana Sofía', 14),
(850, 2054, 'Villa Hipólito del Sur', 7),
(851, 5311, 'Ignacio del Mirador', 10),
(852, 7608, 'Javier del Mar', 17),
(853, 41894, 'Josué del Este', 15),
(854, 8032, 'Puerto Máximo del Oeste', 20),
(855, 17178, 'Valery del Sur', 1),
(856, 2900, 'Puerto Ivanna del Este', 20),
(857, 85221, 'Guajardo del Oeste', 14),
(858, 19623, 'Gral. Christian del Sur', 1),
(859, 3377, 'Gral. Sebastián', 21),
(860, 5675, 'Gral. Valery', 16),
(861, 75063, 'Adriana del Norte', 4),
(862, 4380, 'Gral. Axel', 12),
(863, 21668, 'Olivia del Oeste', 8),
(864, 5688, 'San Valentino', 4),
(865, 72062, 'Serrano del Este', 10),
(866, 6021, 'Puerto Carlos', 9),
(867, 3028, 'Villa María Camila del Mirador', 11),
(868, 8457, 'Don Sergio del Sur', 16),
(869, 5293, 'Villa Máximo del Oeste', 19),
(870, 7215, 'Hipólito del Sur', 13),
(871, 2132, 'San Santino del Sur', 19),
(872, 8411, 'San Valeria', 4),
(873, 79023, 'Villa Juan Esteban del Norte', 9),
(874, 67842, 'Don Alan', 12),
(875, 32501, 'San Valeria del Oeste', 19),
(876, 57204, 'Vaca del Sur', 16),
(877, 1447, 'Padrón del Oeste', 18),
(878, 6303, 'Don Ana Sofía', 6),
(879, 3489, 'José del Este', 18),
(880, 8230, 'Laura del Mar', 6),
(881, 3510, 'Villa Adrián', 12),
(882, 3717, 'Godínez del Mirador', 11),
(883, 69536, 'Gral. Fabiana del Este', 12),
(884, 7905, 'Abril del Oeste', 8),
(885, 2922, 'San Máximo del Este', 5),
(886, 3916, 'María Fernanda del Mirador', 19),
(887, 47870, 'Isabella del Oeste', 1),
(888, 6504, 'San Michelle', 9),
(889, 94044, 'Márquez del Norte', 18),
(890, 9482, 'Urías del Este', 12),
(891, 3205, 'San Samantha del Norte', 13),
(892, 95938, 'Puerto Amelia del Este', 1),
(893, 56300, 'Vélez del Norte', 14),
(894, 45893, 'Gral. Fernando', 16),
(895, 13444, 'Apodaca del Mirador', 2),
(896, 54185, 'Ramón del Norte', 2),
(897, 357, 'Gral. Nahuel del Norte', 5),
(898, 23324, 'Mascareñas del Mar', 9),
(899, 87484, 'San Valery', 15),
(900, 31269, 'Puerto Isabella del Mirador', 4),
(901, 32097, 'Valencia del Este', 5),
(902, 75518, 'Cardona del Este', 16),
(903, 1556, 'Don Bautista del Este', 5),
(904, 40703, 'Villa Alonso', 4),
(905, 1600, 'Violeta del Mirador', 5),
(906, 34039, 'Gral. Eduardo', 17),
(907, 5820, 'Cristóbal del Este', 10),
(908, 5123, 'Don Adriana', 14),
(909, 7440, 'San Ignacio del Sur', 10),
(910, 67108, 'Don Pablo del Oeste', 23),
(911, 38265, 'San Emiliano del Sur', 8),
(912, 4932, 'Herrera del Este', 13),
(913, 89529, 'Don Mario', 5),
(914, 9768, 'Don Daniela', 18),
(915, 613, 'Puerto Michelle del Este', 16),
(916, 2292, 'Gral. José del Este', 6),
(917, 73920, 'Rincón del Mar', 20),
(918, 4561, 'Natalia del Oeste', 21),
(919, 95573, 'Don Alexander', 4),
(920, 85198, 'Don Ivan', 8),
(921, 84414, 'Josefina del Norte', 8),
(922, 6340, 'Magdalena del Norte', 23),
(923, 82846, 'San Victoria del Mar', 16),
(924, 95215, 'San Sofía', 8),
(925, 22413, 'Villa Juan Pablo del Sur', 21),
(926, 5892, 'Cuellar del Mirador', 11),
(927, 63442, 'San Gabriel del Oeste', 16),
(928, 48797, 'Villa Ivan', 10),
(929, 7615, 'San Josué', 22),
(930, 3383, 'Simón del Mar', 1),
(931, 47048, 'Villa Oliva', 7),
(932, 7631, 'Puerto Rafaela del Norte', 10),
(933, 79421, 'San Santino del Mar', 13),
(934, 84726, 'Villa Axel', 18),
(935, 7178, 'San Ian del Mar', 8),
(936, 22428, 'Fabiana del Norte', 22),
(937, 37845, 'Zelaya del Norte', 18),
(938, 5731, 'Gral. Maite del Norte', 16),
(939, 59503, 'Puerto Delfina del Mirador', 17),
(940, 4683, 'Olivia del Oeste', 10),
(941, 77564, 'Montaño del Norte', 1),
(942, 3211, 'Lucía del Mirador', 8),
(943, 9698, 'Don Michelle', 20),
(944, 3576, 'Romo del Mirador', 10),
(945, 41922, 'Villa Dante', 2),
(946, 7012, 'Irizarry del Mirador', 15),
(947, 3346, 'Puerto Julián del Oeste', 1),
(948, 9005, 'San Sophie', 22),
(949, 7876, 'San Rafael', 16),
(950, 91459, 'Ashley del Mirador', 2),
(951, 1821, 'Don Gael', 21),
(952, 3392, 'San Samuel', 2),
(953, 75773, 'Puerto Santino del Sur', 12),
(954, 7341, 'Clara del Mirador', 5),
(955, 825, 'San Cristóbal', 4),
(956, 22245, 'Lovato del Este', 5),
(957, 48545, 'Villa Catalina del Este', 9),
(958, 98351, 'Gral. Ana Paula', 22),
(959, 40983, 'Pedro del Oeste', 19),
(960, 74513, 'Puerto Victoria', 8),
(961, 91704, 'Christopher del Este', 6),
(962, 20952, 'Mesa del Mar', 14),
(963, 18337, 'Villa Juan Diego del Mirador', 7),
(964, 25801, 'Matthew del Mar', 22),
(965, 2534, 'Don Abril', 22),
(966, 1419, 'Miranda del Mirador', 19),
(967, 84287, 'Don Renata', 3),
(968, 77299, 'Ivanna del Mar', 23),
(969, 98454, 'Manuel del Oeste', 11),
(970, 71926, 'Godoy del Sur', 12),
(971, 7439, 'Fernando del Este', 8),
(972, 3341, 'San Agustín', 8),
(973, 17492, 'Miguel del Este', 9),
(974, 93442, 'Puerto Bruno del Oeste', 4),
(975, 6050, 'San Sebastián', 15),
(976, 49207, 'Puerto Manuela', 22),
(977, 69121, 'Villa Silvana', 2),
(978, 4447, 'Melgar del Sur', 17),
(979, 76957, 'Villa Juan José', 14),
(980, 7028, 'Valeria del Sur', 10),
(981, 1591, 'Segovia del Oeste', 14),
(982, 29493, 'Aragón del Sur', 7),
(983, 9817, 'Villa Máximo del Mirador', 22),
(984, 7411, 'San Damián', 12),
(985, 6300, 'San Paula del Norte', 2),
(986, 5711, 'Fernández del Norte', 12),
(987, 4475, 'Urías del Oeste', 4),
(988, 8484, 'Pedro del Norte', 16),
(989, 1024, 'San Delfina', 23),
(990, 32190, 'Ivanna del Norte', 8),
(991, 4562, 'Villa Emily del Oeste', 1),
(992, 8104, 'Gral. Julián del Este', 13),
(993, 7016, 'Adriana del Norte', 14),
(994, 7669, 'Puerto Anthony del Sur', 13),
(995, 61442, 'Leyva del Mar', 2),
(996, 88114, 'Villa Oliva del Oeste', 21),
(997, 97162, 'Martín del Mar', 2),
(998, 9848, 'Sara del Este', 21),
(999, 63740, 'Nevárez del Sur', 6),
(1000, 18149, 'Villa Manuela del Norte', 7);

-- 
-- Dumping data for table configuracion
--
-- Table soliris.configuracion does not contain any data (it is empty)

-- 
-- Dumping data for table aux_old
--
-- Table soliris.aux_old does not contain any data (it is empty)

-- 
-- Dumping data for table auxiliar
--
INSERT INTO auxiliar VALUES
(3, '10 Mg', 'dosis', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(4, '25 Mg', 'dosis', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(5, '21', 'unidades', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(6, '42', 'unidades', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(7, '63', 'unidades', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(8, 'Scienza', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(9, 'ROS FAR', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(11, 'META', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(13, 'MEDICUS', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(16, 'SMG', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(18, 'Hospital Italiano', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(19, 'OMINT', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(21, 'Hospital Churruca', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(22, 'DRO FAR', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(33, 'Hospital Aleman', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(34, 'Hospital Britanico', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(35, 'IOSE', 'canal', '---', 'Activo', NULL, '2017-08-15 08:33:16'),
(44, 'Mieloma Múltiple', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(45, 'Gamapatia monoclonal', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(46, 'Linfoma no Hodgkin', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(47, '15 Mg', 'dosis', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(48, 'Mielodisplasia', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(49, 'Mielofibrosis', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(50, 'LLC', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(51, 'Linfoma de manto', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(52, 'Amiloidosis', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(53, 'Plasmocitoma multiporal', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(54, 'POEMS', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(55, '5 Mg', 'dosis', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(56, 'Linfoma', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(57, 'Linfoma Hodgkin', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(60, 'ONCOFARMA', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(61, 'REDFARM', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(62, 'MONUMENTO', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(64, 'AVANTFAR', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(65, 'WENT', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(67, 'Orien', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(68, 'FARMA KD', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(72, 'MEDITERRANEA', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(73, 'EXCELL PHARMA', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(81, 'CICLOFAR', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(83, 'CITY PHARMA GROUP', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(87, 'In.S.S.Se.P', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(89, 'LPC', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(90, 'SIFAR', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(91, 'Anemia', 'patologia', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(92, 'ONCOLIFE', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(93, 'ABC', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(94, 'MEDIFAR', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(96, 'AUDIFARM', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(98, 'Activo', 'Controles_Farmacologicos', 'RVL', 'Activo', NULL, '2017-08-15 08:33:16'),
(99, 'NEO SALUD', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(100, 'SUIZO', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(101, 'METRO KD', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(102, 'PROV HOSPITALARIOS', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(103, 'SOLS', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(104, 'zbc', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(105, 'DIGMA', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(106, 'GLOBAL MED', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(108, 'CSF - Compañia de Servicios Farmaceuticos', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(109, 'OSECAC ( SEGUERMED)', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16'),
(110, 'Dospu', 'canal', '', 'Activo', NULL, '2017-08-15 08:33:16');

--
-- Set default database
--
USE soliris;

DELIMITER $$

--
-- Create trigger `maestro_ventas_after_insert`
--
CREATE
DEFINER = 'root'@'localhost'
TRIGGER maestro_ventas_after_insert
AFTER INSERT
ON maestro_ventas
FOR EACH ROW
BEGIN

  INSERT INTO maestro_ventas_transaccion (estado_id, usuario_id, maestro_id, tipo_venta_id, fecha_stamp)
    VALUES (NEW.estado_id, NEW.usuario_id, NEW.id, NEW.venta_tipo_id, NOW());

END
$$

--
-- Create trigger `maestro_ventas_ususario_mod`
--
CREATE
DEFINER = 'root'@'localhost'
TRIGGER maestro_ventas_ususario_mod
BEFORE INSERT
ON maestro_ventas
FOR EACH ROW
BEGIN

  -- Al generarse una venta, el usuario modificador es el mismo que el usuario creador

  SET NEW.usuario_mod_id = NEW.usuario_id;

END
$$

--
-- Create trigger `log_canales`
--
CREATE
DEFINER = 'root'@'localhost'
TRIGGER log_canales
BEFORE UPDATE
ON canales
FOR EACH ROW
BEGIN

  IF old.estado_id <> new.estado_id THEN
    INSERT INTO soliris_log
    SET usuario = new.usuario_audit,
        fecha = NOW(),
        accion = CONCAT(old.estado, '->', new.estado),
        registro = 'Estado',
        tabla = 'Canales',
        id_registro = old.id;
  END IF;

  IF old.canal <> new.canal THEN
    INSERT INTO soliris_log
    SET usuario = new.usuario_audit,
        fecha = NOW(),
        accion = (old.canal, '->', new.canal),
        registro = 'Canal',
        tabla = 'Canales',
        id_registro = old.id;
  END IF;

END
$$

DELIMITER ;

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;